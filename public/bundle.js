!function(t){function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)e.d(i,r,function(e){return t[e]}.bind(null,r));return i},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="/",e(e.s=56)}([function(t,e,n){var i=n(24)("wks"),r=n(16),a=n(1).Symbol,o="function"==typeof a;(t.exports=function(t){return i[t]||(i[t]=o&&a[t]||(o?a:r)("Symbol."+t))}).store=i},function(t){var e=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=e)},function(t,e,n){var i=n(1),r=n(10),a=n(6),o=n(9),s=n(12),l="prototype",c=function(t,e,n){var u,h,d,f,p=t&c.F,m=t&c.G,g=t&c.S,v=t&c.P,x=t&c.B,_=m?i:g?i[e]||(i[e]={}):(i[e]||{})[l],y=m?r:r[e]||(r[e]={}),b=y[l]||(y[l]={});for(u in m&&(n=e),n)d=((h=!p&&_&&void 0!==_[u])?_:n)[u],f=x&&h?s(d,i):v&&"function"==typeof d?s(Function.call,d):d,_&&o(_,u,d,t&c.U),y[u]!=d&&a(y,u,f),v&&b[u]!=d&&(b[u]=d)};i.core=r,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,t.exports=c},function(t,e,n){var i=n(7);t.exports=function(t){if(!i(t))throw TypeError(t+" is not an object!");return t}},function(t,e,n){var i=n(3),r=n(39),a=n(28),o=Object.defineProperty;e.f=n(5)?Object.defineProperty:function(t,e,n){if(i(t),e=a(e,!0),i(n),r)try{return o(t,e,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){t.exports=!n(8)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,e,n){var i=n(4),r=n(15);t.exports=n(5)?function(t,e,n){return i.f(t,e,r(1,n))}:function(t,e,n){return t[e]=n,t}},function(t){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){var i=n(1),r=n(6),a=n(11),o=n(16)("src"),s=n(59),l="toString",c=(""+s).split(l);n(10).inspectSource=function(t){return s.call(t)},(t.exports=function(t,e,n,s){var l="function"==typeof n;l&&(a(n,"name")||r(n,"name",e)),t[e]===n||(l&&(a(n,o)||r(n,o,t[e]?""+t[e]:c.join(e+""))),t===i?t[e]=n:s?t[e]?t[e]=n:r(t,e,n):(delete t[e],r(t,e,n)))})(Function.prototype,l,function(){return"function"==typeof this&&this[o]||s.call(this)})},function(t){var e=t.exports={version:"2.6.5"};"number"==typeof __e&&(__e=e)},function(t){var e={}.hasOwnProperty;t.exports=function(t,n){return e.call(t,n)}},function(t,e,n){var i=n(25);t.exports=function(t,e,n){return i(t),void 0===e?t:1===n?function(n){return t.call(e,n)}:2===n?function(n,i){return t.call(e,n,i)}:3===n?function(n,i,r){return t.call(e,n,i,r)}:function(){return t.apply(e,arguments)}}},function(t,e,n){var i=n(42),r=n(23);t.exports=function(t){return i(r(t))}},function(t){t.exports=!1},function(t){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t){var e=0,n=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++e+n).toString(36))}},function(t){t.exports={}},function(t,e,n){var i=n(41),r=n(30);t.exports=Object.keys||function(t){return i(t,r)}},function(t){var e={}.toString;t.exports=function(t){return e.call(t).slice(8,-1)}},function(t,e,n){var i=n(22),r=Math.min;t.exports=function(t){return 0<t?r(i(t),9007199254740991):0}},function(t,e,n){var i=n(23);t.exports=function(t){return Object(i(t))}},function(t){var e=Math.ceil,n=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(0<t?n:e)(t)}},function(t){t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e,n){var i=n(10),r=n(1),a="__core-js_shared__",o=r[a]||(r[a]={});(t.exports=function(t,e){return o[t]||(o[t]=void 0===e?{}:e)})("versions",[]).push({version:i.version,mode:n(14)?"pure":"global",copyright:"Â© 2019 Denis Pushkarev (zloirock.ru)"})},function(t){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e,n){var i=n(4).f,r=n(11),a=n(0)("toStringTag");t.exports=function(t,e,n){t&&!r(t=n?t:t.prototype,a)&&i(t,a,{configurable:!0,value:e})}},function(t,e,n){var i=n(7),r=n(1).document,a=i(r)&&i(r.createElement);t.exports=function(t){return a?r.createElement(t):{}}},function(t,e,n){var i=n(7);t.exports=function(t,e){if(!i(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!i(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var i=n(24)("keys"),r=n(16);t.exports=function(t){return i[t]||(i[t]=r(t))}},function(t){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(t,e,n){var i=n(19),r=n(0)("toStringTag"),a="Arguments"==i(function(){return arguments}());t.exports=function(t){var e,n,o;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(e){}}(e=Object(t),r))?n:a?i(e):"Object"==(o=i(e))&&"function"==typeof e.callee?"Arguments":o}},function(t,e,n){"use strict";var i=n(3);t.exports=function(){var t=i(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,n){var i=n(19);t.exports=Array.isArray||function(t){return"Array"==i(t)}},function(t,e,n){var i=n(12),r=n(42),a=n(21),o=n(20),s=n(72);t.exports=function(t,e){var n=1==t,l=4==t,c=6==t,u=e||s;return function(e,s,h){for(var d,f,p=a(e),m=r(p),g=i(s,h,3),v=o(m.length),x=0,_=n?u(e,v):2==t?u(e,0):void 0;v>x;x++)if((5==t||c||x in m)&&(f=g(d=m[x],x,p),t))if(n)_[x]=f;else if(f)switch(t){case 3:return!0;case 5:return d;case 6:return x;case 2:_.push(d)}else if(l)return!1;return c?-1:3==t||l?l:_}}},function(t,e,n){"use strict";var i=n(8);t.exports=function(t,e){return!!t&&i(function(){e?t.call(null,function(){},1):t.call(null)})}},function(t,e){e.f={}.propertyIsEnumerable},function(t,e,n){var i=n(22),r=n(23);t.exports=function(t){return function(e,n){var a,o,s=r(e)+"",l=i(n),c=s.length;return 0>l||l>=c?t?"":void 0:55296>(a=s.charCodeAt(l))||56319<a||l+1===c||56320>(o=s.charCodeAt(l+1))||57343<o?t?s.charAt(l):a:t?s.slice(l,l+2):o-56320+(a-55296<<10)+65536}}},function(t,e,n){"use strict";var i=n(14),r=n(2),a=n(9),o=n(6),s=n(17),l=n(60),c=n(26),u=n(64),h=n(0)("iterator"),d=!([].keys&&"next"in[].keys()),f="keys",p="values",m=function(){return this};t.exports=function(t,e,n,g,v,x,_){l(n,e,g);var y,b,w,E=function(t){return!d&&t in L?L[t]:function(){return new n(this,t)}},M=e+" Iterator",S=v==p,T=!1,L=t.prototype,A=L[h]||L["@@iterator"]||v&&L[v],R=A||E(v),P=v?S?E("entries"):R:void 0,C="Array"==e&&L.entries||A;if(C&&((w=u(C.call(new t)))!==Object.prototype&&w.next&&(c(w,M,!0),!i&&"function"!=typeof w[h]&&o(w,h,m))),S&&A&&A.name!==p&&(T=!0,R=function(){return A.call(this)}),(!i||_)&&(d||T||!L[h])&&o(L,h,R),s[e]=R,s[M]=m,v)if(y={values:S?R:E(p),keys:x?R:E(f),entries:P},_)for(b in y)b in L||a(L,b,y[b]);else r(r.P+r.F*(d||T),e,y);return y}},function(t,e,n){t.exports=!n(5)&&!n(8)(function(){return 7!=Object.defineProperty(n(27)("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){var i=n(3),r=n(61),a=n(30),o=n(29)("IE_PROTO"),s=function(){},l="prototype",c=function(){var t,e=n(27)("iframe"),i=a.length;for(e.style.display="none",n(43).appendChild(e),e.src="javascript:",(t=e.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),c=t.F;i--;)delete c[l][a[i]];return c()};t.exports=Object.create||function(t,e){var n;return null===t?n=c():(s[l]=i(t),n=new s,s[l]=null,n[o]=t),void 0===e?n:r(n,e)}},function(t,e,n){var i=n(11),r=n(13),a=n(62)(!1),o=n(29)("IE_PROTO");t.exports=function(t,e){var n,s=r(t),l=0,c=[];for(n in s)n!=o&&i(s,n)&&c.push(n);for(;e.length>l;)i(s,n=e[l++])&&(~a(c,n)||c.push(n));return c}},function(t,e,n){var i=n(19);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==i(t)?t.split(""):Object(t)}},function(t,e,n){var i=n(1).document;t.exports=i&&i.documentElement},function(t,e,n){var i=n(3);t.exports=function(t,e,n,r){try{return r?e(i(n)[0],n[1]):e(n)}catch(n){var a=t.return;throw void 0!==a&&i(a.call(t)),n}}},function(t,e,n){var i=n(17),r=n(0)("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(i.Array===t||a[r]===t)}},function(t,e,n){var i=n(31),r=n(0)("iterator"),a=n(17);t.exports=n(10).getIteratorMethod=function(t){if(null!=t)return t[r]||t["@@iterator"]||a[i(t)]}},function(t,e,n){var i=n(0)("iterator"),r=!1;try{var a=[7][i]();a.return=function(){r=!0},Array.from(a,function(){throw 2})}catch(e){}t.exports=function(t,e){if(!e&&!r)return!1;var n=!1;try{var a=[7],o=a[i]();o.next=function(){return{done:n=!0}},a[i]=function(){return o},t(a)}catch(e){}return n}},function(t,e,n){"use strict";var i=n(75),r=n(76),a=n(17),o=n(13);t.exports=n(38)(Array,"Array",function(t,e){this._t=o(t),this._i=0,this._k=e},function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,r(1)):r(0,"keys"==e?n:"values"==e?t[n]:[n,t[n]])},"values"),a.Arguments=a.Array,i("keys"),i("values"),i("entries")},function(t,e,n){var i,r,a,o=n(12),s=n(84),l=n(43),c=n(27),u=n(1),h=u.process,d=u.setImmediate,f=u.clearImmediate,p=u.MessageChannel,m=u.Dispatch,g=0,v={},x="onreadystatechange",_=function(){var t=+this;if(v.hasOwnProperty(t)){var e=v[t];delete v[t],e()}},y=function(t){_.call(t.data)};d&&f||(d=function(t){for(var e=[],n=1;arguments.length>n;)e.push(arguments[n++]);return v[++g]=function(){s("function"==typeof t?t:Function(t),e)},i(g),g},f=function(t){delete v[t]},"process"==n(19)(h)?i=function(t){h.nextTick(o(_,t,1))}:m&&m.now?i=function(t){m.now(o(_,t,1))}:p?(a=(r=new p).port2,r.port1.onmessage=y,i=o(a.postMessage,a,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(i=function(t){u.postMessage(t+"","*")},u.addEventListener("message",y,!1)):i=x in c("script")?function(t){l.appendChild(c("script"))[x]=function(){l.removeChild(this),_.call(t)}}:function(t){setTimeout(o(_,t,1),0)}),t.exports={set:d,clear:f}},function(t,e,n){"use strict";function i(t){var e,n;this.promise=new t(function(t,i){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=i}),this.resolve=r(e),this.reject=r(n)}var r=n(25);t.exports.f=function(t){return new i(t)}},function(t,e,n){"use strict";var i=n(32),r=RegExp.prototype.exec,a=String.prototype.replace,o=r,s="lastIndex",l=function(){var t=/a/,e=/b*/g;return r.call(t,"a"),r.call(e,"a"),0!==t[s]||0!==e[s]}(),c=void 0!==/()??/.exec("")[1];(l||c)&&(o=function(t){var e,n,o,u,h=this;return c&&(n=new RegExp("^"+h.source+"$(?!\\s)",i.call(h))),l&&(e=h[s]),o=r.call(h,t),l&&o&&(h[s]=h.global?o.index+o[0].length:e),c&&o&&1<o.length&&a.call(o[0],n,function(){for(u=1;u<arguments.length-2;u++)void 0===arguments[u]&&(o[u]=void 0)}),o}),t.exports=o},function(t,e,n){var i=n(1),r=n(10),a=n(14),o=n(53),s=n(4).f;t.exports=function(t){var e=r.Symbol||(r.Symbol=a?{}:i.Symbol||{});"_"==t.charAt(0)||t in e||s(e,t,{value:o.f(t)})}},function(t,e,n){e.f=n(0)},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,n){var i=n(41),r=n(30).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return i(t,r)}},function(t,e,n){t.exports=n(104)},function(t){!function(e){"use strict";function n(t,e,n,i){var a=e&&e.prototype instanceof r?e:r,o=Object.create(a.prototype),s=new f(i||[]);return o._invoke=c(t,n,s),o}function i(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function r(){}function a(){}function o(){}function s(t){["next","throw","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function l(t){function e(n,r,a,o){var s=i(t[n],t,r);if("throw"!==s.type){var l=s.arg,c=l.value;return c&&"object"==typeof c&&v.call(c,"__await")?Promise.resolve(c.__await).then(function(t){e("next",t,a,o)},function(t){e("throw",t,a,o)}):Promise.resolve(c).then(function(t){l.value=t,a(l)},function(t){return e("throw",t,a,o)})}o(s.arg)}var n;this._invoke=function(t,i){function r(){return new Promise(function(n,r){e(t,i,n,r)})}return n=n?n.then(r,r):r()}}function c(t,e,n){var r=M;return function(a,o){if(r===T)throw new Error("Generator is already running");if(r===L){if("throw"===a)throw o;return{value:void 0,done:!0}}for(n.method=a,n.arg=o;;){var s=n.delegate;if(s){var l=u(s,n);if(l){if(l===A)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===M)throw r=L,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=T;var c=i(t,e,n);if("normal"===c.type){if(r=n.done?L:S,c.arg===A)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(r=L,n.method="throw",n.arg=c.arg)}}}function u(t,e){var n=t.iterator[e.method];if(void 0===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,u(t,e),"throw"===e.method))return A;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return A}var r=i(n,t.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,A;var a=r.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,A):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,A)}function h(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function d(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function f(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(h,this),this.reset(!0)}function p(t){if(t){var e=t[_];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(v.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:m}}function m(){return{value:void 0,done:!0}}var g=Object.prototype,v=g.hasOwnProperty,x="function"==typeof Symbol?Symbol:{},_=x.iterator||"@@iterator",y=x.asyncIterator||"@@asyncIterator",b=x.toStringTag||"@@toStringTag",w="object"==typeof t,E=e.regeneratorRuntime;if(E)w&&(t.exports=E);else{(E=e.regeneratorRuntime=w?t.exports:{}).wrap=n;var M="suspendedStart",S="suspendedYield",T="executing",L="completed",A={},R={};R[_]=function(){return this};var P=Object.getPrototypeOf,C=P&&P(P(p([])));C&&C!==g&&v.call(C,_)&&(R=C);var D=o.prototype=r.prototype=Object.create(R);a.prototype=D.constructor=o,o.constructor=a,o[b]=a.displayName="GeneratorFunction",E.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===a||"GeneratorFunction"===(e.displayName||e.name))},E.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,o):(t.__proto__=o,!(b in t)&&(t[b]="GeneratorFunction")),t.prototype=Object.create(D),t},E.awrap=function(t){return{__await:t}},s(l.prototype),l.prototype[y]=function(){return this},E.AsyncIterator=l,E.async=function(t,e,i,r){var a=new l(n(t,e,i,r));return E.isGeneratorFunction(e)?a:a.next().then(function(t){return t.done?t.value:a.next()})},s(D),D[b]="Generator",D[_]=function(){return this},D.toString=function(){return"[object Generator]"},E.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var i=e.pop();if(i in t)return n.value=i,n.done=!1,n}return n.done=!0,n}},E.values=p,f.prototype={constructor:f,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(d),!t)for(var e in this)"t"===e.charAt(0)&&v.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){function e(e,i){return a.type="throw",a.arg=t,n.next=e,i&&(n.method="next",n.arg=void 0),!!i}if(this.done)throw t;for(var n=this,i=this.tryEntries.length-1;0<=i;--i){var r=this.tryEntries[i],a=r.completion;if("root"===r.tryLoc)return e("end");if(r.tryLoc<=this.prev){var o=v.call(r,"catchLoc"),s=v.call(r,"finallyLoc");if(o&&s){if(this.prev<r.catchLoc)return e(r.catchLoc,!0);if(this.prev<r.finallyLoc)return e(r.finallyLoc)}else if(o){if(this.prev<r.catchLoc)return e(r.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return e(r.finallyLoc)}}}},abrupt:function(t,e){for(var n,i=this.tryEntries.length-1;0<=i;--i)if((n=this.tryEntries[i]).tryLoc<=this.prev&&v.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var r=n;break}r&&("break"===t||"continue"===t)&&r.tryLoc<=e&&e<=r.finallyLoc&&(r=null);var a=r?r.completion:{};return a.type=t,a.arg=e,r?(this.method="next",this.next=r.finallyLoc,A):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),A},finish:function(t){for(var e,n=this.tryEntries.length-1;0<=n;--n)if((e=this.tryEntries[n]).finallyLoc===t)return this.complete(e.completion,e.afterLoc),d(e),A},catch:function(t){for(var e,n=this.tryEntries.length-1;0<=n;--n)if((e=this.tryEntries[n]).tryLoc===t){var i=e.completion;if("throw"===i.type){var r=i.arg;d(e)}return r}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:p(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),A}}}}(function(){return this||"object"==typeof self&&self}()||Function("return this")())},function(t,e,n){"use strict";var i=n(37)(!0);n(38)(String,"String",function(t){this._t=t+"",this._i=0},function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=i(e,n),this._i+=t.length,{value:t,done:!1})})},function(t,e,n){t.exports=n(24)("native-function-to-string",Function.toString)},function(t,e,n){"use strict";var i=n(40),r=n(15),a=n(26),o={};n(6)(o,n(0)("iterator"),function(){return this}),t.exports=function(t,e,n){t.prototype=i(o,{next:r(1,n)}),a(t,e+" Iterator")}},function(t,e,n){var i=n(4),r=n(3),a=n(18);t.exports=n(5)?Object.defineProperties:function(t,e){r(t);for(var n,o=a(e),s=o.length,l=0;s>l;)i.f(t,n=o[l++],e[n]);return t}},function(t,e,n){var i=n(13),r=n(20),a=n(63);t.exports=function(t){return function(e,n,o){var s,l=i(e),c=r(l.length),u=a(o,c);if(t&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((t||u in l)&&l[u]===n)return t||u||0;return!t&&-1}}},function(t,e,n){var i=n(22),r=Math.max,a=Math.min;t.exports=function(t,e){return 0>(t=i(t))?r(t+e,0):a(t,e)}},function(t,e,n){var i=n(11),r=n(21),a=n(29)("IE_PROTO"),o=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=r(t),i(t,a)?t[a]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?o:null}},function(t,e,n){"use strict";var i=n(12),r=n(2),a=n(21),o=n(44),s=n(45),l=n(20),c=n(66),u=n(46);r(r.S+r.F*!n(47)(function(t){Array.from(t)}),"Array",{from:function(t){var e,n,r,h,d=a(t),f="function"==typeof this?this:Array,p=arguments.length,m=1<p?arguments[1]:void 0,g=void 0!==m,v=0,x=u(d);if(g&&(m=i(m,2<p?arguments[2]:void 0,2)),null==x||f==Array&&s(x))for(n=new f(e=l(d.length));e>v;v++)c(n,v,g?m(d[v],v):d[v]);else for(h=x.call(d),n=new f;!(r=h.next()).done;v++)c(n,v,g?o(h,m,[r.value,v],!0):r.value);return n.length=v,n}})},function(t,e,n){"use strict";var i=n(4),r=n(15);t.exports=function(t,e,n){e in t?i.f(t,e,r(0,n)):t[e]=n}},function(t,e,n){"use strict";n(68);var i=n(3),r=n(32),a=n(5),o="toString",s=/./[o],l=function(t){n(9)(RegExp.prototype,o,t,!0)};n(8)(function(){return"/a/b"!=s.call({source:"a",flags:"b"})})?l(function(){var t=i(this);return"/".concat(t.source,"/","flags"in t?t.flags:!a&&t instanceof RegExp?r.call(t):void 0)}):s.name!=o&&l(function(){return s.call(this)})},function(t,e,n){n(5)&&"g"!=/./g.flags&&n(4).f(RegExp.prototype,"flags",{configurable:!0,get:n(32)})},function(t,e,n){var i=Date.prototype,r="Invalid Date",a="toString",o=i[a],s=i.getTime;new Date(NaN)+""!=r&&n(9)(i,a,function(){var t=s.call(this);return t==t?o.call(this):r})},function(t,e,n){var i=n(2);i(i.S,"Array",{isArray:n(33)})},function(t,e,n){"use strict";var i=n(2),r=n(34)(0),a=n(35)([].forEach,!0);i(i.P+i.F*!a,"Array",{forEach:function(t){return r(this,t,arguments[1])}})},function(t,e,n){var i=n(73);t.exports=function(t,e){return new(i(t))(e)}},function(t,e,n){var i=n(7),r=n(33),a=n(0)("species");t.exports=function(t){var e;return r(t)&&("function"==typeof(e=t.constructor)&&(e===Array||r(e.prototype))&&(e=void 0),i(e)&&(null===(e=e[a])&&(e=void 0))),void 0===e?Array:e}},function(t,e,n){"use strict";var i=n(2),r=n(34)(2);i(i.P+i.F*!n(35)([].filter,!0),"Array",{filter:function(t){return r(this,t,arguments[1])}})},function(t,e,n){var i=n(0)("unscopables"),r=Array.prototype;null==r[i]&&n(6)(r,i,{}),t.exports=function(t){r[i][t]=!0}},function(t){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,n){var i=n(21),r=n(18);n(78)("keys",function(){return function(t){return r(i(t))}})},function(t,e,n){var i=n(2),r=n(10),a=n(8);t.exports=function(t,e){var n=(r.Object||{})[t]||Object[t],o={};o[t]=e(n),i(i.S+i.F*a(function(){n(1)}),"Object",o)}},function(t,e,n){var i=n(2);i(i.S+i.F*!n(5),"Object",{defineProperty:n(4).f})},function(t,e,n){"use strict";var i,r,a,o,s=n(14),l=n(1),c=n(12),u=n(31),h=n(2),d=n(7),f=n(25),p=n(81),m=n(82),g=n(83),v=n(49).set,x=n(85)(),_=n(50),y=n(86),b=n(87),w=n(88),E="Promise",M=l.TypeError,S=l.process,T=S&&S.versions,L=T&&T.v8||"",A=l[E],R="process"==u(S),P=function(){},C=r=_.f,D=!!function(){try{var t=A.resolve(1),e=(t.constructor={})[n(0)("species")]=function(t){t(P,P)};return(R||"function"==typeof PromiseRejectionEvent)&&t.then(P)instanceof e&&0!==L.indexOf("6.6")&&-1===b.indexOf("Chrome/66")}catch(e){}}(),N=function(t){var e;return!(!d(t)||"function"!=typeof(e=t.then))&&e},I=function(t,e){if(!t._n){t._n=!0;var n=t._c;x(function(){for(var i=t._v,r=1==t._s,a=0,o=function(e){var n,a,o,s=r?e.ok:e.fail,l=e.resolve,c=e.reject,u=e.domain;try{s?(!r&&(2==t._h&&O(t),t._h=1),!0===s?n=i:(u&&u.enter(),n=s(i),u&&(u.exit(),o=!0)),n===e.promise?c(M("Promise-chain cycle")):(a=N(n))?a.call(n,l,c):l(n)):c(i)}catch(e){u&&!o&&u.exit(),c(e)}};n.length>a;)o(n[a++]);t._c=[],t._n=!1,e&&!t._h&&U(t)})}},U=function(t){v.call(l,function(){var e,n,i,r=t._v,a=F(t);if(a&&(e=y(function(){R?S.emit("unhandledRejection",r,t):(n=l.onunhandledrejection)?n({promise:t,reason:r}):(i=l.console)&&i.error&&i.error("Unhandled promise rejection",r)}),t._h=R||F(t)?2:1),t._a=void 0,a&&e.e)throw e.v})},F=function(t){return 1!==t._h&&0===(t._a||t._c).length},O=function(t){v.call(l,function(){var e;R?S.emit("rejectionHandled",t):(e=l.onrejectionhandled)&&e({promise:t,reason:t._v})})},z=function(t){var e=this;e._d||(e._d=!0,(e=e._w||e)._v=t,e._s=2,!e._a&&(e._a=e._c.slice()),I(e,!0))},G=function(t){var e,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===t)throw M("Promise can't be resolved itself");(e=N(t))?x(function(){var i={_w:n,_d:!1};try{e.call(t,c(G,i,1),c(z,i,1))}catch(t){z.call(i,t)}}):(n._v=t,n._s=1,I(n,!1))}catch(e){z.call({_w:n,_d:!1},e)}}};D||(A=function(t){p(this,A,E,"_h"),f(t),i.call(this);try{t(c(G,this,1),c(z,this,1))}catch(t){z.call(this,t)}},(i=function(){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(89)(A.prototype,{then:function(t,e){var n=C(g(this,A));return n.ok="function"!=typeof t||t,n.fail="function"==typeof e&&e,n.domain=R?S.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&I(this,!1),n.promise},catch:function(t){return this.then(void 0,t)}}),a=function(){var t=new i;this.promise=t,this.resolve=c(G,t,1),this.reject=c(z,t,1)},_.f=C=function(t){return t===A||t===o?new a(t):r(t)}),h(h.G+h.W+h.F*!D,{Promise:A}),n(26)(A,E),n(90)(E),o=n(10)[E],h(h.S+h.F*!D,E,{reject:function(t){var e=C(this);return(0,e.reject)(t),e.promise}}),h(h.S+h.F*(s||!D),E,{resolve:function(t){return w(s&&this===o?A:this,t)}}),h(h.S+h.F*!(D&&n(47)(function(t){A.all(t).catch(P)})),E,{all:function(t){var e=this,n=C(e),i=n.resolve,r=n.reject,a=y(function(){var n=[],a=0,o=1;m(t,!1,function(t){var s=a++,l=!1;n.push(void 0),o++,e.resolve(t).then(function(t){l||(l=!0,n[s]=t,--o||i(n))},r)}),--o||i(n)});return a.e&&r(a.v),n.promise},race:function(t){var e=this,n=C(e),i=n.reject,r=y(function(){m(t,!1,function(t){e.resolve(t).then(n.resolve,i)})});return r.e&&i(r.v),n.promise}})},function(t){t.exports=function(t,e,n,i){if(!(t instanceof e)||void 0!==i&&i in t)throw TypeError(n+": incorrect invocation!");return t}},function(t,e,n){var i=n(12),r=n(44),a=n(45),o=n(3),s=n(20),l=n(46),c={},u={};(e=t.exports=function(t,e,n,h,d){var f,p,m,g,v=d?function(){return t}:l(t),x=i(n,h,e?2:1),_=0;if("function"!=typeof v)throw TypeError(t+" is not iterable!");if(a(v)){for(f=s(t.length);f>_;_++)if((g=e?x(o(p=t[_])[0],p[1]):x(t[_]))===c||g===u)return g}else for(m=v.call(t);!(p=m.next()).done;)if((g=r(m,x,p.value,e))===c||g===u)return g}).BREAK=c,e.RETURN=u},function(t,e,n){var i=n(3),r=n(25),a=n(0)("species");t.exports=function(t,e){var n,o=i(t).constructor;return void 0===o||null==(n=i(o)[a])?e:r(n)}},function(t){t.exports=function(t,e,n){var i=void 0===n;switch(e.length){case 0:return i?t():t.call(n);case 1:return i?t(e[0]):t.call(n,e[0]);case 2:return i?t(e[0],e[1]):t.call(n,e[0],e[1]);case 3:return i?t(e[0],e[1],e[2]):t.call(n,e[0],e[1],e[2]);case 4:return i?t(e[0],e[1],e[2],e[3]):t.call(n,e[0],e[1],e[2],e[3])}return t.apply(n,e)}},function(t,e,n){var i=n(1),r=n(49).set,a=i.MutationObserver||i.WebKitMutationObserver,o=i.process,s=i.Promise,l="process"==n(19)(o);t.exports=function(){var t,e,n,c=function(){var i,r;for(l&&(i=o.domain)&&i.exit();t;){r=t.fn,t=t.next;try{r()}catch(r){throw t?n():e=void 0,r}}e=void 0,i&&i.enter()};if(l)n=function(){o.nextTick(c)};else if(!a||i.navigator&&i.navigator.standalone)if(s&&s.resolve){var u=s.resolve(void 0);n=function(){u.then(c)}}else n=function(){r.call(i,c)};else{var h=!0,d=document.createTextNode("");new a(c).observe(d,{characterData:!0}),n=function(){d.data=h=!h}}return function(i){var r={fn:i,next:void 0};e&&(e.next=r),t||(t=r,n()),e=r}}},function(t){t.exports=function(t){try{return{e:!1,v:t()}}catch(t){return{e:!0,v:t}}}},function(t,e,n){var i=n(1).navigator;t.exports=i&&i.userAgent||""},function(t,e,n){var i=n(3),r=n(7),a=n(50);t.exports=function(t,e){if(i(t),r(e)&&e.constructor===t)return e;var n=a.f(t);return(0,n.resolve)(e),n.promise}},function(t,e,n){var i=n(9);t.exports=function(t,e,n){for(var r in e)i(t,r,e[r],n);return t}},function(t,e,n){"use strict";var i=n(1),r=n(4),a=n(5),o=n(0)("species");t.exports=function(t){var e=i[t];a&&e&&!e[o]&&r.f(e,o,{configurable:!0,get:function(){return this}})}},function(t,e,n){"use strict";var i=n(3),r=n(21),a=n(20),o=n(22),s=n(92),l=n(93),c=Math.max,u=Math.min,h=Math.floor,d=/\$([$&`']|\d\d?|<[^>]*>)/g,f=/\$([$&`']|\d\d?)/g,p=function(t){return void 0===t?t:t+""};n(94)("replace",2,function(t,e,n,m){function g(t,e,i,a,o,s){var l=i+t.length,c=a.length,u=f;return void 0!==o&&(o=r(o),u=d),n.call(s,u,function(n,r){var s;switch(r.charAt(0)){case"$":return"$";case"&":return t;case"`":return e.slice(0,i);case"'":return e.slice(l);case"<":s=o[r.slice(1,-1)];break;default:var u=+r;if(0==u)return n;if(u>c){var d=h(u/10);return 0===d?n:d<=c?void 0===a[d-1]?r.charAt(1):a[d-1]+r.charAt(1):n}s=a[u-1]}return void 0===s?"":s})}return[function(i,r){var a=t(this),o=null==i?void 0:i[e];return void 0===o?n.call(a+"",i,r):o.call(i,a,r)},function(t,e){var r=m(n,t,this,e);if(r.done)return r.value;var h=i(t),d=this+"",f="function"==typeof e;f||(e+="");var v=h.global;if(v){var x=h.unicode;h.lastIndex=0}for(var _,y=[];null!==(_=l(h,d))&&(y.push(_),v);){""==_[0]+""&&(h.lastIndex=s(d,a(h.lastIndex),x))}for(var b="",w=0,E=0;E<y.length;E++){for(var M=(_=y[E])[0]+"",S=c(u(o(_.index),d.length),0),T=[],L=1;L<_.length;L++)T.push(p(_[L]));var A=_.groups;if(f){var R=[M].concat(T,S,d);void 0!==A&&R.push(A);var P=e.apply(void 0,R)+""}else P=g(M,d,S,T,A,e);S>=w&&(b+=d.slice(w,S)+P,w=S+M.length)}return b+d.slice(w)}]})},function(t,e,n){"use strict";var i=n(37)(!0);t.exports=function(t,e,n){return e+(n?i(t,e).length:1)}},function(t,e,n){"use strict";var i=n(31),r=RegExp.prototype.exec;t.exports=function(t,e){var n=t.exec;if("function"==typeof n){var a=n.call(t,e);if("object"!=typeof a)throw new TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==i(t))throw new TypeError("RegExp#exec called on incompatible receiver");return r.call(t,e)}},function(t,e,n){"use strict";n(95);var i=n(9),r=n(6),a=n(8),o=n(23),s=n(0),l=n(51),c=s("species"),u=!a(function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}),h=function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();t.exports=function(t,e,n){var d=s(t),f=!a(function(){var e={};return e[d]=function(){return 7},7!=""[t](e)}),p=f?!a(function(){var e=!1,n=/a/;return n.exec=function(){return e=!0,null},"split"===t&&(n.constructor={},n.constructor[c]=function(){return n}),n[d](""),!e}):void 0;if(!f||!p||"replace"===t&&!u||"split"===t&&!h){var m=/./[d],g=n(o,d,""[t],function(t,e,n,i,r){return e.exec===l?f&&!r?{done:!0,value:m.call(e,n,i)}:{done:!0,value:t.call(n,e,i)}:{done:!1}}),v=g[0],x=g[1];i(String.prototype,t,v),r(RegExp.prototype,d,2==e?function(t,e){return x.call(t,this,e)}:function(t){return x.call(t,this)})}}},function(t,e,n){"use strict";var i=n(51);n(2)({target:"RegExp",proto:!0,forced:i!==/./.exec},{exec:i})},function(t,e,n){n(52)("asyncIterator")},function(t,e,n){"use strict";var i=n(1),r=n(11),a=n(5),o=n(2),s=n(9),l=n(98).KEY,c=n(8),u=n(24),h=n(26),d=n(16),f=n(0),p=n(53),m=n(52),g=n(99),v=n(33),x=n(3),_=n(7),y=n(13),b=n(28),w=n(15),E=n(40),M=n(100),S=n(101),T=n(4),L=n(18),A=S.f,R=T.f,P=M.f,C=i.Symbol,D=i.JSON,N=D&&D.stringify,I="prototype",U=f("_hidden"),F=f("toPrimitive"),O={}.propertyIsEnumerable,z=u("symbol-registry"),G=u("symbols"),B=u("op-symbols"),V=Object[I],H="function"==typeof C,k=i.QObject,W=!k||!k[I]||!k[I].findChild,j=a&&c(function(){return 7!=E(R({},"a",{get:function(){return R(this,"a",{value:7}).a}})).a})?function(t,e,n){var i=A(V,e);i&&delete V[e],R(t,e,n),i&&t!==V&&R(V,e,i)}:R,X=function(t){var e=G[t]=E(C[I]);return e._k=t,e},Y=H&&"symbol"==typeof C.iterator?function(t){return"symbol"==typeof t}:function(t){return t instanceof C},q=function(t,e,n){return t===V&&q(B,e,n),x(t),e=b(e,!0),x(n),r(G,e)?(n.enumerable?(r(t,U)&&t[U][e]&&(t[U][e]=!1),n=E(n,{enumerable:w(0,!1)})):(!r(t,U)&&R(t,U,w(1,{})),t[U][e]=!0),j(t,e,n)):R(t,e,n)},Z=function(t,e){x(t);for(var n,i=g(e=y(e)),r=0,a=i.length;a>r;)q(t,n=i[r++],e[n]);return t},J=function(t){var e=O.call(this,t=b(t,!0));return(this!==V||!r(G,t)||r(B,t))&&(!(e||!r(this,t)||!r(G,t)||r(this,U)&&this[U][t])||e)},Q=function(t,e){if(t=y(t),e=b(e,!0),t!==V||!r(G,e)||r(B,e)){var n=A(t,e);return n&&r(G,e)&&!(r(t,U)&&t[U][e])&&(n.enumerable=!0),n}},K=function(t){for(var e,n=P(y(t)),i=[],a=0;n.length>a;)r(G,e=n[a++])||e==U||e==l||i.push(e);return i},$=function(t){for(var e,n=t===V,i=P(n?B:y(t)),a=[],o=0;i.length>o;)r(G,e=i[o++])&&(!n||r(V,e))&&a.push(G[e]);return a};H||(s((C=function(){if(this instanceof C)throw TypeError("Symbol is not a constructor!");var t=d(0<arguments.length?arguments[0]:void 0),e=function(n){this===V&&e.call(B,n),r(this,U)&&r(this[U],t)&&(this[U][t]=!1),j(this,t,w(1,n))};return a&&W&&j(V,t,{configurable:!0,set:e}),X(t)})[I],"toString",function(){return this._k}),S.f=Q,T.f=q,n(55).f=M.f=K,n(36).f=J,n(54).f=$,a&&!n(14)&&s(V,"propertyIsEnumerable",J,!0),p.f=function(t){return X(f(t))}),o(o.G+o.W+o.F*!H,{Symbol:C});for(var tt=["hasInstance","isConcatSpreadable","iterator","match","replace","search","species","split","toPrimitive","toStringTag","unscopables"],et=0;tt.length>et;)f(tt[et++]);for(var nt=L(f.store),it=0;nt.length>it;)m(nt[it++]);o(o.S+o.F*!H,"Symbol",{for:function(t){return r(z,t+="")?z[t]:z[t]=C(t)},keyFor:function(t){if(!Y(t))throw TypeError(t+" is not a symbol!");for(var e in z)if(z[e]===t)return e},useSetter:function(){W=!0},useSimple:function(){W=!1}}),o(o.S+o.F*!H,"Object",{create:function(t,e){return void 0===e?E(t):Z(E(t),e)},defineProperty:q,defineProperties:Z,getOwnPropertyDescriptor:Q,getOwnPropertyNames:K,getOwnPropertySymbols:$}),D&&o(o.S+o.F*(!H||c(function(){var t=C();return"[null]"!=N([t])||"{}"!=N({a:t})||"{}"!=N(Object(t))})),"JSON",{stringify:function(t){for(var e,n,i=[t],r=1;arguments.length>r;)i.push(arguments[r++]);if(n=e=i[1],(_(e)||void 0!==t)&&!Y(t))return v(e)||(e=function(t,e){if("function"==typeof n&&(e=n.call(this,t,e)),!Y(e))return e}),i[1]=e,N.apply(D,i)}}),C[I][F]||n(6)(C[I],F,C[I].valueOf),h(C,"Symbol"),h(Math,"Math",!0),h(i.JSON,"JSON",!0)},function(t,e,n){var i=n(16)("meta"),r=n(7),a=n(11),o=n(4).f,s=0,l=Object.isExtensible||function(){return!0},c=!n(8)(function(){return l(Object.preventExtensions({}))}),u=function(t){o(t,i,{value:{i:"O"+ ++s,w:{}}})},h=t.exports={KEY:i,NEED:!1,fastKey:function(t,e){if(!r(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!a(t,i)){if(!l(t))return"F";if(!e)return"E";u(t)}return t[i].i},getWeak:function(t,e){if(!a(t,i)){if(!l(t))return!0;if(!e)return!1;u(t)}return t[i].w},onFreeze:function(t){return c&&h.NEED&&l(t)&&!a(t,i)&&u(t),t}}},function(t,e,n){var i=n(18),r=n(54),a=n(36);t.exports=function(t){var e=i(t),n=r.f;if(n)for(var o,s=n(t),l=a.f,c=0;s.length>c;)l.call(t,o=s[c++])&&e.push(o);return e}},function(t,e,n){var i=n(13),r=n(55).f,a={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return o&&"[object Window]"==a.call(t)?function(t){try{return r(t)}catch(t){return o.slice()}}(t):r(i(t))}},function(t,e,n){var i=n(36),r=n(15),a=n(13),o=n(28),s=n(11),l=n(39),c=Object.getOwnPropertyDescriptor;e.f=n(5)?c:function(t,e){if(t=a(t),e=o(e,!0),l)try{return c(t,e)}catch(e){}return s(t,e)?r(!i.f.call(t,e),t[e]):void 0}},function(t,e,n){for(var i=n(48),r=n(18),a=n(9),o=n(1),s=n(6),l=n(17),c=n(0),u=c("iterator"),h=c("toStringTag"),d=l.Array,f={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},p=r(f),m=0;m<p.length;m++){var g,v=p[m],x=f[v],_=o[v],y=_&&_.prototype;if(y&&(y[u]||s(y,u,d),y[h]||s(y,h,v),l[v]=d,x))for(g in i)y[g]||a(y,g,i[g],!0)}},function(t,e,n){"use strict";var i=n(2),r=n(34)(1);i(i.P+i.F*!n(35)([].map,!0),"Array",{map:function(t){return r(this,t,arguments[1])}})},function(t,e,n){"use strict";function i(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}function r(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function a(t,e,n){this.x=t||0,this.y=e||0,this.z=n||0}function o(t,e,n,i){this._x=t||0,this._y=e||0,this._z=n||0,this._w=void 0===i?1:i}function s(){}function l(t,e,n,i){this._x=t||0,this._y=e||0,this._z=n||0,this._order=i||l.DefaultOrder}function c(){this.mask=1}function u(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function h(){Object.defineProperty(this,"id",{value:fr++}),this.uuid=Qe.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=h.DefaultUp.clone();var t=new a,e=new l,n=new o,i=new a(1,1,1);e.onChange(function(){n.setFromEuler(e,!1)}),n.onChange(function(){e.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new r},normalMatrix:{value:new u}}),this.matrix=new r,this.matrixWorld=new r,this.matrixAutoUpdate=h.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new c,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function d(){h.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function f(t,e){this.name="",this.color=new i(t),this.density=void 0===e?25e-5:e}function p(){h.call(this),this.type="Camera",this.matrixWorldInverse=new r,this.projectionMatrix=new r,this.projectionMatrixInverse=new r}function m(t,e,n,i){p.call(this),this.type="PerspectiveCamera",this.fov=void 0===t?50:t,this.zoom=1,this.near=void 0===n?.1:n,this.far=void 0===i?2e3:i,this.focus=10,this.aspect=void 0===e?1:e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function g(t,e){this.x=t||0,this.y=e||0}function v(t,e,n,i,r,a,o,s,l,c){Object.defineProperty(this,"id",{value:gr++}),this.uuid=Qe.generateUUID(),this.name="",this.image=void 0===t?v.DEFAULT_IMAGE:t,this.mipmaps=[],this.mapping=void 0===e?v.DEFAULT_MAPPING:e,this.wrapS=void 0===n?ii:n,this.wrapT=void 0===i?ii:i,this.magFilter=void 0===r?li:r,this.minFilter=void 0===a?ui:a,this.anisotropy=void 0===l?1:l,this.format=void 0===o?Si:o,this.type=void 0===s?hi:s,this.offset=new g(0,0),this.repeat=new g(1,1),this.center=new g(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new u,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0===c?ir:c,this.version=0,this.onUpdate=null}function x(t,e,n,i,r,a,o,s,l,c,u,h){v.call(this,null,a,o,s,l,c,i,r,u,h),this.image={data:t,width:e,height:n},this.magFilter=void 0===l?ai:l,this.minFilter=void 0===c?ai:c,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function _(t,e){this.min=void 0===t?new a(1/0,1/0,1/0):t,this.max=void 0===e?new a(-1/0,-1/0,-1/0):e}function y(t,e){this.center=void 0===t?new a:t,this.radius=void 0===e?0:e}function b(t,e){this.normal=void 0===t?new a(1,0,0):t,this.constant=void 0===e?0:e}function w(t,e,n,i,r,a){this.planes=[void 0===t?new b:t,void 0===e?new b:e,void 0===n?new b:n,void 0===i?new b:i,void 0===r?new b:r,void 0===a?new b:a]}function E(t){var e={};for(var n in t)for(var i in e[n]={},t[n]){var r=t[n][i];e[n][i]=r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?r.clone():Array.isArray(r)?r.slice():r}return e}function M(t){for(var e,n={},i=0;i<t.length;i++)for(var r in e=E(t[i]))n[r]=e[r];return n}function S(t,e,n,i){this.x=t||0,this.y=e||0,this.z=n||0,this.w=void 0===i?1:i}function T(){function t(r,a){!1===n||(i(r,a),e.requestAnimationFrame(t))}var e=null,n=!1,i=null;return{start:function(){1==n||null===i||(e.requestAnimationFrame(t),n=!0)},stop:function(){n=!1},setAnimationLoop:function(t){i=t},setContext:function(t){e=t}}}function L(t){function e(e,n){var i=e.array,r=e.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,a=t.createBuffer();t.bindBuffer(n,a),t.bufferData(n,i,r),e.onUploadCallback();var o=t.FLOAT;return i instanceof Float32Array?o=t.FLOAT:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?o=t.UNSIGNED_SHORT:i instanceof Int16Array?o=t.SHORT:i instanceof Uint32Array?o=t.UNSIGNED_INT:i instanceof Int32Array?o=t.INT:i instanceof Int8Array?o=t.BYTE:i instanceof Uint8Array&&(o=t.UNSIGNED_BYTE),{buffer:a,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}function n(e,n,i){var r=n.array,a=n.updateRange;t.bindBuffer(i,e),!1===n.dynamic?t.bufferData(i,r,t.STATIC_DRAW):-1===a.count?t.bufferSubData(i,0,r):0===a.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(i,a.offset*r.BYTES_PER_ELEMENT,r.subarray(a.offset,a.offset+a.count)),a.count=-1)}var i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(t,r){t.isInterleavedBufferAttribute&&(t=t.data);var a=i.get(t);void 0===a?i.set(t,e(t,r)):a.version<t.version&&(n(a.buffer,t,r),a.version=t.version)}}}function A(t,e,n,r,o,s){this.a=t,this.b=e,this.c=n,this.normal=r&&r.isVector3?r:new a,this.vertexNormals=Array.isArray(r)?r:[],this.color=o&&o.isColor?o:new i,this.vertexColors=Array.isArray(o)?o:[],this.materialIndex=void 0===s?0:s}function R(){Object.defineProperty(this,"id",{value:yr+=2}),this.uuid=Qe.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function P(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0===t?0:t.length/e,this.normalized=!0===n,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function C(t,e,n){P.call(this,new Int8Array(t),e,n)}function D(t,e,n){P.call(this,new Uint8Array(t),e,n)}function N(t,e,n){P.call(this,new Uint8ClampedArray(t),e,n)}function I(t,e,n){P.call(this,new Int16Array(t),e,n)}function U(t,e,n){P.call(this,new Uint16Array(t),e,n)}function F(t,e,n){P.call(this,new Int32Array(t),e,n)}function O(t,e,n){P.call(this,new Uint32Array(t),e,n)}function z(t,e,n){P.call(this,new Float32Array(t),e,n)}function G(t,e,n){P.call(this,new Float64Array(t),e,n)}function B(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function V(t){if(0===t.length)return-1/0;for(var e=t[0],n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}function H(){Object.defineProperty(this,"id",{value:br+=2}),this.uuid=Qe.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}function k(t,e,n,i,r,a){R.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a},this.fromBufferGeometry(new W(t,e,n,i,r,a)),this.mergeVertices()}function W(t,e,n,i,r,o){function s(t,e,n,i,r,o,s,m,g,v,x){var _,y,b=g+1,w=0,E=0,M=new a;for(y=0;y<v+1;y++){var S=y*(s/v)-s/2;for(_=0;_<b;_++){var T=_*(o/g)-o/2;M[t]=T*i,M[e]=S*r,M[n]=m/2,u.push(M.x,M.y,M.z),M[t]=0,M[e]=0,M[n]=0<m?1:-1,h.push(M.x,M.y,M.z),d.push(_/g),d.push(1-y/v),w+=1}}for(y=0;y<v;y++)for(_=0;_<g;_++){var L=f+_+b*y,A=f+_+b*(y+1),R=f+(_+1)+b*(y+1),P=f+(_+1)+b*y;c.push(L,A,P),c.push(A,R,P),E+=6}l.addGroup(p,E,x),p+=E,f+=w}H.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};var l=this;t=t||1,e=e||1,n=n||1,i=qe(i)||1,r=qe(r)||1,o=qe(o)||1;var c=[],u=[],h=[],d=[],f=0,p=0;s("z","y","x",-1,-1,n,e,t,o,r,0),s("z","y","x",1,-1,n,e,-t,o,r,1),s("x","z","y",1,1,t,n,e,i,o,2),s("x","z","y",1,-1,t,n,-e,i,o,3),s("x","y","z",1,-1,t,e,n,i,r,4),s("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(c),this.addAttribute("position",new z(u,3)),this.addAttribute("normal",new z(h,3)),this.addAttribute("uv",new z(d,2))}function j(t,e,n,i){R.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new X(t,e,n,i)),this.mergeVertices()}function X(t,e,n,i){H.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};var r,a,o=(t=t||1)/2,s=(e=e||1)/2,l=qe(n)||1,c=qe(i)||1,u=l+1,h=t/l,d=e/c,f=[],p=[],m=[],g=[];for(a=0;a<c+1;a++){var v=a*d-s;for(r=0;r<u;r++){var x=r*h-o;p.push(x,-v,0),m.push(0,0,1),g.push(r/l),g.push(1-a/c)}}for(a=0;a<c;a++)for(r=0;r<l;r++){var _=r+u*a,y=r+u*(a+1),b=r+1+u*(a+1),w=r+1+u*a;f.push(_,y,w),f.push(y,b,w)}this.setIndex(f),this.addAttribute("position",new z(p,3)),this.addAttribute("normal",new z(m,3)),this.addAttribute("uv",new z(g,2))}function Y(){Object.defineProperty(this,"id",{value:wr++}),this.uuid=Qe.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=hn,this.side=on,this.flatShading=!1,this.vertexTangents=!1,this.vertexColors=cn,this.opacity=1,this.transparent=!1,this.blendSrc=Sn,this.blendDst=Tn,this.blendEquation=gn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Un,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.userData={},this.needsUpdate=!0}function q(t){Y.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Er,this.fragmentShader=Mr,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function Z(t,e){this.origin=void 0===t?new a:t,this.direction=void 0===e?new a:e}function J(t,e,n){this.a=void 0===t?new a:t,this.b=void 0===e?new a:e,this.c=void 0===n?new a:n}function Q(t){Y.call(this),this.type="MeshBasicMaterial",this.color=new i(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Bn,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}function K(t,e){h.call(this),this.type="Mesh",this.geometry=void 0===t?new H:t,this.material=void 0===e?new Q({color:16777215*Math.random()}):e,this.drawMode=tr,this.updateMorphTargets()}function $(t,e,n,r){function a(t,n){e.buffers.color.setClear(t.r,t.g,t.b,n,r)}var o,s,l=new i(0),c=0,u=null,h=0;return{getClearColor:function(){return l},setClearColor:function(t,e){l.set(t),a(l,c=void 0===e?1:e)},getClearAlpha:function(){return c},setClearAlpha:function(t){a(l,c=t)},render:function(e,i,r,d){var f=i.background;if(null===f?(a(l,c),u=null,h=0):f&&f.isColor&&(a(f,1),d=!0,u=null,h=0),(t.autoClear||d)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),f&&(f.isCubeTexture||f.isWebGLRenderTargetCube)){void 0===s&&((s=new K(new W(1,1,1),new q({type:"BackgroundCubeMaterial",uniforms:E(_r.cube.uniforms),vertexShader:_r.cube.vertexShader,fragmentShader:_r.cube.fragmentShader,side:sn,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),s.geometry.removeAttribute("uv"),s.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.tCube.value}}),n.update(s));var p=f.isWebGLRenderTargetCube?f.texture:f;s.material.uniforms.tCube.value=p,s.material.uniforms.tFlip.value=f.isWebGLRenderTargetCube?1:-1,(u!==f||h!==p.version)&&(s.material.needsUpdate=!0,u=f,h=p.version),e.unshift(s,s.geometry,s.material,0,0,null)}else f&&f.isTexture&&(void 0===o&&((o=new K(new X(2,2),new q({type:"BackgroundMaterial",uniforms:E(_r.background.uniforms),vertexShader:_r.background.vertexShader,fragmentShader:_r.background.fragmentShader,side:on,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),o.material.uniforms.uvTransform.value.copy(f.matrix),(u!==f||h!==f.version)&&(o.material.needsUpdate=!0,u=f,h=f.version),e.unshift(o,o.geometry,o.material,0,0,null))}}}function tt(t,e,n,i){var r;this.setMode=function(t){r=t},this.render=function(e,i){t.drawArrays(r,e,i),n.update(i,r)},this.renderInstances=function(a,o,s){var l;if(i.isWebGL2)l=t;else if(null===(l=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[i.isWebGL2?"drawArraysInstanced":"drawArraysInstancedANGLE"](r,o,s,a.maxInstancedCount),n.update(s,r,a.maxInstancedCount)}}function et(t,e,n){function i(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision?"mediump":"lowp"}var r,a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext,o=void 0===n.precision?"highp":n.precision,s=i(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var l=!0===n.logarithmicDepthBuffer,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_TEXTURE_SIZE),d=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),f=t.getParameter(t.MAX_VERTEX_ATTRIBS),p=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),m=t.getParameter(t.MAX_VARYING_VECTORS),g=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),v=0<u,x=a||!!e.get("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==r)return r;var n=e.get("EXT_texture_filter_anisotropic");return r=null===n?0:t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:u,maxTextureSize:h,maxCubemapSize:d,maxAttributes:f,maxVertexUniforms:p,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:a?t.getParameter(t.MAX_SAMPLES):0}}function nt(){function t(){c.value!==i&&(c.value=i,c.needsUpdate=0<r),n.numPlanes=r,n.numIntersection=0}function e(t,e,i,r){var a=null===t?0:t.length,o=null;if(0!==a){if(o=c.value,!0!==r||null===o){var u=i+4*a,h=e.matrixWorldInverse;l.getNormalMatrix(h),(null===o||o.length<u)&&(o=new Float32Array(u));for(var d=0,f=i;d!==a;++d,f+=4)s.copy(t[d]).applyMatrix4(h,l),s.normal.toArray(o,f),o[f+3]=s.constant}c.value=o,c.needsUpdate=!0}return n.numPlanes=a,o}var n=this,i=null,r=0,a=!1,o=!1,s=new b,l=new u,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(t,n,o){var s=0!==t.length||n||0!==r||a;return a=n,i=e(t,o,0),r=t.length,s},this.beginShadows=function(){o=!0,e(null)},this.endShadows=function(){o=!1,t()},this.setState=function(n,s,l,u,h,d){if(!a||null===n||0===n.length||o&&!l)o?e(null):t();else{var f=o?0:r,p=4*f,m=h.clippingState||null;c.value=m,m=e(n,u,p,d);for(var g=0;g!==p;++g)m[g]=i[g];h.clippingState=m,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=f}}}function it(t){var e={};return{get:function(n){return void 0!==e[n]?e[n]:(null===(i="WEBGL_depth_texture"===n?t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture"):"EXT_texture_filter_anisotropic"===n?t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic"):"WEBGL_compressed_texture_s3tc"===n?t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"):"WEBGL_compressed_texture_pvrtc"===n?t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"):t.getExtension(n))&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),e[n]=i,i);var i}}}function rt(t,e,n){function i(t){var o=t.target,s=r[o.id];for(var l in null!==s.index&&e.remove(s.index),s.attributes)e.remove(s.attributes[l]);o.removeEventListener("dispose",i),delete r[o.id];var c=a[s.id];c&&(e.remove(c),delete a[s.id]),n.memory.geometries--}var r={},a={};return{get:function(t,e){var a=r[e.id];return a||(e.addEventListener("dispose",i),e.isBufferGeometry?a=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new H).setFromObject(t)),a=e._bufferGeometry),r[e.id]=a,n.memory.geometries++,a)},update:function(n){var i=n.index,r=n.attributes;for(var a in null!==i&&e.update(i,t.ELEMENT_ARRAY_BUFFER),r)e.update(r[a],t.ARRAY_BUFFER);var o=n.morphAttributes;for(var a in o)for(var s=o[a],l=0,c=s.length;l<c;l++)e.update(s[l],t.ARRAY_BUFFER)},getWireframeAttribute:function(n){var i=a[n.id];if(i)return i;var r=[],o=n.index,s=n.attributes;if(null!==o)for(var l=0,c=(f=o.array).length;l<c;l+=3){var u=f[l+0],h=f[l+1],d=f[l+2];r.push(u,h,h,d,d,u)}else{var f;for(l=0,c=(f=s.position.array).length/3-1;l<c;l+=3){u=l+0,h=l+1,d=l+2;r.push(u,h,h,d,d,u)}}return i=new(65535<V(r)?O:U)(r,1),e.update(i,t.ELEMENT_ARRAY_BUFFER),a[n.id]=i,i}}}function at(t,e,n,i){var r,a,o;this.setMode=function(t){r=t},this.setIndex=function(t){a=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(r,i,a,e*o),n.update(i,r)},this.renderInstances=function(s,l,c){var u;if(i.isWebGL2)u=t;else if(null===(u=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[i.isWebGL2?"drawElementsInstanced":"drawElementsInstancedANGLE"](r,c,a,l*o,s.maxInstancedCount),n.update(c,r,s.maxInstancedCount)}}function ot(t){var e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,r){switch(r=r||1,e.calls++,i){case t.TRIANGLES:e.triangles+=r*(n/3);break;case t.TRIANGLE_STRIP:case t.TRIANGLE_FAN:e.triangles+=r*(n-2);break;case t.LINES:e.lines+=r*(n/2);break;case t.LINE_STRIP:e.lines+=r*(n-1);break;case t.LINE_LOOP:e.lines+=r*n;break;case t.POINTS:e.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function st(t,e){return Be(e[1])-Be(t[1])}function lt(t){var e={},n=new Float32Array(8);return{update:function(i,r,a,o){var s=i.morphTargetInfluences,l=s.length,c=e[r.id];if(void 0===c){c=[];for(var u=0;u<l;u++)c[u]=[u,0];e[r.id]=c}var h=a.morphTargets&&r.morphAttributes.position,d=a.morphNormals&&r.morphAttributes.normal;for(u=0;u<l;u++)0!==(f=c[u])[1]&&(h&&r.removeAttribute("morphTarget"+u),d&&r.removeAttribute("morphNormal"+u));for(u=0;u<l;u++)(f=c[u])[0]=u,f[1]=s[u];c.sort(st);var f;for(u=0;8>u;u++){if(f=c[u]){var p=f[0],m=f[1];if(m){h&&r.addAttribute("morphTarget"+u,h[p]),d&&r.addAttribute("morphNormal"+u,d[p]),n[u]=m;continue}}n[u]=0}o.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function ct(t,e){var n={};return{update:function(i){var r=e.render.frame,a=i.geometry,o=t.get(i,a);return n[o.id]!==r&&(a.isGeometry&&o.updateFromObject(i),t.update(o),n[o.id]=r),o},dispose:function(){n={}}}}function ut(t,e,n,i,r,a,o,s,l,c){t=void 0===t?[]:t,e=void 0===e?Zn:e,o=void 0===o?Mi:o,v.call(this,t,e,n,i,r,a,o,s,l,c),this.flipY=!1}function ht(t,e,n,i){v.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=ai,this.minFilter=ai,this.wrapR=ii,this.generateMipmaps=!1,this.flipY=!1}function dt(){this.seq=[],this.map={}}function ft(t,e,n){var i=t[0];if(0>=i||0<i)return t;var r=e*n,a=Ar[r];if(void 0===a&&(a=new Float32Array(r),Ar[r]=a),0!==e){i.toArray(a,0);for(var o=1,s=0;o!==e;++o)s+=n,t[o].toArray(a,s)}return a}function pt(t,e){if(t.length!==e.length)return!1;for(var n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function mt(t,e){for(var n=0,i=e.length;n<i;n++)t[n]=e[n]}function gt(t,e){var n=Rr[e];void 0===n&&(n=new Int32Array(e),Rr[e]=n);for(var i=0;i!==e;++i)n[i]=t.allocTextureUnit();return n}function vt(t,e){var n=this.cache;n[0]===e||(t.uniform1f(this.addr,e),n[0]=e)}function xt(t,e){var n=this.cache;n[0]===e||(t.uniform1i(this.addr,e),n[0]=e)}function _t(t,e){var n=this.cache;if(void 0!==e.x)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(pt(n,e))return;t.uniform2fv(this.addr,e),mt(n,e)}}function yt(t,e){var n=this.cache;if(void 0!==e.x)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(pt(n,e))return;t.uniform3fv(this.addr,e),mt(n,e)}}function bt(t,e){var n=this.cache;if(void 0!==e.x)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(pt(n,e))return;t.uniform4fv(this.addr,e),mt(n,e)}}function wt(t,e){var n=this.cache,i=e.elements;if(void 0===i){if(pt(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),mt(n,e)}else{if(pt(n,i))return;Dr.set(i),t.uniformMatrix2fv(this.addr,!1,Dr),mt(n,i)}}function Et(t,e){var n=this.cache,i=e.elements;if(void 0===i){if(pt(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),mt(n,e)}else{if(pt(n,i))return;Cr.set(i),t.uniformMatrix3fv(this.addr,!1,Cr),mt(n,i)}}function Mt(t,e){var n=this.cache,i=e.elements;if(void 0===i){if(pt(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),mt(n,e)}else{if(pt(n,i))return;Pr.set(i),t.uniformMatrix4fv(this.addr,!1,Pr),mt(n,i)}}function St(t,e,n){var i=this.cache,r=n.allocTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(e||Sr,r)}function Tt(t,e,n){var i=this.cache,r=n.allocTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Tr,r)}function Lt(t,e,n){var i=this.cache,r=n.allocTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||Lr,r)}function At(t,e){var n=this.cache;pt(n,e)||(t.uniform2iv(this.addr,e),mt(n,e))}function Rt(t,e){var n=this.cache;pt(n,e)||(t.uniform3iv(this.addr,e),mt(n,e))}function Pt(t,e){var n=this.cache;pt(n,e)||(t.uniform4iv(this.addr,e),mt(n,e))}function Ct(t,e){var n=this.cache;pt(n,e)||(t.uniform1fv(this.addr,e),mt(n,e))}function Dt(t,e){var n=this.cache;pt(n,e)||(t.uniform1iv(this.addr,e),mt(n,e))}function Nt(t,e){var n=this.cache,i=ft(e,this.size,2);pt(n,i)||(t.uniform2fv(this.addr,i),this.updateCache(i))}function It(t,e){var n=this.cache,i=ft(e,this.size,3);pt(n,i)||(t.uniform3fv(this.addr,i),this.updateCache(i))}function Ut(t,e){var n=this.cache,i=ft(e,this.size,4);pt(n,i)||(t.uniform4fv(this.addr,i),this.updateCache(i))}function Ft(t,e){var n=this.cache,i=ft(e,this.size,4);pt(n,i)||(t.uniformMatrix2fv(this.addr,!1,i),this.updateCache(i))}function Ot(t,e){var n=this.cache,i=ft(e,this.size,9);pt(n,i)||(t.uniformMatrix3fv(this.addr,!1,i),this.updateCache(i))}function zt(t,e){var n=this.cache,i=ft(e,this.size,16);pt(n,i)||(t.uniformMatrix4fv(this.addr,!1,i),this.updateCache(i))}function Gt(t,e,n){var i=this.cache,r=e.length,a=gt(n,r);!1===pt(i,a)&&(t.uniform1iv(this.addr,a),mt(i,a));for(var o=0;o!==r;++o)n.setTexture2D(e[o]||Sr,a[o])}function Bt(t,e,n){var i=this.cache,r=e.length,a=gt(n,r);!1===pt(i,a)&&(t.uniform1iv(this.addr,a),mt(i,a));for(var o=0;o!==r;++o)n.setTextureCube(e[o]||Lr,a[o])}function Vt(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){return 5126===t?vt:35664===t?_t:35665===t?yt:35666===t?bt:35674===t?wt:35675===t?Et:35676===t?Mt:35678===t||36198===t?St:35679===t?Tt:35680===t?Lt:5124===t||35670===t?xt:35667===t||35671===t?At:35668===t||35672===t?Rt:35669===t||35673===t?Pt:void 0}(e.type)}function Ht(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){return 5126===t?Ct:35664===t?Nt:35665===t?It:35666===t?Ut:35674===t?Ft:35675===t?Ot:35676===t?zt:35678===t?Gt:35680===t?Bt:5124===t||35670===t?Dt:35667===t||35671===t?At:35668===t||35672===t?Rt:35669===t||35673===t?Pt:void 0}(e.type)}function kt(t){this.id=t,dt.call(this)}function Wt(t,e){t.seq.push(e),t.map[e.id]=e}function jt(t,e,n){var i=t.name,r=i.length;for(Nr.lastIndex=0;;){var a=Nr.exec(i),o=Nr.lastIndex,s=a[1],l="]"===a[2],c=a[3];if(l&&(s|=0),void 0===c||"["===c&&o+2===r){Wt(n,void 0===c?new Vt(s,t,e):new Ht(s,t,e));break}var u=n.map[s];void 0===u&&Wt(n,u=new kt(s)),n=u}}function Xt(t,e,n){dt.call(this),this.renderer=n;for(var i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),r=0;r<i;++r){var a=t.getActiveUniform(e,r);jt(a,t.getUniformLocation(e,a.name),this)}}function Yt(t,e,n){var i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),!1===t.getShaderParameter(i,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(i)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(i),function(t){for(var e=t.split("\n"),n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join("\n")}(n)),i}function qt(t){switch(t){case ir:return["Linear","( value )"];case rr:return["sRGB","( value )"];case or:return["RGBE","( value )"];case sr:return["RGBM","( value, 7.0 )"];case lr:return["RGBM","( value, 16.0 )"];case cr:return["RGBD","( value, 256.0 )"];case ar:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function Zt(t,e){var n=qt(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Jt(t,e){var n=qt(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Qt(t,e){var n;switch(e){case Wn:n="Linear";break;case jn:n="Reinhard";break;case Xn:n="Uncharted2";break;case Yn:n="OptimizedCineon";break;case qn:n="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Kt(t){return""!==t}function $t(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function te(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}function ee(t){return t.replace(/^[ \t]*#include +<([\w\d.\/]+)>/gm,function(t,e){var n=vr[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return ee(n)})}function ne(t){return t.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(t,e,n,i){for(var r="",a=parseInt(e);a<parseInt(n);a++)r+=i.replace(/\[ i \]/g,"[ "+a+" ]");return r})}function ie(t,e,n,i,r,a,o){var s=t.context,l=i.defines,c=r.vertexShader,u=r.fragmentShader,h="SHADOWMAP_TYPE_BASIC";a.shadowMapType===rn?h="SHADOWMAP_TYPE_PCF":a.shadowMapType===an&&(h="SHADOWMAP_TYPE_PCF_SOFT");var d="ENVMAP_TYPE_CUBE",f="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(i.envMap.mapping){case Zn:case Jn:d="ENVMAP_TYPE_CUBE";break;case ti:case ei:d="ENVMAP_TYPE_CUBE_UV";break;case Qn:case Kn:d="ENVMAP_TYPE_EQUIREC";break;case $n:d="ENVMAP_TYPE_SPHERE"}switch(i.envMap.mapping){case Jn:case Kn:f="ENVMAP_MODE_REFRACTION"}switch(i.combine){case Bn:p="ENVMAP_BLENDING_MULTIPLY";break;case Vn:p="ENVMAP_BLENDING_MIX";break;case Hn:p="ENVMAP_BLENDING_ADD"}}var m,g,v=0<t.gammaFactor?t.gammaFactor:1,x=o.isWebGL2?"":function(t,e,n){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap&&!e.objectSpaceNormalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Kt).join("\n")}(i.extensions,a,e),_=function(t){var e=[];for(var n in t){var i=t[n];!1===i||e.push("#define "+n+" "+i)}return e.join("\n")}(l),y=s.createProgram();if(i.isRawShaderMaterial?(0<(m=[_].filter(Kt).join("\n")).length&&(m+="\n"),0<(g=[x,_].filter(Kt).join("\n")).length&&(g+="\n")):(m=["precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,_,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+v,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+f:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+h:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Kt).join("\n"),g=[x,"precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,_,a.alphaTest?"#define ALPHATEST "+a.alphaTest+(a.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+v,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.matcap?"#define USE_MATCAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+d:"",a.envMap?"#define "+f:"",a.envMap?"#define "+p:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+h:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",a.envMap&&(o.isWebGL2||e.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",a.toneMapping===kn?"":"#define TONE_MAPPING",a.toneMapping===kn?"":vr.tonemapping_pars_fragment,a.toneMapping===kn?"":Qt("toneMapping",a.toneMapping),a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.matcapEncoding||a.envMapEncoding||a.emissiveMapEncoding?vr.encodings_pars_fragment:"",a.mapEncoding?Zt("mapTexelToLinear",a.mapEncoding):"",a.matcapEncoding?Zt("matcapTexelToLinear",a.matcapEncoding):"",a.envMapEncoding?Zt("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?Zt("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?Jt("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(Kt).join("\n")),c=te(c=$t(c=ee(c),a),a),u=te(u=$t(u=ee(u),a),a),c=ne(c),u=ne(u),o.isWebGL2&&!i.isRawShaderMaterial){var b=!1,w=/^\s*#version\s+300\s+es\s*\n/;i.isShaderMaterial&&null!==c.match(w)&&null!==u.match(w)&&(b=!0,c=c.replace(w,""),u=u.replace(w,"")),m="#version 300 es\n\n#define attribute in\n#define varying out\n#define texture2D texture\n"+m,g=["#version 300 es\n","#define varying in",b?"":"out highp vec4 pc_fragColor;",b?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g}var E=m+c,M=g+u,S=Yt(s,s.VERTEX_SHADER,E),T=Yt(s,s.FRAGMENT_SHADER,M);s.attachShader(y,S),s.attachShader(y,T),void 0===i.index0AttributeName?!0===a.morphTargets&&s.bindAttribLocation(y,0,"position"):s.bindAttribLocation(y,0,i.index0AttributeName),s.linkProgram(y);var L,A,R=s.getProgramInfoLog(y).trim(),P=s.getShaderInfoLog(S).trim(),C=s.getShaderInfoLog(T).trim(),D=!0,N=!0;return!1===s.getProgramParameter(y,s.LINK_STATUS)?(D=!1,console.error("THREE.WebGLProgram: shader error: ",s.getError(),"gl.VALIDATE_STATUS",s.getProgramParameter(y,s.VALIDATE_STATUS),"gl.getProgramInfoLog",R,P,C)):""===R?(""===P||""===C)&&(N=!1):console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",R),N&&(this.diagnostics={runnable:D,material:i,programLog:R,vertexShader:{log:P,prefix:m},fragmentShader:{log:C,prefix:g}}),s.deleteShader(S),s.deleteShader(T),this.getUniforms=function(){return null==L&&(L=new Xt(s,y,t)),L},this.getAttributes=function(){return void 0===A&&(A=function(t,e){for(var n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),r=0;r<i;r++){var a=t.getActiveAttrib(e,r).name;n[a]=t.getAttribLocation(e,a)}return n}(s,y)),A},this.destroy=function(){s.deleteProgram(y),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.name=r.name,this.id=Ir++,this.code=n,this.usedTimes=1,this.program=y,this.vertexShader=S,this.fragmentShader=T,this}function re(t,e,n){function i(t,e){var n;return t?t.isTexture?n=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),n=t.texture.encoding):n=ir,n===ir&&e&&(n=ar),n}var r=[],a={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},o=["precision","supportsVertexTextures","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];this.getParameters=function(e,r,o,s,l,c,u){var h=a[e.type],d=u.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(n.floatVertexTextures)return 1024;var i=n.maxVertexUniforms,r=qe((i-20)/4),a=Je(r,e.length);return a<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+a+"."),0):a}(u):0,f=n.precision;null!==e.precision&&((f=n.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",f,"instead."));var p=t.getRenderTarget();return{shaderID:h,precision:f,supportsVertexTextures:n.vertexTextures,outputEncoding:i(p?p.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:i(e.map,t.gammaInput),matcap:!!e.matcap,matcapEncoding:i(e.matcap,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:i(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===ti||e.envMap.mapping===ei),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:i(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===dr,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,fog:!!s,useFog:e.fog,fogExp:s&&s.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:n.logarithmicDepthBuffer,skinning:e.skinning&&0<d,maxBones:d,useVertexTexture:n.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numClippingPlanes:l,numClipIntersection:c,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&u.receiveShadow&&0<o.length,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===ln,flipSided:e.side===sn,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,n){var i=[];if(n.shaderID?i.push(n.shaderID):(i.push(e.fragmentShader),i.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)i.push(r),i.push(e.defines[r]);for(var a=0;a<o.length;a++)i.push(n[o[a]]);return i.push(e.onBeforeCompile.toString()),i.push(t.gammaOutput),i.push(t.gammaFactor),i.join()},this.acquireProgram=function(i,a,o,s){for(var l,c,u=0,h=r.length;u<h;u++)if((c=r[u]).code===s){++(l=c).usedTimes;break}return void 0===l&&(l=new ie(t,e,s,i,a,o,n),r.push(l)),l},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=r.indexOf(t);r[e]=r[r.length-1],r.pop(),t.destroy()}},this.programs=r}function ae(){var t=new WeakMap;return{get:function(e){var n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function oe(t,e){return t.groupOrder===e.groupOrder?t.renderOrder===e.renderOrder?t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id===e.material.id?t.z===e.z?t.id-e.id:t.z-e.z:t.material.id-e.material.id:t.renderOrder-e.renderOrder:t.groupOrder-e.groupOrder}function se(t,e){return t.groupOrder===e.groupOrder?t.renderOrder===e.renderOrder?t.z===e.z?t.id-e.id:e.z-t.z:t.renderOrder-e.renderOrder:t.groupOrder-e.groupOrder}function le(){function t(t,i,r,a,o,s){var l=e[n];return void 0===l?(l={id:t.id,object:t,geometry:i,material:r,program:r.program,groupOrder:a,renderOrder:t.renderOrder,z:o,group:s},e[n]=l):(l.id=t.id,l.object=t,l.geometry=i,l.material=r,l.program=r.program,l.groupOrder=a,l.renderOrder=t.renderOrder,l.z=o,l.group=s),n++,l}var e=[],n=0,i=[],r=[];return{opaque:i,transparent:r,init:function(){n=0,i.length=0,r.length=0},push:function(e,n,a,o,s,l){var c=t(e,n,a,o,s,l);(!0===a.transparent?r:i).push(c)},unshift:function(e,n,a,o,s,l){var c=t(e,n,a,o,s,l);(!0===a.transparent?r:i).unshift(c)},sort:function(){1<i.length&&i.sort(oe),1<r.length&&r.sort(se)}}}function ce(){function t(n){var i=n.target;i.removeEventListener("dispose",t),delete e[i.id]}var e={};return{get:function(n,i){var r,a=e[n.id];return void 0===a?(r=new le,e[n.id]={},e[n.id][i.id]=r,n.addEventListener("dispose",t)):void 0===(r=a[i.id])&&(r=new le,a[i.id]=r),r},dispose:function(){e={}}}}function ue(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var n;switch(e.type){case"DirectionalLight":n={direction:new a,color:new i,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new g};break;case"SpotLight":n={position:new a,direction:new a,color:new i,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new g};break;case"PointLight":n={position:new a,color:new i,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new g,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new a,skyColor:new i,groundColor:new i};break;case"RectAreaLight":n={color:new i,position:new a,halfWidth:new a,halfHeight:new a}}return t[e.id]=n,n}}}function he(){var t=new ue,e={id:Ur++,hash:{stateID:-1,directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,shadowsLength:-1},ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=new a,i=new r,o=new r;return{setup:function(r,a,s){for(var l=0,c=0,u=0,h=0,d=0,f=0,p=0,m=0,g=s.matrixWorldInverse,v=0,x=r.length;v<x;v++){var _=r[v],y=_.color,b=_.intensity,w=_.distance,E=_.shadow&&_.shadow.map?_.shadow.map.texture:null;if(_.isAmbientLight)l+=y.r*b,c+=y.g*b,u+=y.b*b;else if(_.isDirectionalLight){if((S=t.get(_)).color.copy(_.color).multiplyScalar(_.intensity),S.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),S.direction.sub(n),S.direction.transformDirection(g),S.shadow=_.castShadow,_.castShadow){var M=_.shadow;S.shadowBias=M.bias,S.shadowRadius=M.radius,S.shadowMapSize=M.mapSize}e.directionalShadowMap[h]=E,e.directionalShadowMatrix[h]=_.shadow.matrix,e.directional[h]=S,h++}else if(_.isSpotLight){if((S=t.get(_)).position.setFromMatrixPosition(_.matrixWorld),S.position.applyMatrix4(g),S.color.copy(y).multiplyScalar(b),S.distance=w,S.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),S.direction.sub(n),S.direction.transformDirection(g),S.coneCos=He(_.angle),S.penumbraCos=He(_.angle*(1-_.penumbra)),S.decay=_.decay,S.shadow=_.castShadow,_.castShadow){M=_.shadow;S.shadowBias=M.bias,S.shadowRadius=M.radius,S.shadowMapSize=M.mapSize}e.spotShadowMap[f]=E,e.spotShadowMatrix[f]=_.shadow.matrix,e.spot[f]=S,f++}else if(_.isRectAreaLight){(S=t.get(_)).color.copy(y).multiplyScalar(b),S.position.setFromMatrixPosition(_.matrixWorld),S.position.applyMatrix4(g),o.identity(),i.copy(_.matrixWorld),i.premultiply(g),o.extractRotation(i),S.halfWidth.set(.5*_.width,0,0),S.halfHeight.set(0,.5*_.height,0),S.halfWidth.applyMatrix4(o),S.halfHeight.applyMatrix4(o),e.rectArea[p]=S,p++}else if(_.isPointLight){if((S=t.get(_)).position.setFromMatrixPosition(_.matrixWorld),S.position.applyMatrix4(g),S.color.copy(_.color).multiplyScalar(_.intensity),S.distance=_.distance,S.decay=_.decay,S.shadow=_.castShadow,_.castShadow){M=_.shadow;S.shadowBias=M.bias,S.shadowRadius=M.radius,S.shadowMapSize=M.mapSize,S.shadowCameraNear=M.camera.near,S.shadowCameraFar=M.camera.far}e.pointShadowMap[d]=E,e.pointShadowMatrix[d]=_.shadow.matrix,e.point[d]=S,d++}else if(_.isHemisphereLight){var S;(S=t.get(_)).direction.setFromMatrixPosition(_.matrixWorld),S.direction.transformDirection(g),S.direction.normalize(),S.skyColor.copy(_.color).multiplyScalar(b),S.groundColor.copy(_.groundColor).multiplyScalar(b),e.hemi[m]=S,m++}}e.ambient[0]=l,e.ambient[1]=c,e.ambient[2]=u,e.directional.length=h,e.spot.length=f,e.rectArea.length=p,e.point.length=d,e.hemi.length=m,e.hash.stateID=e.id,e.hash.directionalLength=h,e.hash.pointLength=d,e.hash.spotLength=f,e.hash.rectAreaLength=p,e.hash.hemiLength=m,e.hash.shadowsLength=a.length},state:e}}function de(){var t=new he,e=[],n=[];return{init:function(){e.length=0,n.length=0},state:{lightsArray:e,shadowsArray:n,lights:t},setupLights:function(i){t.setup(e,n,i)},pushLight:function(t){e.push(t)},pushShadow:function(t){n.push(t)}}}function fe(){function t(n){var i=n.target;i.removeEventListener("dispose",t),delete e[i.id]}var e={};return{get:function(n,i){var r;return void 0===e[n.id]?(r=new de,e[n.id]={},e[n.id][i.id]=r,n.addEventListener("dispose",t)):void 0===e[n.id][i.id]?(r=new de,e[n.id][i.id]=r):r=e[n.id][i.id],r},dispose:function(){e={}}}}function pe(t,e,n){this.width=t,this.height=e,this.scissor=new S(0,0,t,e),this.scissorTest=!1,this.viewport=new S(0,0,t,e),n=n||{},this.texture=new v(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0===n.minFilter?li:n.minFilter,this.depthBuffer=!(void 0!==n.depthBuffer)||n.depthBuffer,this.stencilBuffer=!(void 0!==n.stencilBuffer)||n.stencilBuffer,this.depthTexture=void 0===n.depthTexture?null:n.depthTexture}function me(t){Y.call(this),this.type="MeshDepthMaterial",this.depthPacking=ur,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}function ge(t){Y.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new a,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}function ve(t,e,n){function i(e,n,i,r,a,o){var s=e.geometry,l=null,c=m,u=e.customDepthMaterial;if(i&&(c=v,u=e.customDistanceMaterial),u)l=u;else{var h=!1;n.morphTargets&&(s&&s.isBufferGeometry?h=s.morphAttributes&&s.morphAttributes.position&&0<s.morphAttributes.position.length:s&&s.isGeometry&&(h=s.morphTargets&&0<s.morphTargets.length)),e.isSkinnedMesh&&!1===n.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e);var d=e.isSkinnedMesh&&n.skinning,g=0;h&&(g|=f),d&&(g|=p),l=c[g]}if(t.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){var y=l.uuid,b=n.uuid,w=x[y];void 0===w&&(w={},x[y]=w);var E=w[b];void 0===E&&(E=l.clone(),w[b]=E),l=E}return l.visible=n.visible,l.wireframe=n.wireframe,l.side=null==n.shadowSide?_[n.side]:n.shadowSide,l.clipShadows=n.clipShadows,l.clippingPlanes=n.clippingPlanes,l.clipIntersection=n.clipIntersection,l.wireframeLinewidth=n.wireframeLinewidth,l.linewidth=n.linewidth,i&&l.isMeshDistanceMaterial&&(l.referencePosition.copy(r),l.nearDistance=a,l.farDistance=o),l}function o(n,r,a,l){if(!1!==n.visible){if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&n.castShadow&&(!n.frustumCulled||s.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);var c=e.update(n),u=n.material;if(Array.isArray(u))for(var h=c.groups,f=0,p=h.length;f<p;f++){var m=h[f],g=u[m.materialIndex];if(g&&g.visible){var v=i(n,g,l,d,a.near,a.far);t.renderBufferDirect(a,null,c,v,n,m)}}else if(u.visible){v=i(n,u,l,d,a.near,a.far);t.renderBufferDirect(a,null,c,v,n,null)}}for(var x=n.children,_=0,y=x.length;_<y;_++)o(x[_],r,a,l)}}for(var s=new w,l=new r,c=new g,u=new g(n,n),h=new a,d=new a,f=1,p=2,m=[,,,,],v=[,,,,],x={},_={0:sn,1:on,2:ln},y=[new a(1,0,0),new a(-1,0,0),new a(0,0,1),new a(0,0,-1),new a(0,1,0),new a(0,-1,0)],b=[new a(0,1,0),new a(0,1,0),new a(0,1,0),new a(0,1,0),new a(0,0,1),new a(0,0,-1)],E=[new S,new S,new S,new S,new S,new S],M=0;M!==1+(f|p);++M){var T=0!=(M&f),L=0!=(M&p),A=new me({depthPacking:hr,morphTargets:T,skinning:L});m[M]=A;var R=new ge({morphTargets:T,skinning:L});v[M]=R}var P=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=rn,this.render=function(e,n,i){if(!1!==P.enabled&&(!1!==P.autoUpdate||!1!==P.needsUpdate)&&0!==e.length){var r=t.getRenderTarget(),a=t.state;a.setBlending(un),a.buffers.color.setClear(1,1,1,1),a.buffers.depth.setTest(!0),a.setScissorTest(!1);for(var f,p=0,m=e.length;p<m;p++){var g=e[p],v=g.shadow,x=g&&g.isPointLight;if(void 0!==v){var _=v.camera;if(c.copy(v.mapSize),c.min(u),x){var w=c.x,M=c.y;E[0].set(2*w,M,w,M),E[1].set(0,M,w,M),E[2].set(3*w,M,w,M),E[3].set(w,M,w,M),E[4].set(3*w,0,w,M),E[5].set(w,0,w,M),c.x*=4,c.y*=2}null===v.map&&(v.map=new pe(c.x,c.y,{minFilter:ai,magFilter:ai,format:Si}),v.map.texture.name=g.name+".shadowMap",_.updateProjectionMatrix()),v.isSpotLightShadow&&v.update(g);var S=v.map,T=v.matrix;d.setFromMatrixPosition(g.matrixWorld),_.position.copy(d),x?(f=6,T.makeTranslation(-d.x,-d.y,-d.z)):(f=1,h.setFromMatrixPosition(g.target.matrixWorld),_.lookAt(h),_.updateMatrixWorld(),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(_.projectionMatrix),T.multiply(_.matrixWorldInverse)),t.setRenderTarget(S),t.clear();for(var L=0;L<f;L++){if(x){h.copy(_.position),h.add(y[L]),_.up.copy(b[L]),_.lookAt(h),_.updateMatrixWorld();var A=E[L];a.viewport(A)}l.multiplyMatrices(_.projectionMatrix,_.matrixWorldInverse),s.setFromMatrix(l),o(n,i,_,x)}}else console.warn("THREE.WebGLShadowMap:",g,"has no shadow.")}P.needsUpdate=!1,t.setRenderTarget(r)}}}function xe(t,e,n,i){function r(e,n,i){var r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var o=0;o<i;o++)t.texImage2D(n+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return a}function a(n,r){(v[n]=1,0===x[n]&&(t.enableVertexAttribArray(n),x[n]=1),_[n]!==r)&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),_[n]=r)}function o(e){!0!==y[e]&&(t.enable(e),y[e]=!0)}function s(e){!1!==y[e]&&(t.disable(e),y[e]=!1)}function l(e,i,r,a,l,c,u,h){return e===un?void(E&&(s(t.BLEND),E=!1)):(E||(o(t.BLEND),E=!0),e===mn?(l=l||i,c=c||r,u=u||a,(i!==T||l!==R)&&(t.blendEquationSeparate(n.convert(i),n.convert(l)),T=i,R=l),(r!==L||a!==A||c!==P||u!==C)&&(t.blendFuncSeparate(n.convert(r),n.convert(a),n.convert(c),n.convert(u)),L=r,A=a,P=c,C=u),M=e,void(D=null)):void((e!==M||h!==D)&&((T!==gn||R!==gn)&&(t.blendEquation(t.FUNC_ADD),T=gn,R=gn),h?e===hn?t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA):e===dn?t.blendFunc(t.ONE,t.ONE):e===fn?t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA):e===pn?t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA):console.error("THREE.WebGLState: Invalid blending: ",e):e===hn?t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA):e===dn?t.blendFunc(t.SRC_ALPHA,t.ONE):e===fn?t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR):e===pn?t.blendFunc(t.ZERO,t.SRC_COLOR):console.error("THREE.WebGLState: Invalid blending: ",e),L=null,A=null,P=null,C=null,M=e,D=h)))}function c(e){N!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),N=e)}function u(e){e===tn?s(t.CULL_FACE):(o(t.CULL_FACE),e!==I&&(e===en?t.cullFace(t.BACK):e===nn?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))),I=e}function h(e,n,i){e?(o(t.POLYGON_OFFSET_FILL),(F!==n||O!==i)&&(t.polygonOffset(n,i),F=n,O=i)):s(t.POLYGON_OFFSET_FILL)}function d(e){void 0===e&&(e=t.TEXTURE0+z-1),H!==e&&(t.activeTexture(e),H=e)}var f=new function(){var e=!1,n=new S,i=null,r=new S(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,a,o,s){!0===s&&(e*=o,i*=o,a*=o),n.set(e,i,a,o),!1===r.equals(n)&&(t.clearColor(e,i,a,o),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},p=new function(){var e=!1,n=null,i=null,r=null;return{setTest:function(e){e?o(t.DEPTH_TEST):s(t.DEPTH_TEST)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){i!==e&&(e?e===Dn?t.depthFunc(t.NEVER):e===Nn?t.depthFunc(t.ALWAYS):e===In?t.depthFunc(t.LESS):e===Un?t.depthFunc(t.LEQUAL):e===Fn?t.depthFunc(t.EQUAL):e===On?t.depthFunc(t.GEQUAL):e===zn?t.depthFunc(t.GREATER):e===Gn?t.depthFunc(t.NOTEQUAL):t.depthFunc(t.LEQUAL):t.depthFunc(t.LEQUAL),i=e)},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}},m=new function(){var e=!1,n=null,i=null,r=null,a=null,l=null,c=null,u=null,h=null;return{setTest:function(e){e?o(t.STENCIL_TEST):s(t.STENCIL_TEST)},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,o){(i!==e||r!==n||a!==o)&&(t.stencilFunc(e,n,o),i=e,r=n,a=o)},setOp:function(e,n,i){(l!==e||c!==n||u!==i)&&(t.stencilOp(e,n,i),l=e,c=n,u=i)},setLocked:function(t){e=t},setClear:function(e){h!==e&&(t.clearStencil(e),h=e)},reset:function(){e=!1,n=null,i=null,r=null,a=null,l=null,c=null,u=null,h=null}}},g=t.getParameter(t.MAX_VERTEX_ATTRIBS),v=new Uint8Array(g),x=new Uint8Array(g),_=new Uint8Array(g),y={},b=null,w=null,E=null,M=null,T=null,L=null,A=null,R=null,P=null,C=null,D=!1,N=null,I=null,U=null,F=null,O=null,z=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),G=!1,B=0,V=t.getParameter(t.VERSION);-1===V.indexOf("WebGL")?-1!==V.indexOf("OpenGL ES")&&(B=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(V)[1]),G=2<=B):(B=parseFloat(/^WebGL\ ([0-9])/.exec(V)[1]),G=1<=B);var H=null,k={},W=new S,j=new S,X={};return X[t.TEXTURE_2D]=r(t.TEXTURE_2D,t.TEXTURE_2D,1),X[t.TEXTURE_CUBE_MAP]=r(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),f.setClear(0,0,0,1),p.setClear(1),m.setClear(0),o(t.DEPTH_TEST),p.setFunc(Un),c(!1),u(en),o(t.CULL_FACE),l(un),{buffers:{color:f,depth:p,stencil:m},initAttributes:function(){for(var t=0,e=v.length;t<e;t++)v[t]=0},enableAttribute:function(t){a(t,0)},enableAttributeAndDivisor:a,disableUnusedAttributes:function(){for(var e=0,n=x.length;e!==n;++e)x[e]!==v[e]&&(t.disableVertexAttribArray(e),x[e]=0)},enable:o,disable:s,getCompressedTextureFormats:function(){if(null===b&&(b=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")||e.get("WEBGL_compressed_texture_astc")))for(var n=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),i=0;i<n.length;i++)b.push(n[i]);return b},useProgram:function(e){return w!==e&&(t.useProgram(e),w=e,!0)},setBlending:l,setMaterial:function(e,n){e.side===ln?s(t.CULL_FACE):o(t.CULL_FACE);var i=e.side===sn;n&&(i=!i),c(i),e.blending===hn&&!1===e.transparent?l(un):l(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),p.setFunc(e.depthFunc),p.setTest(e.depthTest),p.setMask(e.depthWrite),f.setMask(e.colorWrite),h(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:c,setCullFace:u,setLineWidth:function(e){e!==U&&(G&&t.lineWidth(e),U=e)},setPolygonOffset:h,setScissorTest:function(e){e?o(t.SCISSOR_TEST):s(t.SCISSOR_TEST)},activeTexture:d,bindTexture:function(e,n){null===H&&d();var i=k[H];void 0===i&&(i={type:void 0,texture:void 0},k[H]=i),(i.type!==e||i.texture!==n)&&(t.bindTexture(e,n||X[e]),i.type=e,i.texture=n)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===W.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),W.copy(e))},viewport:function(e){!1===j.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),j.copy(e))},reset:function(){for(var e=0;e<x.length;e++)1===x[e]&&(t.disableVertexAttribArray(e),x[e]=0);y={},b=null,H=null,k={},w=null,M=null,N=null,I=null,f.reset(),p.reset(),m.reset()}}}function _e(t,e,n,i,r,a,o){function s(t,e){return A?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function l(t,e,n,i){var r=1;if((t.width>i||t.height>i)&&(r=i/Ye(t.width,t.height)),1>r||!0===e){if(t instanceof ImageBitmap||t instanceof HTMLImageElement||t instanceof HTMLCanvasElement){var a=e?Qe.floorPowerOfTwo:qe,o=a(r*t.width),l=a(r*t.height);void 0===T&&(T=s(o,l));var c=n?s(o,l):T;return c.width=o,c.height=l,c.getContext("2d").drawImage(t,0,0,o,l),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+o+"x"+l+")."),A?c.transferToImageBitmap():c}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function c(t){return Qe.isPowerOfTwo(t.width)&&Qe.isPowerOfTwo(t.height)}function u(t,e){return t.generateMipmaps&&e&&t.minFilter!==ai&&t.minFilter!==li}function h(e,n,r,a){t.generateMipmap(e),i.get(n).__maxMipLevel=je(Ye(r,a))*Math.LOG2E}function d(n,i){if(!r.isWebGL2)return n;var a=n;return n===t.RED&&(i===t.FLOAT&&(a=t.R32F),i===t.HALF_FLOAT&&(a=t.R16F),i===t.UNSIGNED_BYTE&&(a=t.R8)),n===t.RGB&&(i===t.FLOAT&&(a=t.RGB32F),i===t.HALF_FLOAT&&(a=t.RGB16F),i===t.UNSIGNED_BYTE&&(a=t.RGB8)),n===t.RGBA&&(i===t.FLOAT&&(a=t.RGBA32F),i===t.HALF_FLOAT&&(a=t.RGBA16F),i===t.UNSIGNED_BYTE&&(a=t.RGBA8)),a===t.R16F||a===t.R32F||a===t.RGBA16F||a===t.RGBA32F?e.get("EXT_color_buffer_float"):(a===t.RGB16F||a===t.RGB32F)&&console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),a}function f(e){return e===ai||e===oi||e===si?t.NEAREST:t.LINEAR}function p(t){var e=t.target;e.removeEventListener("dispose",p),g(e),e.isVideoTexture&&delete L[e.id],o.memory.textures--}function m(t){var e=t.target;e.removeEventListener("dispose",m),v(e),o.memory.textures--}function g(e){var n=i.get(e);void 0===n.__webglInit||(t.deleteTexture(n.__webglTexture),i.remove(e))}function v(e){var n=i.get(e),r=i.get(e.texture);if(e){if(void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLRenderTargetCube)for(var a=0;6>a;a++)t.deleteFramebuffer(n.__webglFramebuffer[a]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[a]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer);i.remove(e.texture),i.remove(e)}}function x(e,r){var a=i.get(e);if(e.isVideoTexture&&function(t){var e=t.id,n=o.render.frame;L[e]!==n&&(L[e]=n,t.update())}(e),0<e.version&&a.__version!==e.version){var s=e.image;if(void 0===s)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==s.complete)return void b(a,e,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_2D,a.__webglTexture)}function _(n,o,s){var l;if(s?(t.texParameteri(n,t.TEXTURE_WRAP_S,a.convert(o.wrapS)),t.texParameteri(n,t.TEXTURE_WRAP_T,a.convert(o.wrapT)),n===t.TEXTURE_3D&&t.texParameteri(n,t.TEXTURE_WRAP_R,a.convert(o.wrapR)),t.texParameteri(n,t.TEXTURE_MAG_FILTER,a.convert(o.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,a.convert(o.minFilter))):(t.texParameteri(n,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),n===t.TEXTURE_3D&&t.texParameteri(n,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),(o.wrapS!==ii||o.wrapT!==ii)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,t.TEXTURE_MAG_FILTER,f(o.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,f(o.minFilter)),o.minFilter!==ai&&o.minFilter!==li&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),l=e.get("EXT_texture_filter_anisotropic")){if(o.type===vi&&null===e.get("OES_texture_float_linear"))return;if(o.type===xi&&null===(r.isWebGL2||e.get("OES_texture_half_float_linear")))return;(1<o.anisotropy||i.get(o).__currentAnisotropy)&&(t.texParameterf(n,l.TEXTURE_MAX_ANISOTROPY_EXT,Je(o.anisotropy,r.getMaxAnisotropy())),i.get(o).__currentAnisotropy=o.anisotropy)}}function y(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",p),e.__webglTexture=t.createTexture(),o.memory.textures++)}function b(e,i,o){var s=i.isDataTexture3D?t.TEXTURE_3D:t.TEXTURE_2D;y(e,i),n.activeTexture(t.TEXTURE0+o),n.bindTexture(s,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,i.unpackAlignment);var f=function(t){return!r.isWebGL2&&(t.wrapS!==ii||t.wrapT!==ii||t.minFilter!==ai&&t.minFilter!==li)}(i)&&!1===c(i.image),p=l(i.image,f,!1,r.maxTextureSize),m=c(p)||r.isWebGL2,g=a.convert(i.format),v=a.convert(i.type),x=d(g,v);_(s,i,m);var b,w=i.mipmaps;if(i.isDepthTexture){if(x=t.DEPTH_COMPONENT,i.type===vi){if(!r.isWebGL2)throw new Error("Float Depth Texture only supported in WebGL2.0");x=t.DEPTH_COMPONENT32F}else r.isWebGL2&&(x=t.DEPTH_COMPONENT16);i.format===Ai&&x===t.DEPTH_COMPONENT&&i.type!==pi&&i.type!==gi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=pi,v=a.convert(i.type)),i.format===Ri&&(x=t.DEPTH_STENCIL,i.type!==wi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=wi,v=a.convert(i.type))),n.texImage2D(t.TEXTURE_2D,0,x,p.width,p.height,0,g,v,null)}else if(i.isDataTexture)if(0<w.length&&m){for(var E=0,M=w.length;E<M;E++)b=w[E],n.texImage2D(t.TEXTURE_2D,E,x,b.width,b.height,0,g,v,b.data);i.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else n.texImage2D(t.TEXTURE_2D,0,x,p.width,p.height,0,g,v,p.data),e.__maxMipLevel=0;else if(i.isCompressedTexture){for(E=0,M=w.length;E<M;E++)b=w[E],i.format!==Si&&i.format!==Mi?-1<n.getCompressedTextureFormats().indexOf(g)?n.compressedTexImage2D(t.TEXTURE_2D,E,x,b.width,b.height,0,b.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(t.TEXTURE_2D,E,x,b.width,b.height,0,g,v,b.data);e.__maxMipLevel=w.length-1}else if(i.isDataTexture3D)n.texImage3D(t.TEXTURE_3D,0,x,p.width,p.height,p.depth,0,g,v,p.data),e.__maxMipLevel=0;else if(0<w.length&&m){for(E=0,M=w.length;E<M;E++)b=w[E],n.texImage2D(t.TEXTURE_2D,E,x,g,v,b);i.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else n.texImage2D(t.TEXTURE_2D,0,x,g,v,p),e.__maxMipLevel=0;u(i,m)&&h(t.TEXTURE_2D,i,p.width,p.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}function w(e,r,o,s){var l=a.convert(r.texture.format),c=a.convert(r.texture.type),u=d(l,c);n.texImage2D(s,0,u,r.width,r.height,0,l,c,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,o,s,i.get(r.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function E(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer&&!n.stencilBuffer){if(i){var r=S(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,r,t.DEPTH_COMPONENT16,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){r=S(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,r,t.DEPTH_STENCIL,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)}else{var o=d(a.convert(n.texture.format),a.convert(n.texture.type));if(i){r=S(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,r,o,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,o,n.width,n.height)}t.bindRenderbuffer(t.RENDERBUFFER,null)}function M(e){var n=i.get(e),r=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),x(n.depthTexture,0);var r=i.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===Ai)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0);else{if(n.depthTexture.format!==Ri)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0)}}(n.__webglFramebuffer,e)}else if(r){n.__webglDepthbuffer=[];for(var a=0;6>a;a++)t.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer[a]),n.__webglDepthbuffer[a]=t.createRenderbuffer(),E(n.__webglDepthbuffer[a],e)}else t.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),E(n.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}function S(t){return r.isWebGL2&&t.isWebGLMultisampleRenderTarget?Je(r.maxSamples,t.samples):0}var T,L={},A="undefined"!=typeof OffscreenCanvas;this.setTexture2D=x,this.setTexture3D=function(e,r){var a=i.get(e);return 0<e.version&&a.__version!==e.version?void b(a,e,r):(n.activeTexture(t.TEXTURE0+r),void n.bindTexture(t.TEXTURE_3D,a.__webglTexture))},this.setTextureCube=function(e,o){var s=i.get(e);if(6===e.image.length)if(0<e.version&&s.__version!==e.version){y(s,e),n.activeTexture(t.TEXTURE0+o),n.bindTexture(t.TEXTURE_CUBE_MAP,s.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var f=e&&e.isCompressedTexture,p=e.image[0]&&e.image[0].isDataTexture,m=[],g=0;6>g;g++)m[g]=f||p?p?e.image[g].image:e.image[g]:l(e.image[g],!1,!0,r.maxCubemapSize);var v=m[0],x=c(v)||r.isWebGL2,b=a.convert(e.format),w=a.convert(e.type),E=d(b,w);_(t.TEXTURE_CUBE_MAP,e,x);for(g=0;6>g;g++)if(f)for(var M,S=m[g].mipmaps,T=0,L=S.length;T<L;T++)M=S[T],e.format!==Si&&e.format!==Mi?-1<n.getCompressedTextureFormats().indexOf(b)?n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,T,E,M.width,M.height,0,M.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,T,E,M.width,M.height,0,b,w,M.data);else p?n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,E,m[g].width,m[g].height,0,b,w,m[g].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,E,b,w,m[g]);s.__maxMipLevel=f?S.length-1:0,u(e,x)&&h(t.TEXTURE_CUBE_MAP,e,v.width,v.height),s.__version=e.version,e.onUpdate&&e.onUpdate(e)}else n.activeTexture(t.TEXTURE0+o),n.bindTexture(t.TEXTURE_CUBE_MAP,s.__webglTexture)},this.setTextureCubeDynamic=function(e,r){n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_CUBE_MAP,i.get(e).__webglTexture)},this.setupRenderTarget=function(e){var s=i.get(e),l=i.get(e.texture);e.addEventListener("dispose",m),l.__webglTexture=t.createTexture(),o.memory.textures++;var f=!0===e.isWebGLRenderTargetCube,p=!0===e.isWebGLMultisampleRenderTarget,g=c(e)||r.isWebGL2;if(f){s.__webglFramebuffer=[];for(var v=0;6>v;v++)s.__webglFramebuffer[v]=t.createFramebuffer()}else if(s.__webglFramebuffer=t.createFramebuffer(),p)if(r.isWebGL2){s.__webglMultisampledFramebuffer=t.createFramebuffer(),s.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,s.__webglColorRenderbuffer);var x=d(a.convert(e.texture.format),a.convert(e.texture.type)),y=S(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,y,x,e.width,e.height),t.bindFramebuffer(t.FRAMEBUFFER,s.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,s.__webglColorRenderbuffer),t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(s.__webglDepthRenderbuffer=t.createRenderbuffer(),E(s.__webglDepthRenderbuffer,e,!0)),t.bindFramebuffer(t.FRAMEBUFFER,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(f){n.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),_(t.TEXTURE_CUBE_MAP,e.texture,g);for(v=0;6>v;v++)w(s.__webglFramebuffer[v],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+v);u(e.texture,g)&&h(t.TEXTURE_CUBE_MAP,e.texture,e.width,e.height),n.bindTexture(t.TEXTURE_CUBE_MAP,null)}else n.bindTexture(t.TEXTURE_2D,l.__webglTexture),_(t.TEXTURE_2D,e.texture,g),w(s.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),u(e.texture,g)&&h(t.TEXTURE_2D,e.texture,e.width,e.height),n.bindTexture(t.TEXTURE_2D,null);e.depthBuffer&&M(e)},this.updateRenderTargetMipmap=function(e){var a=e.texture;if(u(a,c(e)||r.isWebGL2)){var o=e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,s=i.get(a).__webglTexture;n.bindTexture(o,s),h(o,a,e.width,e.height),n.bindTexture(o,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(r.isWebGL2){var n=i.get(e);t.bindFramebuffer(t.READ_FRAMEBUFFER,n.__webglMultisampledFramebuffer),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,n.__webglFramebuffer);var a=e.width,o=e.height,s=t.COLOR_BUFFER_BIT;e.depthBuffer&&(s|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&(s|=t.STENCIL_BUFFER_BIT),t.blitFramebuffer(0,0,a,o,0,0,a,o,s,t.NEAREST)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}}function ye(t,e,n){return{convert:function(i){var r;if(i===ni)return t.REPEAT;if(i===ii)return t.CLAMP_TO_EDGE;if(i===ri)return t.MIRRORED_REPEAT;if(i===ai)return t.NEAREST;if(i===oi)return t.NEAREST_MIPMAP_NEAREST;if(i===si)return t.NEAREST_MIPMAP_LINEAR;if(i===li)return t.LINEAR;if(i===ci)return t.LINEAR_MIPMAP_NEAREST;if(i===ui)return t.LINEAR_MIPMAP_LINEAR;if(i===hi)return t.UNSIGNED_BYTE;if(i===_i)return t.UNSIGNED_SHORT_4_4_4_4;if(i===yi)return t.UNSIGNED_SHORT_5_5_5_1;if(i===bi)return t.UNSIGNED_SHORT_5_6_5;if(i===di)return t.BYTE;if(i===fi)return t.SHORT;if(i===pi)return t.UNSIGNED_SHORT;if(i===mi)return t.INT;if(i===gi)return t.UNSIGNED_INT;if(i===vi)return t.FLOAT;if(i===xi){if(n.isWebGL2)return t.HALF_FLOAT;if(null!==(r=e.get("OES_texture_half_float")))return r.HALF_FLOAT_OES}if(i===Ei)return t.ALPHA;if(i===Mi)return t.RGB;if(i===Si)return t.RGBA;if(i===Ti)return t.LUMINANCE;if(i===Li)return t.LUMINANCE_ALPHA;if(i===Ai)return t.DEPTH_COMPONENT;if(i===Ri)return t.DEPTH_STENCIL;if(i===Pi)return t.RED;if(i===gn)return t.FUNC_ADD;if(i===vn)return t.FUNC_SUBTRACT;if(i===xn)return t.FUNC_REVERSE_SUBTRACT;if(i===bn)return t.ZERO;if(i===wn)return t.ONE;if(i===En)return t.SRC_COLOR;if(i===Mn)return t.ONE_MINUS_SRC_COLOR;if(i===Sn)return t.SRC_ALPHA;if(i===Tn)return t.ONE_MINUS_SRC_ALPHA;if(i===Ln)return t.DST_ALPHA;if(i===An)return t.ONE_MINUS_DST_ALPHA;if(i===Rn)return t.DST_COLOR;if(i===Pn)return t.ONE_MINUS_DST_COLOR;if(i===Cn)return t.SRC_ALPHA_SATURATE;if((i===Ci||i===Di||i===Ni||i===Ii)&&null!==(r=e.get("WEBGL_compressed_texture_s3tc"))){if(i===Ci)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Di)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Ni)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Ii)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((i===Ui||i===Fi||i===Oi||i===zi)&&null!==(r=e.get("WEBGL_compressed_texture_pvrtc"))){if(i===Ui)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Fi)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===Oi)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===zi)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===Gi&&null!==(r=e.get("WEBGL_compressed_texture_etc1")))return r.COMPRESSED_RGB_ETC1_WEBGL;if((i===Bi||i===Vi||i===Hi||i===ki||i===Wi||i===ji||i===Xi||i===Yi||i===qi||i===Zi||i===Ji||i===Qi||i===Ki||i===$i)&&null!==(r=e.get("WEBGL_compressed_texture_astc")))return i;if(i===_n||i===yn){if(n.isWebGL2){if(i===_n)return t.MIN;if(i===yn)return t.MAX}if(null!==(r=e.get("EXT_blend_minmax"))){if(i===_n)return r.MIN_EXT;if(i===yn)return r.MAX_EXT}}if(i===wi){if(n.isWebGL2)return t.UNSIGNED_INT_24_8;if(null!==(r=e.get("WEBGL_depth_texture")))return r.UNSIGNED_INT_24_8_WEBGL}return 0}}}function be(){h.call(this),this.type="Group"}function we(t){m.call(this),this.cameras=t||[]}function Ee(t,e,n){Fr.setFromMatrixPosition(e.matrixWorld),Or.setFromMatrixPosition(n.matrixWorld);var i=Fr.distanceTo(Or),r=e.projectionMatrix.elements,a=n.projectionMatrix.elements,o=r[14]/(r[10]-1),s=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],u=(r[8]-1)/r[0],h=(a[8]+1)/a[0],d=i/(-u+h),f=d*-u;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(d),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);var p=o+d,m=s+d;t.projectionMatrix.makePerspective(o*u-f,o*h+(i-f),l*s/m*p,c*s/m*p,p,m)}function Me(t){function e(){return null!==c&&!0===c.isPresenting}function n(){if(e()){var n=c.getEyeParameters("left"),i=n.renderWidth*v,r=n.renderHeight*v;L=t.getPixelRatio(),t.getSize(A),t.setDrawingBufferSize(2*i,r,1),P.start()}else l.enabled&&t.setDrawingBufferSize(A.width,A.height,L),P.stop()}function i(t){for(var e,n=navigator.getGamepads&&navigator.getGamepads(),i=0,r=0,a=n.length;i<a;i++)if((e=n[i])&&("Daydream Controller"===e.id||"Gear VR Controller"===e.id||"Oculus Go Controller"===e.id||"OpenVR Gamepad"===e.id||e.id.startsWith("Oculus Touch")||e.id.startsWith("Spatial Controller"))){if(r===t)return e;r++}}function s(){for(var t=0;t<d.length;t++){var e=d[t],n=i(t);if(void 0!==n&&void 0!==n.pose){if(null===n.pose)return;var r=n.pose;!1===r.hasPosition&&e.position.set(.2,-.6,-.05),null!==r.position&&e.position.fromArray(r.position),null!==r.orientation&&e.quaternion.fromArray(r.orientation),e.matrix.compose(e.position,e.quaternion,e.scale),e.matrix.premultiply(f),e.matrix.decompose(e.position,e.quaternion,e.scale),e.matrixWorldNeedsUpdate=!0,e.visible=!0;var a="Daydream Controller"===n.id?0:1;R[t]!==n.buttons[a].pressed&&(R[t]=n.buttons[a].pressed,!0===R[t]?e.dispatchEvent({type:"selectstart"}):(e.dispatchEvent({type:"selectend"}),e.dispatchEvent({type:"select"})))}else e.visible=!1}}var l=this,c=null,u=null,h=null,d=[],f=new r,p=new r,v=1,x="stage";"undefined"!=typeof window&&"VRFrameData"in window&&(u=new window.VRFrameData,window.addEventListener("vrdisplaypresentchange",n,!1));var _=new r,y=new o,b=new a,w=new m;w.bounds=new S(0,0,.5,1),w.layers.enable(1);var E=new m;E.bounds=new S(.5,0,.5,1),E.layers.enable(2);var M=new we([w,E]);M.layers.enable(1),M.layers.enable(2);var L,A=new g,R=[];this.enabled=!1,this.getController=function(t){var e=d[t];return void 0===e&&((e=new be).matrixAutoUpdate=!1,e.visible=!1,d[t]=e),e},this.getDevice=function(){return c},this.setDevice=function(t){void 0!==t&&(c=t),P.setContext(t)},this.setFramebufferScaleFactor=function(t){v=t},this.setFrameOfReferenceType=function(t){x=t},this.setPoseTarget=function(t){void 0!==t&&(h=t)},this.getCamera=function(t){var n="stage"===x?1.6:0;if(!1===e())return t.position.set(0,n,0),t.rotation.set(0,0,0),t;if(c.depthNear=t.near,c.depthFar=t.far,c.getFrameData(u),"stage"===x){var i=c.stageParameters;i?f.fromArray(i.sittingToStandingTransform):f.makeTranslation(0,n,0)}var r=u.pose,a=null===h?t:h;a.matrix.copy(f),a.matrix.decompose(a.position,a.quaternion,a.scale),null!==r.orientation&&(y.fromArray(r.orientation),a.quaternion.multiply(y)),null!==r.position&&(y.setFromRotationMatrix(f),b.fromArray(r.position),b.applyQuaternion(y),a.position.add(b)),a.updateMatrixWorld(),w.near=t.near,E.near=t.near,w.far=t.far,E.far=t.far,w.matrixWorldInverse.fromArray(u.leftViewMatrix),E.matrixWorldInverse.fromArray(u.rightViewMatrix),p.getInverse(f),"stage"===x&&(w.matrixWorldInverse.multiply(p),E.matrixWorldInverse.multiply(p));var o=a.parent;null!==o&&(_.getInverse(o.matrixWorld),w.matrixWorldInverse.multiply(_),E.matrixWorldInverse.multiply(_)),w.matrixWorld.getInverse(w.matrixWorldInverse),E.matrixWorld.getInverse(E.matrixWorldInverse),w.projectionMatrix.fromArray(u.leftProjectionMatrix),E.projectionMatrix.fromArray(u.rightProjectionMatrix),Ee(M,w,E);var l=c.getLayers();if(l.length){var d=l[0];null!==d.leftBounds&&4===d.leftBounds.length&&w.bounds.fromArray(d.leftBounds),null!==d.rightBounds&&4===d.rightBounds.length&&E.bounds.fromArray(d.rightBounds)}return s(),M},this.getStandingMatrix=function(){return f},this.isPresenting=e;var P=new T;this.setAnimationLoop=function(t){P.setAnimationLoop(t)},this.submitFrame=function(){e()&&c.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",n)}}function Se(t){function e(){return null!==l&&null!==u}function n(t){var e=f[p.indexOf(t.inputSource)];e&&e.dispatchEvent({type:t.type})}function i(){t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),y.stop()}function a(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}var o=t.context,s=null,l=null,c=1,u=null,h="stage",d=null,f=[],p=[],g=new m;g.layers.enable(1),g.viewport=new S;var v=new m;v.layers.enable(2),v.viewport=new S;var x=new we([g,v]);x.layers.enable(1),x.layers.enable(2),this.enabled=!1,this.getController=function(t){var e=f[t];return void 0===e&&((e=new be).matrixAutoUpdate=!1,e.visible=!1,f[t]=e),e},this.getDevice=function(){return s},this.setDevice=function(t){void 0!==t&&(s=t),t instanceof XRDevice&&o.setCompatibleXRDevice(t)},this.setFramebufferScaleFactor=function(t){c=t},this.setFrameOfReferenceType=function(t){h=t},this.setSession=function(e){null!==(l=e)&&(l.addEventListener("select",n),l.addEventListener("selectstart",n),l.addEventListener("selectend",n),l.addEventListener("end",i),l.baseLayer=new XRWebGLLayer(l,o,{framebufferScaleFactor:c}),l.requestFrameOfReference(h).then(function(e){u=e,t.setFramebuffer(l.baseLayer.framebuffer),y.setContext(l),y.start()}),p=l.getInputSources(),l.addEventListener("inputsourceschange",function(){p=l.getInputSources(),console.log(p);for(var t=0;t<f.length;t++)f[t].userData.inputSource=p[t]}))},this.getCamera=function(t){if(e()){var n=t.parent,i=x.cameras;a(x,n);for(var r=0;r<i.length;r++)a(i[r],n);t.matrixWorld.copy(x.matrixWorld);for(var o=t.children,s=(r=0,o.length);r<s;r++)o[r].updateMatrixWorld(!0);return Ee(x,g,v),x}return t},this.isPresenting=e;var _=null,y=new T;y.setAnimationLoop(function(t,e){if(null!==(d=e.getDevicePose(u)))for(var n=l.baseLayer,i=e.views,r=0;r<i.length;r++){var a=i[r],o=n.getViewport(a),s=d.getViewMatrix(a),c=x.cameras[r];c.matrix.fromArray(s).getInverse(c.matrix),c.projectionMatrix.fromArray(a.projectionMatrix),c.viewport.set(o.x,o.y,o.width,o.height),0===r&&x.matrix.copy(c.matrix)}for(r=0;r<f.length;r++){var h=f[r],m=p[r];if(m){var g=e.getInputPose(m,u);if(null!==g){"targetRay"in g?h.matrix.elements=g.targetRay.transformMatrix:"pointerMatrix"in g&&(h.matrix.elements=g.pointerMatrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.visible=!0;continue}}h.visible=!1}_&&_(t)}),this.setAnimationLoop=function(t){_=t},this.dispose=function(){},this.getStandingMatrix=function(){return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."),new r},this.submitFrame=function(){}}function Te(t,e,n,i,r,a,o){try{var s=t[a](o),l=s.value}catch(t){return void n(t)}s.done?e(l):Promise.resolve(l).then(i,r)}function Le(t){return function(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Ae(t){for(var e=1;e<arguments.length;e++){var n=null==arguments[e]?{}:arguments[e],i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),i.forEach(function(e){Re(t,e,n[e])})}return t}function Re(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Pe(){return Ce.apply(this,arguments)}function Ce(){return t=regeneratorRuntime.mark(function t(){var e,n,i;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:e=Zr*(-Br-kr),Zr+=1,Jr+=Wr,Qr+=jr,n=Math.random()-.5,i=Le(Array(Vr)).map(function(t,i){return De(i,e,n)}),Promise.all(i).then(function(t){Kr.push(t)});case 7:case"end":return t.stop()}},t)}),(Ce=function(){var e=this,n=arguments;return new Promise(function(i,r){function a(t){Te(s,i,r,a,o,"next",t)}function o(t){Te(s,i,r,a,o,"throw",t)}var s=t.apply(e,n);a(void 0)})}).apply(this,arguments);var t}function De(t,e,n){if(Math.random()>Yr)return new Promise(function(i){var r=qr[qe(Math.random()*qr.length)],a=new Q({color:Gr}),o=Qr*Br+n+(t*Br+t*Hr)-(Vr/2*(Br+Hr)-(Br-Hr/2));i(r.map(function(t,n){if(0<t.width){var i=n+1===r.length?10:0,s=new K(new k(t.width,t.height+i,t.width),a);return s.position.y=Jr*Br+t.y-i/2,s.position.z=e,s.position.x=o,$r.add(s),s}}))})}var Ne=Math.tan,Ie=Math.atan,Ue=Math.atan2,Fe=Number.EPSILON,Oe=Math.acos,ze=Math.round,Ge=Math.sqrt,Be=Math.abs,Ve=Math.sin,He=Math.cos,ke=Math.pow,We=Math.LN2,je=Math.log,Xe=Math.PI,Ye=Math.max,qe=Math.floor,Ze=Math.ceil,Je=Math.min;n.r(e);n(57),n(58),n(65),n(67),n(69),n(70),n(71),n(74),n(48),n(77),n(79),n(80),n(91),n(96),n(97),n(102),n(103);var Qe={DEG2RAD:Xe/180,RAD2DEG:180/Xe,generateUUID:function(){for(var t=[],e=0;256>e;e++)t[e]=(16>e?"0":"")+e.toString(16);return function(){var e=0|4294967295*Math.random(),n=0|4294967295*Math.random(),i=0|4294967295*Math.random(),r=0|4294967295*Math.random();return(t[255&e]+t[255&e>>8]+t[255&e>>16]+t[255&e>>24]+"-"+t[255&n]+t[255&n>>8]+"-"+t[64|15&n>>16]+t[255&n>>24]+"-"+t[128|63&i]+t[255&i>>8]+"-"+t[255&i>>16]+t[255&i>>24]+t[255&r]+t[255&r>>8]+t[255&r>>16]+t[255&r>>24]).toUpperCase()}}(),clamp:function(t,e,n){return Ye(e,Je(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+qe(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*Qe.DEG2RAD},radToDeg:function(t){return t*Qe.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return ke(2,Ze(je(t)/We))},floorPowerOfTwo:function(t){return ke(2,qe(je(t)/We))}},Ke={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(i.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=qe(t),this.r=(255&t>>16)/255,this.g=(255&t>>8)/255,this.b=(255&t)/255,this},setRGB:function(t,e,n){return this.r=t,this.g=e,this.b=n,this},setHSL:function(){function t(t,e,n){return 0>n&&(n+=1),1<n&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}return function(e,n,i){if(e=Qe.euclideanModulo(e,1),n=Qe.clamp(n,0,1),i=Qe.clamp(i,0,1),0===n)this.r=this.g=this.b=i;else{var r=.5>=i?i*(1+n):i+n-i*n,a=2*i-r;this.r=t(a,r,e+1/3),this.g=t(a,r,e),this.b=t(a,r,e-1/3)}return this}}(),setStyle:function(t){function e(e){void 0===e||1>parseFloat(e)&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var i,r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Je(255,parseInt(i[1],10))/255,this.g=Je(255,parseInt(i[2],10))/255,this.b=Je(255,parseInt(i[3],10))/255,e(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Je(100,parseInt(i[1],10))/100,this.g=Je(100,parseInt(i[2],10))/100,this.b=Je(100,parseInt(i[3],10))/100,e(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(i[1])/360,s=parseInt(i[2],10)/100,l=parseInt(i[3],10)/100;return e(i[5]),this.setHSL(o,s,l)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(t)){var c,u=(c=n[1]).length;if(3===u)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===u)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}t&&0<t.length&&(void 0===(c=Ke[t])?console.warn("THREE.Color: Unknown color "+t):this.setHex(c));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=ke(t.r,e),this.g=ke(t.g,e),this.b=ke(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var n=0<e?1/e:1;return this.r=ke(t.r,n),this.g=ke(t.g,n),this.b=ke(t.b,n),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(){function t(t){return.04045>t?.0773993808*t:ke(.9478672986*t+.0521327014,2.4)}return function(e){return this.r=t(e.r),this.g=t(e.g),this.b=t(e.b),this}}(),copyLinearToSRGB:function(){function t(t){return.0031308>t?12.92*t:1.055*ke(t,.41666)-.055}return function(e){return this.r=t(e.r),this.g=t(e.g),this.b=t(e.b),this}}(),convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});var e,n,i=this.r,r=this.g,a=this.b,o=Ye(i,r,a),s=Je(i,r,a),l=(s+o)/2;if(s===o)e=0,n=0;else{var c=o-s;n=.5>=l?c/(o+s):c/(2-o-s),o===i?e=(r-a)/c+(r<a?6:0):o===r?e=(a-i)/c+2:o===a&&(e=(i-r)/c+4),e/=6}return t.h=e,t.s=n,t.l=l,t},getStyle:function(){return"rgb("+(0|255*this.r)+","+(0|255*this.g)+","+(0|255*this.b)+")"},offsetHSL:function(){var t={};return function(e,n,i){return this.getHSL(t),t.h+=e,t.s+=n,t.l+=i,this.setHSL(t.h,t.s,t.l),this}}(),add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Ye(0,this.r-t.r),this.g=Ye(0,this.g-t.g),this.b=Ye(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(){var t={h:0,s:0,l:0},e={h:0,s:0,l:0};return function(n,i){this.getHSL(t),n.getHSL(e);var r=Qe.lerp(t.h,e.h,i),a=Qe.lerp(t.s,e.s,i),o=Qe.lerp(t.l,e.l,i);return this.setHSL(r,a,o),this}}(),equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}}),Object.assign(r.prototype,{isMatrix4:!0,set:function(t,e,n,i,r,a,o,s,l,c,u,h,d,f,p,m){var g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=o,g[13]=s,g[2]=l,g[6]=c,g[10]=u,g[14]=h,g[3]=d,g[7]=f,g[11]=p,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new r).fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this},copyPosition:function(t){var e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this},extractBasis:function(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this},extractRotation:function(){var t=new a;return function(e){var n=this.elements,i=e.elements,r=1/t.setFromMatrixColumn(e,0).length(),a=1/t.setFromMatrixColumn(e,1).length(),o=1/t.setFromMatrixColumn(e,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*a,n[5]=i[5]*a,n[6]=i[6]*a,n[7]=0,n[8]=i[8]*o,n[9]=i[9]*o,n[10]=i[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}}(),makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,n=t.x,i=t.y,r=t.z,a=He(n),o=Ve(n),s=He(i),l=Ve(i),c=He(r),u=Ve(r);if("XYZ"===t.order){var h=a*c,d=a*u,f=o*c,p=o*u;e[0]=s*c,e[4]=-s*u,e[8]=l,e[1]=d+f*l,e[5]=h-p*l,e[9]=-o*s,e[2]=p-h*l,e[6]=f+d*l,e[10]=a*s}else if("YXZ"===t.order){var m=s*c,g=s*u,v=l*c,x=l*u;e[0]=m+x*o,e[4]=v*o-g,e[8]=a*l,e[1]=a*u,e[5]=a*c,e[9]=-o,e[2]=g*o-v,e[6]=x+m*o,e[10]=a*s}else if("ZXY"===t.order){m=s*c,g=s*u,v=l*c,x=l*u;e[0]=m-x*o,e[4]=-a*u,e[8]=v+g*o,e[1]=g+v*o,e[5]=a*c,e[9]=x-m*o,e[2]=-a*l,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){h=a*c,d=a*u,f=o*c,p=o*u;e[0]=s*c,e[4]=f*l-d,e[8]=h*l+p,e[1]=s*u,e[5]=p*l+h,e[9]=d*l-f,e[2]=-l,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){var _=a*s,y=a*l,b=o*s,w=o*l;e[0]=s*c,e[4]=w-_*u,e[8]=b*u+y,e[1]=u,e[5]=a*c,e[9]=-o*c,e[2]=-l*c,e[6]=y*u+b,e[10]=_-w*u}else if("XZY"===t.order){_=a*s,y=a*l,b=o*s,w=o*l;e[0]=s*c,e[4]=-u,e[8]=l*c,e[1]=_*u+w,e[5]=a*c,e[9]=y*u-b,e[2]=b*u-y,e[6]=o*c,e[10]=w*u+_}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(){var t=new a(0,0,0),e=new a(1,1,1);return function(n){return this.compose(t,n,e)}}(),lookAt:function(){var t=new a,e=new a,n=new a;return function(i,r,a){var o=this.elements;return n.subVectors(i,r),0===n.lengthSq()&&(n.z=1),n.normalize(),t.crossVectors(a,n),0===t.lengthSq()&&(1===Be(a.z)?n.x+=1e-4:n.z+=1e-4,n.normalize(),t.crossVectors(a,n)),t.normalize(),e.crossVectors(n,t),o[0]=t.x,o[4]=e.x,o[8]=n.x,o[1]=t.y,o[5]=e.y,o[9]=n.y,o[2]=t.z,o[6]=e.z,o[10]=n.z,this}}(),multiply:function(t,e){return void 0===e?this.multiplyMatrices(this,t):(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e))},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,i=e.elements,r=this.elements,a=n[0],o=n[4],s=n[8],l=n[12],c=n[1],u=n[5],h=n[9],d=n[13],f=n[2],p=n[6],m=n[10],g=n[14],v=n[3],x=n[7],_=n[11],y=n[15],b=i[0],w=i[4],E=i[8],M=i[12],S=i[1],T=i[5],L=i[9],A=i[13],R=i[2],P=i[6],C=i[10],D=i[14],N=i[3],I=i[7],U=i[11],F=i[15];return r[0]=a*b+o*S+s*R+l*N,r[4]=a*w+o*T+s*P+l*I,r[8]=a*E+o*L+s*C+l*U,r[12]=a*M+o*A+s*D+l*F,r[1]=c*b+u*S+h*R+d*N,r[5]=c*w+u*T+h*P+d*I,r[9]=c*E+u*L+h*C+d*U,r[13]=c*M+u*A+h*D+d*F,r[2]=f*b+p*S+m*R+g*N,r[6]=f*w+p*T+m*P+g*I,r[10]=f*E+p*L+m*C+g*U,r[14]=f*M+p*A+m*D+g*F,r[3]=v*b+x*S+_*R+y*N,r[7]=v*w+x*T+_*P+y*I,r[11]=v*E+x*L+_*C+y*U,r[15]=v*M+x*A+_*D+y*F,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new a;return function(e){for(var n=0,i=e.count;n<i;n++)t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.applyMatrix4(this),e.setXYZ(n,t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],o=t[5],s=t[9],l=t[13],c=t[2],u=t[6],h=t[10],d=t[14];return t[3]*(+r*s*u-i*l*u-r*o*h+n*l*h+i*o*d-n*s*d)+t[7]*(+e*s*d-e*l*h+r*a*h-i*a*d+i*l*c-r*s*c)+t[11]*(+e*l*u-e*o*d-r*a*u+n*a*d+r*o*c-n*l*c)+t[15]*(-i*o*c-e*s*u+e*o*h+i*a*u-n*a*h+n*s*c)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var n=this.elements,i=t.elements,r=i[0],a=i[1],o=i[2],s=i[3],l=i[4],c=i[5],u=i[6],h=i[7],d=i[8],f=i[9],p=i[10],m=i[11],g=i[12],v=i[13],x=i[14],_=i[15],y=f*x*h-v*p*h+v*u*m-c*x*m-f*u*_+c*p*_,b=g*p*h-d*x*h-g*u*m+l*x*m+d*u*_-l*p*_,w=d*v*h-g*f*h+g*c*m-l*v*m-d*c*_+l*f*_,E=g*f*u-d*v*u-g*c*p+l*v*p+d*c*x-l*f*x,M=r*y+a*b+o*w+s*E;if(0==M){var S="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(S);return console.warn(S),this.identity()}var T=1/M;return n[0]=y*T,n[1]=(v*p*s-f*x*s-v*o*m+a*x*m+f*o*_-a*p*_)*T,n[2]=(c*x*s-v*u*s+v*o*h-a*x*h-c*o*_+a*u*_)*T,n[3]=(f*u*s-c*p*s-f*o*h+a*p*h+c*o*m-a*u*m)*T,n[4]=b*T,n[5]=(d*x*s-g*p*s+g*o*m-r*x*m-d*o*_+r*p*_)*T,n[6]=(g*u*s-l*x*s-g*o*h+r*x*h+l*o*_-r*u*_)*T,n[7]=(l*p*s-d*u*s+d*o*h-r*p*h-l*o*m+r*u*m)*T,n[8]=w*T,n[9]=(g*f*s-d*v*s-g*a*m+r*v*m+d*a*_-r*f*_)*T,n[10]=(l*v*s-g*c*s+g*a*h-r*v*h-l*a*_+r*c*_)*T,n[11]=(d*c*s-l*f*s-d*a*h+r*f*h+l*a*m-r*c*m)*T,n[12]=E*T,n[13]=(d*v*o-g*f*o+g*a*p-r*v*p-d*a*x+r*f*x)*T,n[14]=(g*c*o-l*v*o-g*a*u+r*v*u+l*a*x-r*c*x)*T,n[15]=(l*f*o-d*c*o+d*a*u-r*f*u-l*a*p+r*c*p)*T,this},scale:function(t){var e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Ge(Ye(e,n,i))},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){var e=He(t),n=Ve(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){var e=He(t),n=Ve(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=He(t),n=Ve(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var n=He(e),i=Ve(e),r=1-n,a=t.x,o=t.y,s=t.z,l=r*a,c=r*o;return this.set(l*a+n,l*o-i*s,l*s+i*o,0,l*o+i*s,c*o+n,c*s-i*a,0,l*s-i*o,c*s+i*a,r*s*s+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,n){var i=this.elements,r=e._x,a=e._y,o=e._z,s=e._w,l=r+r,c=a+a,u=o+o,h=r*l,d=r*c,f=r*u,p=a*c,m=a*u,g=o*u,v=s*l,x=s*c,_=s*u,y=n.x,b=n.y,w=n.z;return i[0]=(1-(p+g))*y,i[1]=(d+_)*y,i[2]=(f-x)*y,i[3]=0,i[4]=(d-_)*b,i[5]=(1-(h+g))*b,i[6]=(m+v)*b,i[7]=0,i[8]=(f+x)*w,i[9]=(m-v)*w,i[10]=(1-(h+p))*w,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this},decompose:function(){var t=new a,e=new r;return function(n,i,r){var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),s=t.set(a[4],a[5],a[6]).length(),l=t.set(a[8],a[9],a[10]).length();0>this.determinant()&&(o=-o),n.x=a[12],n.y=a[13],n.z=a[14],e.copy(this);var c=1/o,u=1/s,h=1/l;return e.elements[0]*=c,e.elements[1]*=c,e.elements[2]*=c,e.elements[4]*=u,e.elements[5]*=u,e.elements[6]*=u,e.elements[8]*=h,e.elements[9]*=h,e.elements[10]*=h,i.setFromRotationMatrix(e),r.x=o,r.y=s,r.z=l,this}}(),makePerspective:function(t,e,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements;return o[0]=2*r/(e-t),o[4]=0,o[8]=(e+t)/(e-t),o[12]=0,o[1]=0,o[5]=2*r/(n-i),o[9]=(n+i)/(n-i),o[13]=0,o[2]=0,o[6]=0,o[10]=-(a+r)/(a-r),o[14]=-2*a*r/(a-r),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,n,i,r,a){var o=this.elements,s=1/(e-t),l=1/(n-i),c=1/(a-r);return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-(e+t)*s,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-(n+i)*l,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-(a+r)*c,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,n=t.elements,i=0;16>i;i++)if(e[i]!==n[i])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var n=0;16>n;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}),Object.assign(a.prototype,{isVector3:!0,set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0===e?(this.x+=t.x,this.y+=t.y,this.z+=t.z,this):(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e))},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0===e?(this.x-=t.x,this.y-=t.y,this.z-=t.z,this):(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e))},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0===e?(this.x*=t.x,this.y*=t.y,this.z*=t.z,this):(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e))},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t=new o;return function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(t.setFromEuler(e))}}(),applyAxisAngle:function(){var t=new o;return function(e,n){return this.applyQuaternion(t.setFromAxisAngle(e,n))}}(),applyMatrix3:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this},applyMatrix4:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this},applyQuaternion:function(t){var e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,o=t.z,s=t.w,l=s*e+a*i-o*n,c=s*n+o*e-r*i,u=s*i+r*n-a*e,h=-r*e-a*n-o*i;return this.x=l*s+h*-r+c*-o-u*-a,this.y=c*s+h*-a+u*-r-l*-o,this.z=u*s+h*-o+l*-a-c*-r,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(){var t=new r;return function(e){return this.applyMatrix4(t.getInverse(e.projectionMatrix)).applyMatrix4(e.matrixWorld)}}(),transformDirection:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Je(this.x,t.x),this.y=Je(this.y,t.y),this.z=Je(this.z,t.z),this},max:function(t){return this.x=Ye(this.x,t.x),this.y=Ye(this.y,t.y),this.z=Ye(this.z,t.z),this},clamp:function(t,e){return this.x=Ye(t.x,Je(e.x,this.x)),this.y=Ye(t.y,Je(e.y,this.y)),this.z=Ye(t.z,Je(e.z,this.z)),this},clampScalar:function(){var t=new a,e=new a;return function(n,i){return t.set(n,n,n),e.set(i,i,i),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Ye(t,Je(e,n)))},floor:function(){return this.x=qe(this.x),this.y=qe(this.y),this.z=qe(this.z),this},ceil:function(){return this.x=Ze(this.x),this.y=Ze(this.y),this.z=Ze(this.z),this},round:function(){return this.x=ze(this.x),this.y=ze(this.y),this.z=ze(this.z),this},roundToZero:function(){return this.x=0>this.x?Ze(this.x):qe(this.x),this.y=0>this.y?Ze(this.y):qe(this.y),this.z=0>this.z?Ze(this.z):qe(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Ge(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Be(this.x)+Be(this.y)+Be(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},cross:function(t,e){return void 0===e?this.crossVectors(this,t):(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e))},crossVectors:function(t,e){var n=t.x,i=t.y,r=t.z,a=e.x,o=e.y,s=e.z;return this.x=i*s-r*o,this.y=r*a-n*s,this.z=n*o-i*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t=new a;return function(e){return t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t=new a;return function(e){return this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/Ge(this.lengthSq()*t.lengthSq());return Oe(Qe.clamp(e,-1,1))},distanceTo:function(t){return Ge(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i},manhattanDistanceTo:function(t){return Be(this.x-t.x)+Be(this.y-t.y)+Be(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,n){var i=Ve(e)*t;return this.x=i*Ve(n),this.y=He(e)*t,this.z=i*He(n),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,n){return this.x=t*Ve(e),this.y=n,this.z=t*He(e),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}}),Object.assign(o,{slerp:function(t,e,n,i){return n.copy(t).slerp(e,i)},slerpFlat:function(t,e,n,i,r,a,o){var s=n[i+0],l=n[i+1],c=n[i+2],u=n[i+3],h=r[a+0],d=r[a+1],f=r[a+2],p=r[a+3];if(u!==p||s!==h||l!==d||c!==f){var m=1-o,g=s*h+l*d+c*f+u*p,v=0<=g?1:-1,x=1-g*g;if(x>Fe){var _=Ge(x),y=Ue(_,g*v);m=Ve(m*y)/_,o=Ve(o*y)/_}var b=o*v;if(s=s*m+h*b,l=l*m+d*b,c=c*m+f*b,u=u*m+p*b,m==1-o){var w=1/Ge(s*s+l*l+c*c+u*u);s*=w,l*=w,c*=w,u*=w}}t[e]=s,t[e+1]=l,t[e+2]=c,t[e+3]=u}}),Object.defineProperties(o.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}}),Object.assign(o.prototype,{isQuaternion:!0,set:function(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=t._x,i=t._y,r=t._z,a=t.order,o=He,s=Ve,l=o(n/2),c=o(i/2),u=o(r/2),h=s(n/2),d=s(i/2),f=s(r/2);return"XYZ"===a?(this._x=h*c*u+l*d*f,this._y=l*d*u-h*c*f,this._z=l*c*f+h*d*u,this._w=l*c*u-h*d*f):"YXZ"===a?(this._x=h*c*u+l*d*f,this._y=l*d*u-h*c*f,this._z=l*c*f-h*d*u,this._w=l*c*u+h*d*f):"ZXY"===a?(this._x=h*c*u-l*d*f,this._y=l*d*u+h*c*f,this._z=l*c*f+h*d*u,this._w=l*c*u-h*d*f):"ZYX"===a?(this._x=h*c*u-l*d*f,this._y=l*d*u+h*c*f,this._z=l*c*f-h*d*u,this._w=l*c*u+h*d*f):"YZX"===a?(this._x=h*c*u+l*d*f,this._y=l*d*u+h*c*f,this._z=l*c*f-h*d*u,this._w=l*c*u-h*d*f):"XZY"===a&&(this._x=h*c*u-l*d*f,this._y=l*d*u-h*c*f,this._z=l*c*f+h*d*u,this._w=l*c*u+h*d*f),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var n=e/2,i=Ve(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=He(n),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,n=t.elements,i=n[0],r=n[4],a=n[8],o=n[1],s=n[5],l=n[9],c=n[2],u=n[6],h=n[10],d=i+s+h;return 0<d?(e=.5/Ge(d+1),this._w=.25/e,this._x=(u-l)*e,this._y=(a-c)*e,this._z=(o-r)*e):i>s&&i>h?(e=2*Ge(1+i-s-h),this._w=(u-l)/e,this._x=.25*e,this._y=(r+o)/e,this._z=(a+c)/e):s>h?(e=2*Ge(1+s-i-h),this._w=(a-c)/e,this._x=(r+o)/e,this._y=.25*e,this._z=(l+u)/e):(e=2*Ge(1+h-i-s),this._w=(o-r)/e,this._x=(a+c)/e,this._y=(l+u)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e=new a;return function(n,i){return void 0===e&&(e=new a),(t=n.dot(i)+1)<1e-6?(t=0,Be(n.x)>Be(n.z)?e.set(-n.y,n.x,0):e.set(0,-n.z,n.y)):e.crossVectors(n,i),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),angleTo:function(t){return 2*Oe(Be(Qe.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){var n=this.angleTo(t);if(0===n)return this;var i=Je(1,e/n);return this.slerp(t,i),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Ge(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x*=t,this._y*=t,this._z*=t,this._w*=t),this.onChangeCallback(),this},multiply:function(t,e){return void 0===e?this.multiplyQuaternions(this,t):(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e))},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var n=t._x,i=t._y,r=t._z,a=t._w,o=e._x,s=e._y,l=e._z,c=e._w;return this._x=n*c+a*o+i*l-r*s,this._y=i*c+a*s+r*o-n*l,this._z=r*c+a*l+n*s-i*o,this._w=a*c-n*o-i*s-r*l,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var n=this._x,i=this._y,r=this._z,a=this._w,o=a*t._w+n*t._x+i*t._y+r*t._z;if(0>o?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),1<=o)return this._w=a,this._x=n,this._y=i,this._z=r,this;var s=1-o*o;if(s<=Fe){var l=1-e;return this._w=l*a+e*this._w,this._x=l*n+e*this._x,this._y=l*i+e*this._y,this._z=l*r+e*this._z,this.normalize()}var c=Ge(s),u=Ue(c,o),h=Ve((1-e)*u)/c,d=Ve(e*u)/c;return this._w=a*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(s.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var n=this._listeners[t];if(void 0!==n){var i=n.indexOf(e);-1!==i&&n.splice(i,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var n=e.slice(0),i=0,r=n.length;i<r;i++)n[i].call(this,t)}}}}),l.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],l.DefaultOrder="XYZ",Object.defineProperties(l.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}}),Object.assign(l.prototype,{isEuler:!0,set:function(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,n){var i=Math.asin,r=Qe.clamp,a=t.elements,o=a[0],s=a[4],l=a[8],c=a[1],u=a[5],h=a[9],d=a[2],f=a[6],p=a[10];return"XYZ"===(e=e||this._order)?(this._y=i(r(l,-1,1)),.99999>Be(l)?(this._x=Ue(-h,p),this._z=Ue(-s,o)):(this._x=Ue(f,u),this._z=0)):"YXZ"===e?(this._x=i(-r(h,-1,1)),.99999>Be(h)?(this._y=Ue(l,p),this._z=Ue(c,u)):(this._y=Ue(-d,o),this._z=0)):"ZXY"===e?(this._x=i(r(f,-1,1)),.99999>Be(f)?(this._y=Ue(-d,p),this._z=Ue(-s,u)):(this._y=0,this._z=Ue(c,o))):"ZYX"===e?(this._y=i(-r(d,-1,1)),.99999>Be(d)?(this._x=Ue(f,p),this._z=Ue(c,o)):(this._x=0,this._z=Ue(-s,u))):"YZX"===e?(this._z=i(r(c,-1,1)),.99999>Be(c)?(this._x=Ue(-h,u),this._y=Ue(-d,o)):(this._x=0,this._y=Ue(l,p))):"XZY"===e?(this._z=i(-r(s,-1,1)),.99999>Be(s)?(this._x=Ue(f,u),this._y=Ue(l,o)):(this._x=Ue(-h,p),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==n&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new r;return function(e,n,i){return t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,n,i)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new o;return function(e){return t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new a(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(c.prototype,{set:function(t){this.mask=0|1<<t},enable:function(t){this.mask|=0|1<<t},toggle:function(t){this.mask^=0|1<<t},disable:function(t){this.mask&=~(0|1<<t)},test:function(t){return 0!=(this.mask&t.mask)}}),Object.assign(u.prototype,{isMatrix3:!0,set:function(t,e,n,i,r,a,o,s,l){var c=this.elements;return c[0]=t,c[1]=i,c[2]=o,c[3]=e,c[4]=r,c[5]=s,c[6]=n,c[7]=a,c[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t=new a;return function(e){for(var n=0,i=e.count;n<i;n++)t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.applyMatrix3(this),e.setXYZ(n,t.x,t.y,t.z);return e}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,i=e.elements,r=this.elements,a=n[0],o=n[3],s=n[6],l=n[1],c=n[4],u=n[7],h=n[2],d=n[5],f=n[8],p=i[0],m=i[3],g=i[6],v=i[1],x=i[4],_=i[7],y=i[2],b=i[5],w=i[8];return r[0]=a*p+o*v+s*y,r[3]=a*m+o*x+s*b,r[6]=a*g+o*_+s*w,r[1]=l*p+c*v+u*y,r[4]=l*m+c*x+u*b,r[7]=l*g+c*_+u*w,r[2]=h*p+d*v+f*y,r[5]=h*m+d*x+f*b,r[8]=h*g+d*_+f*w,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],o=t[5],s=t[6],l=t[7],c=t[8];return e*a*c-e*o*l-n*r*c+n*o*s+i*r*l-i*a*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var n=t.elements,i=this.elements,r=n[0],a=n[1],o=n[2],s=n[3],l=n[4],c=n[5],u=n[6],h=n[7],d=n[8],f=d*l-c*h,p=c*u-d*s,m=h*s-l*u,g=r*f+a*p+o*m;if(0==g){var v="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(v);return console.warn(v),this.identity()}var x=1/g;return i[0]=f*x,i[1]=(o*h-d*a)*x,i[2]=(c*a-o*l)*x,i[3]=p*x,i[4]=(d*r-o*u)*x,i[5]=(o*s-c*r)*x,i[6]=m*x,i[7]=(a*u-h*r)*x,i[8]=(l*r-a*s)*x,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,n,i,r,a,o){var s=He(r),l=Ve(r);this.set(n*s,n*l,-n*(s*a+l*o)+a+t,-i*l,i*s,-i*(-l*a+s*o)+o+e,0,0,1)},scale:function(t,e){var n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this},rotate:function(t){var e=He(t),n=Ve(t),i=this.elements,r=i[0],a=i[3],o=i[6],s=i[1],l=i[4],c=i[7];return i[0]=e*r+n*s,i[3]=e*a+n*l,i[6]=e*o+n*c,i[1]=-n*r+e*s,i[4]=-n*a+e*l,i[7]=-n*o+e*c,this},translate:function(t,e){var n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this},equals:function(t){for(var e=this.elements,n=t.elements,i=0;9>i;i++)if(e[i]!==n[i])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var n=0;9>n;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}});var $e="102",tn=0,en=1,nn=2,rn=1,an=2,on=0,sn=1,ln=2,cn=0,un=0,hn=1,dn=2,fn=3,pn=4,mn=5,gn=100,vn=101,xn=102,_n=103,yn=104,bn=200,wn=201,En=202,Mn=203,Sn=204,Tn=205,Ln=206,An=207,Rn=208,Pn=209,Cn=210,Dn=0,Nn=1,In=2,Un=3,Fn=4,On=5,zn=6,Gn=7,Bn=0,Vn=1,Hn=2,kn=0,Wn=1,jn=2,Xn=3,Yn=4,qn=5,Zn=301,Jn=302,Qn=303,Kn=304,$n=305,ti=306,ei=307,ni=1e3,ii=1001,ri=1002,ai=1003,oi=1004,si=1005,li=1006,ci=1007,ui=1008,hi=1009,di=1010,fi=1011,pi=1012,mi=1013,gi=1014,vi=1015,xi=1016,_i=1017,yi=1018,bi=1019,wi=1020,Ei=1021,Mi=1022,Si=1023,Ti=1024,Li=1025,Ai=1026,Ri=1027,Pi=1028,Ci=33776,Di=33777,Ni=33778,Ii=33779,Ui=35840,Fi=35841,Oi=35842,zi=35843,Gi=36196,Bi=37808,Vi=37809,Hi=37810,ki=37811,Wi=37812,ji=37813,Xi=37814,Yi=37815,qi=37816,Zi=37817,Ji=37818,Qi=37819,Ki=37820,$i=37821,tr=0,er=1,nr=2,ir=3e3,rr=3001,ar=3007,or=3002,sr=3004,lr=3005,cr=3006,ur=3200,hr=3201,dr=1,fr=0;h.DefaultUp=new a(0,1,0),h.DefaultMatrixAutoUpdate=!0,h.prototype=Object.assign(Object.create(s.prototype),{constructor:h,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new o;return function(e,n){return t.setFromAxisAngle(e,n),this.quaternion.multiply(t),this}}(),rotateOnWorldAxis:function(){var t=new o;return function(e,n){return t.setFromAxisAngle(e,n),this.quaternion.premultiply(t),this}}(),rotateX:function(){var t=new a(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new a(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new a(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new a;return function(e,n){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(n)),this}}(),translateX:function(){var t=new a(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new a(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new a(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new r;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new o,e=new r,n=new a,i=new a;return function(r,a,o){r.isVector3?n.copy(r):n.set(r,a,o);var s=this.parent;this.updateWorldMatrix(!0,!1),i.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?e.lookAt(i,n,this.up):e.lookAt(n,i,this.up),this.quaternion.setFromRotationMatrix(e),s&&(e.extractRotation(s.matrixWorld),t.setFromRotationMatrix(e),this.quaternion.premultiply(t.inverse()))}}(),add:function(t){if(1<arguments.length){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(1<arguments.length){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var n=this.children.indexOf(t);return-1!==n&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(n,1)),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var n=0,i=this.children.length;n<i;n++){var r=this.children[n].getObjectByProperty(t,e);if(void 0!==r)return r}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new a),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new a,e=new a;return function(n){return void 0===n&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),n=new o),this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,n,e),n}}(),getWorldScale:function(){var t=new a,e=new o;return function(n){return void 0===n&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),n=new a),this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,n),n}}(),getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new a),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){var n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e)for(var i=this.children,r=0,a=i.length;r<a;r++)i[r].updateWorldMatrix(!1,!0)},toJSON:function(t){function e(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}function n(t){var e=[];for(var n in t){var i=t[n];delete i.metadata,e.push(i)}return e}var i=void 0===t||"string"==typeof t,r={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var a={};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isMesh&&this.drawMode!==tr&&(a.drawMode=this.drawMode),this.isMesh||this.isLine||this.isPoints){a.geometry=e(t.geometries,this.geometry);var o=this.geometry.parameters;if(void 0!==o&&void 0!==o.shapes){var s=o.shapes;if(Array.isArray(s))for(var l,c=0,u=s.length;c<u;c++)l=s[c],e(t.shapes,l);else e(t.shapes,s)}}if(void 0!==this.material)if(Array.isArray(this.material)){var h=[];for(c=0,u=this.material.length;c<u;c++)h.push(e(t.materials,this.material[c]));a.material=h}else a.material=e(t.materials,this.material);if(0<this.children.length){a.children=[];for(c=0;c<this.children.length;c++)a.children.push(this.children[c].toJSON(t).object)}if(i){var d=n(t.geometries),f=n(t.materials),p=n(t.textures),m=n(t.images);s=n(t.shapes);0<d.length&&(r.geometries=d),0<f.length&&(r.materials=f),0<p.length&&(r.textures=p),0<m.length&&(r.images=m),0<s.length&&(r.shapes=s)}return r.object=a,r},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var n,i=0;i<t.children.length;i++)n=t.children[i],this.add(n.clone());return this}}),d.prototype=Object.assign(Object.create(h.prototype),{constructor:d,isScene:!0,copy:function(t,e){return h.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=h.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.assign(f.prototype,{isFogExp2:!0,clone:function(){return new f(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),p.prototype=Object.assign(Object.create(h.prototype),{constructor:p,isCamera:!0,copy:function(t,e){return h.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new a),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){h.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),m.prototype=Object.assign(Object.create(p.prototype),{constructor:m,isPerspectiveCamera:!0,copy:function(t,e){return p.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*Qe.RAD2DEG*Ie(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Ne(.5*Qe.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*Qe.RAD2DEG*Ie(Ne(.5*Qe.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Je(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Ye(this.aspect,1)},setViewOffset:function(t,e,n,i,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Ne(.5*Qe.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/o,e-=a.offsetY*n/s,i*=a.width/o,n*=a.height/s}var l=this.filmOffset;0!==l&&(r+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=h.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}),Object.defineProperties(g.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(g.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0===e?(this.x+=t.x,this.y+=t.y,this):(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e))},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0===e?(this.x-=t.x,this.y-=t.y,this):(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e))},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this},min:function(t){return this.x=Je(this.x,t.x),this.y=Je(this.y,t.y),this},max:function(t){return this.x=Ye(this.x,t.x),this.y=Ye(this.y,t.y),this},clamp:function(t,e){return this.x=Ye(t.x,Je(e.x,this.x)),this.y=Ye(t.y,Je(e.y,this.y)),this},clampScalar:function(){var t=new g,e=new g;return function(n,i){return t.set(n,n),e.set(i,i),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Ye(t,Je(e,n)))},floor:function(){return this.x=qe(this.x),this.y=qe(this.y),this},ceil:function(){return this.x=Ze(this.x),this.y=Ze(this.y),this},round:function(){return this.x=ze(this.x),this.y=ze(this.y),this},roundToZero:function(){return this.x=0>this.x?Ze(this.x):qe(this.x),this.y=0>this.y?Ze(this.y):qe(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Ge(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Be(this.x)+Be(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Ue(this.y,this.x);return 0>t&&(t+=2*Xe),t},distanceTo:function(t){return Ge(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y;return e*e+n*n},manhattanDistanceTo:function(t){return Be(this.x-t.x)+Be(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var n=He(e),i=Ve(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}});var pr,mr=function(t){var e;if("undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)e=t;else{void 0===pr&&(pr=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),pr.width=t.width,pr.height=t.height;var n=pr.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=pr}return 2048<e.width||2048<e.height?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")},gr=0;v.DEFAULT_IMAGE=void 0,v.DEFAULT_MAPPING=300,v.prototype=Object.assign(Object.create(s.prototype),{constructor:v,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var i=this.image;if(void 0===i.uuid&&(i.uuid=Qe.generateUUID()),!e&&void 0===t.images[i.uuid]){var r;if(Array.isArray(i)){r=[];for(var a=0,o=i.length;a<o;a++)r.push(mr(i[a]))}else r=mr(i);t.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),0>t.x||1<t.x)switch(this.wrapS){case ni:t.x-=qe(t.x);break;case ii:t.x=0>t.x?0:1;break;case ri:1===Be(qe(t.x)%2)?t.x=Ze(t.x)-t.x:t.x-=qe(t.x)}if(0>t.y||1<t.y)switch(this.wrapT){case ni:t.y-=qe(t.y);break;case ii:t.y=0>t.y?0:1;break;case ri:1===Be(qe(t.y)%2)?t.y=Ze(t.y)-t.y:t.y-=qe(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(v.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),x.prototype=Object.create(v.prototype),x.prototype.constructor=x,x.prototype.isDataTexture=!0,Object.assign(_.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,l=t.length;s<l;s+=3){var c=t[s],u=t[s+1],h=t[s+2];c<e&&(e=c),u<n&&(n=u),h<i&&(i=h),c>r&&(r=c),u>a&&(a=u),h>o&&(o=h)}return this.min.set(e,n,i),this.max.set(r,a,o),this},setFromBufferAttribute:function(t){for(var e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,l=t.count;s<l;s++){var c=t.getX(s),u=t.getY(s),h=t.getZ(s);c<e&&(e=c),u<n&&(n=u),h<i&&(i=h),c>r&&(r=c),u>a&&(a=u),h>o&&(o=h)}return this.min.set(e,n,i),this.max.set(r,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new a;return function(e,n){var i=t.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new a),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new a),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){function t(t){var a=t.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(n=0,i=o.length;n<i;n++)r.copy(o[n]),r.applyMatrix4(t.matrixWorld),e.expandByPoint(r)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(n=0,i=s.count;n<i;n++)r.fromBufferAttribute(s,n).applyMatrix4(t.matrixWorld),e.expandByPoint(r)}}var e,n,i,r=new a;return function(n){return e=this,n.updateMatrixWorld(!0),n.traverse(t),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new a),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new a;return function(e){return this.clampPoint(e.center,t),t.distanceToSquared(e.center)<=e.radius*e.radius}}(),intersectsPlane:function(t){var e,n;return 0<t.normal.x?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),0<t.normal.y?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),0<t.normal.z?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant},intersectsTriangle:function(){function t(t){var r,a;for(r=0,a=t.length-3;r<=a;r+=3){l.fromArray(t,r);var o=u.x*Be(l.x)+u.y*Be(l.y)+u.z*Be(l.z),s=e.dot(l),c=n.dot(l),h=i.dot(l);if(Ye(-Ye(s,c,h),Je(s,c,h))>o)return!1}return!0}var e=new a,n=new a,i=new a,r=new a,o=new a,s=new a,l=new a,c=new a,u=new a,h=new a;return function(a){if(this.isEmpty())return!1;this.getCenter(c),u.subVectors(this.max,c),e.subVectors(a.a,c),n.subVectors(a.b,c),i.subVectors(a.c,c),r.subVectors(n,e),o.subVectors(i,n),s.subVectors(e,i);var l=[0,-r.z,r.y,0,-o.z,o.y,0,-s.z,s.y,r.z,0,-r.x,o.z,0,-o.x,s.z,0,-s.x,-r.y,r.x,0,-o.y,o.x,0,-s.y,s.x,0];return!!t(l)&&!!t(l=[1,0,0,0,1,0,0,0,1])&&(h.crossVectors(r,o),t(l=[h.x,h.y,h.z]))}}(),clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new a),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new a;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new a;return function(e){return void 0===e&&(console.warn("THREE.Box3: .getBoundingSphere() target is now required"),e=new y),this.getCenter(e.center),e.radius=.5*this.getSize(t).length(),e}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new a,new a,new a,new a,new a,new a,new a,new a];return function(e){return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Object.assign(y.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new _;return function(e,n){var i=this.center;void 0===n?t.setFromPoints(e).getCenter(i):i.copy(n);for(var r=0,a=0,o=e.length;a<o;a++)r=Ye(r,i.distanceToSquared(e[a]));return this.radius=Ge(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Be(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new a),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new _),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius*=t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}),Object.assign(b.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new a,e=new a;return function(n,i,r){var a=t.subVectors(r,i).cross(e.subVectors(n,i)).normalize();return this.setFromNormalAndCoplanarPoint(a,n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new a),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new a;return function(e,n){void 0===n&&(console.warn("THREE.Plane: .intersectLine() target is now required"),n=new a);var i=e.delta(t),r=this.normal.dot(i);if(0===r)return 0===this.distanceToPoint(e.start)?n.copy(e.start):void 0;var o=-(e.start.dot(this.normal)+this.constant)/r;return 0>o||1<o?void 0:n.copy(i).multiplyScalar(o).add(e.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return 0>e&&0<n||0>n&&0<e},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new a),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new a,e=new u;return function(n,i){var r=i||e.getNormalMatrix(n),a=this.coplanarPoint(t).applyMatrix4(n),o=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(o),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}),Object.assign(w.prototype,{set:function(t,e,n,i,r,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,n=0;6>n;n++)e[n].copy(t.planes[n]);return this},setFromMatrix:function(t){var e=this.planes,n=t.elements,i=n[0],r=n[1],a=n[2],o=n[3],s=n[4],l=n[5],c=n[6],u=n[7],h=n[8],d=n[9],f=n[10],p=n[11],m=n[12],g=n[13],v=n[14],x=n[15];return e[0].setComponents(o-i,u-s,p-h,x-m).normalize(),e[1].setComponents(o+i,u+s,p+h,x+m).normalize(),e[2].setComponents(o+r,u+l,p+d,x+g).normalize(),e[3].setComponents(o-r,u-l,p-d,x-g).normalize(),e[4].setComponents(o-a,u-c,p-f,x-v).normalize(),e[5].setComponents(o+a,u+c,p+f,x+v).normalize(),this},intersectsObject:function(){var t=new y;return function(e){var n=e.geometry;return null===n.boundingSphere&&n.computeBoundingSphere(),t.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new y;return function(e){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,n=t.center,i=-t.radius,r=0;6>r;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0},intersectsBox:function(){var t=new a;return function(e){for(var n,i=this.planes,r=0;6>r;r++)if(n=i[r],t.x=0<n.normal.x?e.max.x:e.min.x,t.y=0<n.normal.y?e.max.y:e.min.y,t.z=0<n.normal.z?e.max.z:e.min.z,0>n.distanceToPoint(t))return!1;return!0}}(),containsPoint:function(t){for(var e=this.planes,n=0;6>n;n++)if(0>e[n].distanceToPoint(t))return!1;return!0}});var vr={alphamap_fragment:"\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",alphamap_pars_fragment:"\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",alphatest_fragment:"\n#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",aomap_fragment:"\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n\t#endif\n\n#endif\n",aomap_pars_fragment:"\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n",bsdfs:'\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via \'environmentBRDF\' from "Physically Based Shading on Mobile"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n}\n\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t// this is intended to be used on spot and point lights who are represented as luminous intensity\n\t// but who must be converted to luminous irradiance for surface lighting calculation\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\tif( cutoffDistance > 0.0 ) {\n\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t}\n\n\treturn distanceFalloff;\n\n#else\n\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick \'94\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disneyâs reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term (normalized) = G(l)âG(v) / 4(nâl)(nâv)\n\t// also see #12151\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disneyâs reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4\'s roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\n\treturn specularColor * brdf.x + brdf.y;\n\n} // validated\n\n// Fdez-AgÃ¼era\'s "Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotNV );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\n\t// Paper incorrect indicates coefficient is PI/21, and will\n\t// be corrected to 1/21 in future updates.\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n',bumpmap_pars_fragment:"\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n",clipping_planes_fragment:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n",clipping_planes_pars_fragment:"\n#if NUM_CLIPPING_PLANES > 0\n\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n",clipping_planes_pars_vertex:"\n#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"\n#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"\n#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n",color_pars_fragment:"\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",color_pars_vertex:"\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",color_vertex:"\n#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif\n",common:"\n#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n",cube_uv_reflection_fragment:"\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n#define cubeUV_textureSize (1024.0)\n\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\n\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\t// Clamp the value to the max mip level counts. hard coded to 6 mips\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\n\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\t// float powScale = exp2(roughnessLevel + mipLevel);\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\t// float scale =  1.0 / exp2(roughnessLevel + 2.0 + mipLevel);\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\t// float mipOffset = 0.75*(1.0 - 1.0/exp2(mipLevel))/exp2(roughnessLevel);\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\n\tfloat rcpPowScale = 1.0 / powScale;\n\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\n\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\n\t// round to nearest mipmap if we are not interpolating.\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\n\t// Tri linear interpolation.\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\n\tvec4 result = mix(color10, color20, t);\n\n\treturn vec4(result.rgb, 1.0);\n}\n\n#endif\n",defaultnormal_vertex:"\nvec3 transformedNormal = normalMatrix * objectNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = normalMatrix * objectTangent;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n",displacementmap_pars_vertex:"\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n",displacementmap_vertex:"\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n",emissivemap_fragment:"\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n",emissivemap_pars_fragment:"\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n",encodings_fragment:"\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n",envmap_fragment:"\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\tvec2 sampleUV;\n\n\t\treflectVec = normalize( reflectVec );\n\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\treflectVec = normalize( reflectVec );\n\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\tenvColor = envMapTexelToLinear( envColor );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n",envmap_pars_fragment:"\n#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n\n#ifdef USE_ENVMAP\n\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n",envmap_pars_vertex:"\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n",envmap_physical_pars_fragment:"\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\n\t\t#else\n\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\n\t\t#endif\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\n\t\t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#endif\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n",envmap_vertex:"\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\n\n\tfogDepth = -mvPosition.z;\n\n#endif\n",fog_pars_vertex:"\n#ifdef USE_FOG\n\n\tvarying float fogDepth;\n\n#endif\n",fog_fragment:"\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n",fog_pars_fragment:"\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n",gradientmap_pars_fragment:"\n#ifdef TOON\n\n\tuniform sampler2D gradientMap;\n\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t\t// dotNL will be from -1.0 to 1.0\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t\t#ifdef USE_GRADIENTMAP\n\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t\t#else\n\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t\t#endif\n\n\n\t}\n\n#endif\n",lightmap_fragment:"\n#ifdef USE_LIGHTMAP\n\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n",lightmap_pars_fragment:"\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n",lights_lambert_vertex:"\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\t// TODO (abelnation): implement\n\n\t}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\n#endif\n",lights_pars_begin:"\nuniform vec3 ambientLightColor;\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI;\n\n\t#endif\n\n\treturn irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( angleCos > spotLight.coneCos ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n",lights_phong_fragment:"\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t#ifdef TOON\n\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\t#else\n\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\n\t#endif\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat ); // Burley clearcoat model\n\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",lights_physical_pars_fragment:"\nstruct PhysicalMaterial {\n\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\t#ifndef STANDARD\n\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\n\t#endif\n\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t// Defer to the IndirectSpecular function to compute\n\t// the indirectDiffuse if energy preservation is enabled.\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\n\t\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\t#endif\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\n\tfloat clearCoatInv = 1.0 - clearCoatDHR;\n\n\t// Both indirect specular and diffuse light accumulate here\n\t// if energy preservation enabled, and PMREM provided.\n\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec3 singleScattering = vec3( 0.0 );\n\t\tvec3 multiScattering = vec3( 0.0 );\n\t\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\t\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\n\t\t// The multiscattering paper uses the below formula for calculating diffuse \n\t\t// for dielectrics, but this is already handled when initially computing the \n\t\t// specular and diffuse color, so we can just use the diffuseColor directly.\n\t\t//vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\t\tvec3 diffuse = material.diffuseColor;\n\n\t\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\n\t\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\n\t\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n\t#else\n\n\t\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\n\t#endif\n\n\t#ifndef STANDARD\n\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\n\t#endif\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n",lights_fragment_begin:"\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n\n#endif\n",lights_fragment_maps:"\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tirradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\n\t#ifndef STANDARD\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n\n#endif\n",lights_fragment_end:"\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\n\n#endif\n",logdepthbuf_fragment:"\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n",logdepthbuf_pars_fragment:"\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\n#endif\n",logdepthbuf_pars_vertex:"\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n",logdepthbuf_vertex:"\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n\t#else\n\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\tgl_Position.z *= gl_Position.w;\n\n\t#endif\n\n#endif\n",map_fragment:"\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n",map_pars_fragment:"\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n",map_particle_fragment:"\n#ifdef USE_MAP\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n",map_particle_pars_fragment:"\n#ifdef USE_MAP\n\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n\n#endif\n",metalnessmap_fragment:"\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n",metalnessmap_pars_fragment:"\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n",morphnormal_vertex:"\n#ifdef USE_MORPHNORMALS\n\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n",morphtarget_pars_vertex:"\n#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif\n",morphtarget_vertex:"\n#ifdef USE_MORPHTARGETS\n\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n",normal_fragment_begin:"\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n",normal_fragment_maps:"\n#ifdef USE_NORMALMAP\n\n\t#ifdef OBJECTSPACE_NORMALMAP\n\n\t\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t\t#ifdef FLIP_SIDED\n\n\t\t\tnormal = - normal;\n\n\t\t#endif\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\tnormal = normalize( normalMatrix * normal );\n\n\t#else // tangent-space normal map\n\n\t\t#ifdef USE_TANGENT\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy = normalScale * mapN.xy;\n\t\t\tnormal = normalize( vTBN * mapN );\n\n\t\t#else\n\n\t\t\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n\t\t#endif\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n",normalmap_pars_fragment:"\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t#ifdef OBJECTSPACE_NORMALMAP\n\n\t\tuniform mat3 normalMatrix;\n\n\t#else\n\n\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\t\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\t\tvec2 st0 = dFdx( vUv.st );\n\t\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\t\tvec3 N = normalize( surf_norm );\n\t\t\tmat3 tsn = mat3( S, T, N );\n\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\n\t\t\tmapN.xy *= normalScale;\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t\treturn normalize( tsn * mapN );\n\n\t\t}\n\n\t#endif\n\n#endif\n",packing:"\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n",project_vertex:"\nvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"\n#if defined( DITHERING )\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n",dithering_pars_fragment:"\n#if defined( DITHERING )\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n",roughnessmap_fragment:"\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n",roughnessmap_pars_fragment:"\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n",shadowmap_pars_fragment:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\n\t\tvec2 f = fract( uv * size + 0.5 );\n\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\n\t\treturn c;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n",shadowmap_pars_vertex:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n",shadowmap_vertex:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n",shadowmask_pars_fragment:"\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\tDirectionalLight directionalLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\tSpotLight spotLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\tPointLight pointLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n",skinbase_vertex:"\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n",skinning_pars_vertex:"\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",skinning_vertex:"\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n",skinnormal_vertex:"\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n",specularmap_fragment:"\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n",specularmap_pars_fragment:"\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n",tonemapping_fragment:"\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n",tonemapping_pars_fragment:"\n#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\n\t// John Hable's filmic operator from Uncharted 2 video game\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n\n}\n",uv_pars_fragment:"\n#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n",uv_pars_vertex:"\n#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n\n#endif\n",uv_vertex:"\n#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n",uv2_pars_fragment:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n",uv2_pars_vertex:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n#endif\n",uv2_vertex:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = uv2;\n\n#endif\n",worldpos_vertex:"\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n#endif\n",background_frag:"\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",background_vert:"\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n",cube_frag:"\nuniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\nvoid main() {\n\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",cube_vert:"\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n",depth_frag:"\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\n\t#endif\n\n}\n",depth_vert:"\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n}\n",distanceRGBA_frag:"\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n",distanceRGBA_vert:"\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n",equirect_frag:"\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV;\n\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",equirect_vert:"\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n",linedashed_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",linedashed_vert:"\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\n\tvLineDistance = scale * lineDistance;\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n",meshbasic_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",meshbasic_vert:"\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshlambert_frag:"\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshmatcap_frag:"\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",meshmatcap_vert:"\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\t\tvNormal = normalize( transformedNormal );\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n",meshphong_frag:"\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshphong_vert:"\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshphysical_frag:"\n#define PHYSICAL\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshphysical_vert:"\n#define PHYSICAL\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",normal_frag:"\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n\nvoid main() {\n\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n",normal_vert:"\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n",points_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",points_vert:"\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n",shadow_frag:"\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <fog_fragment>\n\n}\n",shadow_vert:"\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",sprite_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",sprite_vert:"\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n"},xr={common:{diffuse:{value:new i(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new u},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new g(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new i(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new i(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new u}},sprite:{diffuse:{value:new i(15658734)},opacity:{value:1},center:{value:new g(.5,.5)},rotation:{value:0},map:{value:null},uvTransform:{value:new u}}},_r={basic:{uniforms:M([xr.common,xr.specularmap,xr.envmap,xr.aomap,xr.lightmap,xr.fog]),vertexShader:vr.meshbasic_vert,fragmentShader:vr.meshbasic_frag},lambert:{uniforms:M([xr.common,xr.specularmap,xr.envmap,xr.aomap,xr.lightmap,xr.emissivemap,xr.fog,xr.lights,{emissive:{value:new i(0)}}]),vertexShader:vr.meshlambert_vert,fragmentShader:vr.meshlambert_frag},phong:{uniforms:M([xr.common,xr.specularmap,xr.envmap,xr.aomap,xr.lightmap,xr.emissivemap,xr.bumpmap,xr.normalmap,xr.displacementmap,xr.gradientmap,xr.fog,xr.lights,{emissive:{value:new i(0)},specular:{value:new i(1118481)},shininess:{value:30}}]),vertexShader:vr.meshphong_vert,fragmentShader:vr.meshphong_frag},standard:{uniforms:M([xr.common,xr.envmap,xr.aomap,xr.lightmap,xr.emissivemap,xr.bumpmap,xr.normalmap,xr.displacementmap,xr.roughnessmap,xr.metalnessmap,xr.fog,xr.lights,{emissive:{value:new i(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:vr.meshphysical_vert,fragmentShader:vr.meshphysical_frag},matcap:{uniforms:M([xr.common,xr.bumpmap,xr.normalmap,xr.displacementmap,xr.fog,{matcap:{value:null}}]),vertexShader:vr.meshmatcap_vert,fragmentShader:vr.meshmatcap_frag},points:{uniforms:M([xr.points,xr.fog]),vertexShader:vr.points_vert,fragmentShader:vr.points_frag},dashed:{uniforms:M([xr.common,xr.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:vr.linedashed_vert,fragmentShader:vr.linedashed_frag},depth:{uniforms:M([xr.common,xr.displacementmap]),vertexShader:vr.depth_vert,fragmentShader:vr.depth_frag},normal:{uniforms:M([xr.common,xr.bumpmap,xr.normalmap,xr.displacementmap,{opacity:{value:1}}]),vertexShader:vr.normal_vert,fragmentShader:vr.normal_frag},sprite:{uniforms:M([xr.sprite,xr.fog]),vertexShader:vr.sprite_vert,fragmentShader:vr.sprite_frag},background:{uniforms:{uvTransform:{value:new u},t2D:{value:null}},vertexShader:vr.background_vert,fragmentShader:vr.background_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:vr.cube_vert,fragmentShader:vr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:vr.equirect_vert,fragmentShader:vr.equirect_frag},distanceRGBA:{uniforms:M([xr.common,xr.displacementmap,{referencePosition:{value:new a},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:vr.distanceRGBA_vert,fragmentShader:vr.distanceRGBA_frag},shadow:{uniforms:M([xr.lights,xr.fog,{color:{value:new i(0)},opacity:{value:1}}]),vertexShader:vr.shadow_vert,fragmentShader:vr.shadow_frag}};_r.physical={uniforms:M([_r.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:vr.meshphysical_vert,fragmentShader:vr.meshphysical_frag},Object.assign(S.prototype,{isVector4:!0,set:function(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0===t.w?1:t.w,this},add:function(t,e){return void 0===e?(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this):(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e))},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0===e?(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this):(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e))},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Oe(t.w);var e=Ge(1-t.w*t.w);return 1e-4>e?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,n,i,r,a=.01,o=t.elements,s=o[0],l=o[4],c=o[8],u=o[1],h=o[5],d=o[9],f=o[2],p=o[6],m=o[10];if(Be(l-u)<a&&Be(c-f)<a&&Be(d-p)<a){if(Be(l+u)<.1&&Be(c+f)<.1&&Be(d+p)<.1&&Be(s+h+m-3)<.1)return this.set(1,0,0,0),this;e=Xe;var g=(s+1)/2,v=(h+1)/2,x=(m+1)/2,_=(l+u)/4,y=(c+f)/4,b=(d+p)/4;return g>v&&g>x?g<a?(n=0,i=.707106781,r=.707106781):(i=_/(n=Ge(g)),r=y/n):v>x?v<a?(n=.707106781,i=0,r=.707106781):(n=_/(i=Ge(v)),r=b/i):x<a?(n=.707106781,i=.707106781,r=0):(n=y/(r=Ge(x)),i=b/r),this.set(n,i,r,e),this}var w=Ge((p-d)*(p-d)+(c-f)*(c-f)+(u-l)*(u-l));return.001>Be(w)&&(w=1),this.x=(p-d)/w,this.y=(c-f)/w,this.z=(u-l)/w,this.w=Oe((s+h+m-1)/2),this},min:function(t){return this.x=Je(this.x,t.x),this.y=Je(this.y,t.y),this.z=Je(this.z,t.z),this.w=Je(this.w,t.w),this},max:function(t){return this.x=Ye(this.x,t.x),this.y=Ye(this.y,t.y),this.z=Ye(this.z,t.z),this.w=Ye(this.w,t.w),this},clamp:function(t,e){return this.x=Ye(t.x,Je(e.x,this.x)),this.y=Ye(t.y,Je(e.y,this.y)),this.z=Ye(t.z,Je(e.z,this.z)),this.w=Ye(t.w,Je(e.w,this.w)),this},clampScalar:function(){var t,e;return function(n,i){return null==t&&(t=new S,e=new S),t.set(n,n,n,n),e.set(i,i,i,i),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Ye(t,Je(e,n)))},floor:function(){return this.x=qe(this.x),this.y=qe(this.y),this.z=qe(this.z),this.w=qe(this.w),this},ceil:function(){return this.x=Ze(this.x),this.y=Ze(this.y),this.z=Ze(this.z),this.w=Ze(this.w),this},round:function(){return this.x=ze(this.x),this.y=ze(this.y),this.z=ze(this.z),this.w=ze(this.w),this},roundToZero:function(){return this.x=0>this.x?Ze(this.x):qe(this.x),this.y=0>this.y?Ze(this.y):qe(this.y),this.z=0>this.z?Ze(this.z):qe(this.z),this.w=0>this.w?Ze(this.w):qe(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Ge(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Be(this.x)+Be(this.y)+Be(this.z)+Be(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),Object.assign(A.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var yr=0;R.prototype=Object.assign(Object.create(s.prototype),{constructor:R,isGeometry:!0,applyMatrix:function(t){for(var e=(new u).getNormalMatrix(t),n=0,i=this.vertices.length;n<i;n++)this.vertices[n].applyMatrix4(t);var r;for(n=0,i=this.faces.length;n<i;n++){(r=this.faces[n]).normal.applyMatrix3(e).normalize();for(var a=0,o=r.vertexNormals.length;a<o;a++)r.vertexNormals[a].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var t=new r;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new r;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new r;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new r;return function(e,n,i){return t.makeTranslation(e,n,i),this.applyMatrix(t),this}}(),scale:function(){var t=new r;return function(e,n,i){return t.makeScale(e,n,i),this.applyMatrix(t),this}}(),lookAt:function(){var t=new h;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){function e(t,e,i,r){var o=void 0===c?[]:[n.colors[t].clone(),n.colors[e].clone(),n.colors[i].clone()],s=new A(t,e,i,void 0===l?[]:[(new a).fromArray(l,3*t),(new a).fromArray(l,3*e),(new a).fromArray(l,3*i)],o,r);n.faces.push(s),void 0!==u&&n.faceVertexUvs[0].push([(new g).fromArray(u,2*t),(new g).fromArray(u,2*e),(new g).fromArray(u,2*i)]),void 0!==h&&n.faceVertexUvs[1].push([(new g).fromArray(h,2*t),(new g).fromArray(h,2*e),(new g).fromArray(h,2*i)])}var n=this,r=null===t.index?void 0:t.index.array,o=t.attributes,s=o.position.array,l=void 0===o.normal?void 0:o.normal.array,c=void 0===o.color?void 0:o.color.array,u=void 0===o.uv?void 0:o.uv.array,h=void 0===o.uv2?void 0:o.uv2.array;void 0!==h&&(this.faceVertexUvs[1]=[]);for(var d=0,f=0;d<s.length;d+=3,f+=2)n.vertices.push((new a).fromArray(s,d)),void 0!==c&&n.colors.push((new i).fromArray(c,d));var p=t.groups;if(0<p.length)for(d=0;d<p.length;d++){var m=p[d],v=m.start,x=m.count;for(f=v;f<v+x;f+=3)void 0===r?e(f,f+1,f+2,m.materialIndex):e(r[f],r[f+1],r[f+2],m.materialIndex)}else if(void 0!==r)for(d=0;d<r.length;d+=3)e(r[d],r[d+1],r[d+2]);else for(d=0;d<s.length/3;d+=3)e(d,d+1,d+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){var t=new a;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(t).negate(),this.translate(t.x,t.y,t.z),this}}(),normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,n=0===e?1:1/e,i=new r;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix(i),this},computeFaceNormals:function(){for(var t=new a,e=new a,n=0,i=this.faces.length;n<i;n++){var r=this.faces[n],o=this.vertices[r.a],s=this.vertices[r.b],l=this.vertices[r.c];t.subVectors(l,s),e.subVectors(o,s),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){var e,n,i,r,o,s;for(void 0===t&&(t=!0),s=Array(this.vertices.length),e=0,n=this.vertices.length;e<n;e++)s[e]=new a;if(t){var l,c,u,h=new a,d=new a;for(i=0,r=this.faces.length;i<r;i++)o=this.faces[i],l=this.vertices[o.a],c=this.vertices[o.b],u=this.vertices[o.c],h.subVectors(u,c),d.subVectors(l,c),h.cross(d),s[o.a].add(h),s[o.b].add(h),s[o.c].add(h)}else for(this.computeFaceNormals(),i=0,r=this.faces.length;i<r;i++)s[(o=this.faces[i]).a].add(o.normal),s[o.b].add(o.normal),s[o.c].add(o.normal);for(e=0,n=this.vertices.length;e<n;e++)s[e].normalize();for(i=0,r=this.faces.length;i<r;i++){var f=(o=this.faces[i]).vertexNormals;3===f.length?(f[0].copy(s[o.a]),f[1].copy(s[o.b]),f[2].copy(s[o.c])):(f[0]=s[o.a].clone(),f[1]=s[o.b].clone(),f[2]=s[o.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,n;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var i=(n=this.faces[t]).vertexNormals;3===i.length?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,n,i,r;for(n=0,i=this.faces.length;n<i;n++)for((r=this.faces[n]).__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();var o=new R;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var s=this.morphNormals[t].faceNormals,l=this.morphNormals[t].vertexNormals;for(n=0,i=this.faces.length;n<i;n++)c=new a,u={a:new a,b:new a,c:new a},s.push(c),l.push(u)}var c,u,h=this.morphNormals[t];for(o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals(),n=0,i=this.faces.length;n<i;n++)r=this.faces[n],c=h.faceNormals[n],u=h.vertexNormals[n],c.copy(r.normal),u.a.copy(r.vertexNormals[0]),u.b.copy(r.vertexNormals[1]),u.c.copy(r.vertexNormals[2])}for(n=0,i=this.faces.length;n<i;n++)(r=this.faces[n]).normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new _),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new y),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(t&&t.isGeometry){var i,r=this.vertices.length,a=this.vertices,o=t.vertices,s=this.faces,l=t.faces,c=this.faceVertexUvs[0],h=t.faceVertexUvs[0],d=this.colors,f=t.colors;void 0===n&&(n=0),void 0!==e&&(i=(new u).getNormalMatrix(e));for(var p=0,m=o.length;p<m;p++){var g=o[p].clone();void 0!==e&&g.applyMatrix4(e),a.push(g)}for(p=0,m=f.length;p<m;p++)d.push(f[p].clone());for(p=0,m=l.length;p<m;p++){var v,x,_,y=l[p],b=y.vertexNormals,w=y.vertexColors;(v=new A(y.a+r,y.b+r,y.c+r)).normal.copy(y.normal),void 0!==i&&v.normal.applyMatrix3(i).normalize();for(var E=0,M=b.length;E<M;E++)x=b[E].clone(),void 0!==i&&x.applyMatrix3(i).normalize(),v.vertexNormals.push(x);v.color.copy(y.color);for(E=0,M=w.length;E<M;E++)_=w[E],v.vertexColors.push(_.clone());v.materialIndex=y.materialIndex+n,s.push(v)}for(p=0,m=h.length;p<m;p++){var S=h[p],T=[];if(void 0!==S){for(E=0,M=S.length;E<M;E++)T.push(S[E].clone());c.push(T)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){return t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),void this.merge(t.geometry,t.matrix)):void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){var t,e,n,i,r,a,o,s,l={},c=[],u=[];for(n=0,i=this.vertices.length;n<i;n++)t=this.vertices[n],void 0===l[e=ze(1e4*t.x)+"_"+ze(1e4*t.y)+"_"+ze(1e4*t.z)]?(l[e]=n,c.push(this.vertices[n]),u[n]=c.length-1):u[n]=u[l[e]];var h=[];for(n=0,i=this.faces.length;n<i;n++){(r=this.faces[n]).a=u[r.a],r.b=u[r.b],r.c=u[r.c],a=[r.a,r.b,r.c];for(var d=0;3>d;d++)if(a[d]===a[(d+1)%3]){h.push(n);break}}for(n=h.length-1;0<=n;n--){var f=h[n];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}var p=this.vertices.length-c.length;return this.vertices=c,p},setFromPoints:function(t){this.vertices=[];for(var e,n=0,i=t.length;n<i;n++)e=t[n],this.vertices.push(new a(e.x,e.y,e.z||0));return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,n=0;n<e;n++)t[n]._id=n;t.sort(function(t,e){return t.materialIndex-e.materialIndex});var i,r,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];a&&a.length===e&&(i=[]),o&&o.length===e&&(r=[]);var s;for(n=0;n<e;n++)s=t[n]._id,i&&i.push(a[s]),r&&r.push(o[s]);i&&(this.faceVertexUvs[0]=i),r&&(this.faceVertexUvs[1]=r)},toJSON:function(){function t(t,e,n){return n?t|1<<e:t&~(1<<e)}function e(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0===d[e]?(d[e]=h.length/3,h.push(t.x,t.y,t.z),d[e]):d[e]}function n(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0===p[e]?(p[e]=f.length,f.push(t.getHex()),p[e]):p[e]}function i(t){var e=t.x.toString()+t.y.toString();return void 0===g[e]?(g[e]=m.length/2,m.push(t.x,t.y),g[e]):g[e]}var r={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),void 0!==this.parameters){var a=this.parameters;for(var o in a)void 0!==a[o]&&(r[o]=a[o]);return r}for(var s,l=[],c=0;c<this.vertices.length;c++)s=this.vertices[c],l.push(s.x,s.y,s.z);var u=[],h=[],d={},f=[],p={},m=[],g={};for(c=0;c<this.faces.length;c++){var v=this.faces[c],x=void 0!==this.faceVertexUvs[0][c],_=0<v.normal.length(),y=0<v.vertexNormals.length,b=1!==v.color.r||1!==v.color.g||1!==v.color.b,w=0<v.vertexColors.length,E=0;if(E=t(E,0,0),E=t(E,1,!0),E=t(E,2,!1),E=t(E,3,x),E=t(E,4,_),E=t(E,5,y),E=t(E,6,b),E=t(E,7,w),u.push(E),u.push(v.a,v.b,v.c),u.push(v.materialIndex),x){var M=this.faceVertexUvs[0][c];u.push(i(M[0]),i(M[1]),i(M[2]))}if(_&&u.push(e(v.normal)),y){var S=v.vertexNormals;u.push(e(S[0]),e(S[1]),e(S[2]))}if(b&&u.push(n(v.color)),w){var T=v.vertexColors;u.push(n(T[0]),n(T[1]),n(T[2]))}}return r.data={},r.data.vertices=l,r.data.normals=h,0<f.length&&(r.data.colors=f),0<m.length&&(r.data.uvs=[m]),r.data.faces=u,r},clone:function(){return(new R).copy(this)},copy:function(t){var e,n,i,r,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,n=s.length;e<n;e++)this.vertices.push(s[e].clone());var l=t.colors;for(e=0,n=l.length;e<n;e++)this.colors.push(l[e].clone());var c=t.faces;for(e=0,n=c.length;e<n;e++)this.faces.push(c[e].clone());for(e=0,n=t.faceVertexUvs.length;e<n;e++){var u=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),i=0,r=u.length;i<r;i++){var h=u[i],d=[];for(a=0,o=h.length;a<o;a++){var f=h[a];d.push(f.clone())}this.faceVertexUvs[e].push(d)}}var p=t.morphTargets;for(e=0,n=p.length;e<n;e++){var m={name:p[e].name};if(void 0!==p[e].vertices)for(m.vertices=[],i=0,r=p[e].vertices.length;i<r;i++)m.vertices.push(p[e].vertices[i].clone());if(void 0!==p[e].normals)for(m.normals=[],i=0,r=p[e].normals.length;i<r;i++)m.normals.push(p[e].normals[i].clone());this.morphTargets.push(m)}var g=t.morphNormals;for(e=0,n=g.length;e<n;e++){var v={};if(void 0!==g[e].vertexNormals)for(v.vertexNormals=[],i=0,r=g[e].vertexNormals.length;i<r;i++){var x=g[e].vertexNormals[i],_={};_.a=x.a.clone(),_.b=x.b.clone(),_.c=x.c.clone(),v.vertexNormals.push(_)}if(void 0!==g[e].faceNormals)for(v.faceNormals=[],i=0,r=g[e].faceNormals.length;i<r;i++)v.faceNormals.push(g[e].faceNormals[i].clone());this.morphNormals.push(v)}var y=t.skinWeights;for(e=0,n=y.length;e<n;e++)this.skinWeights.push(y[e].clone());var b=t.skinIndices;for(e=0,n=b.length;e<n;e++)this.skinIndices.push(b[e].clone());var w=t.lineDistances;for(e=0,n=w.length;e<n;e++)this.lineDistances.push(w[e]);var E=t.boundingBox;null!==E&&(this.boundingBox=E.clone());var M=t.boundingSphere;return null!==M&&(this.boundingSphere=M.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(P.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(P.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");return this.count=void 0===t?0:t.length/this.itemSize,this.array=t,this},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(var i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e,n=this.array,r=0,a=0,o=t.length;a<o;a++)void 0===(e=t[a])&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",a),e=new i),n[r++]=e.r,n[r++]=e.g,n[r++]=e.b;return this},copyVector2sArray:function(t){for(var e,n=this.array,i=0,r=0,a=t.length;r<a;r++)void 0===(e=t[r])&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),e=new g),n[i++]=e.x,n[i++]=e.y;return this},copyVector3sArray:function(t){for(var e,n=this.array,i=0,r=0,o=t.length;r<o;r++)void 0===(e=t[r])&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),e=new a),n[i++]=e.x,n[i++]=e.y,n[i++]=e.z;return this},copyVector4sArray:function(t){for(var e,n=this.array,i=0,r=0,a=t.length;r<a;r++)void 0===(e=t[r])&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),e=new S),n[i++]=e.x,n[i++]=e.y,n[i++]=e.z,n[i++]=e.w;return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),C.prototype=Object.create(P.prototype),C.prototype.constructor=C,D.prototype=Object.create(P.prototype),D.prototype.constructor=D,N.prototype=Object.create(P.prototype),N.prototype.constructor=N,I.prototype=Object.create(P.prototype),I.prototype.constructor=I,U.prototype=Object.create(P.prototype),U.prototype.constructor=U,F.prototype=Object.create(P.prototype),F.prototype.constructor=F,O.prototype=Object.create(P.prototype),O.prototype.constructor=O,z.prototype=Object.create(P.prototype),z.prototype.constructor=z,G.prototype=Object.create(P.prototype),G.prototype.constructor=G,Object.assign(B.prototype,{computeGroups:function(t){for(var e,n,i=[],r=void 0,a=t.faces,o=0;o<a.length;o++)(n=a[o]).materialIndex!==r&&(r=n.materialIndex,null!=e&&(e.count=3*o-e.start,i.push(e)),e={start:3*o,materialIndex:r});void 0!==e&&(e.count=3*o-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var e,n=t.faces,i=t.vertices,r=t.faceVertexUvs,a=r[0]&&0<r[0].length,o=r[1]&&0<r[1].length,s=t.morphTargets,l=s.length;if(0<l){e=[];for(var c=0;c<l;c++)e[c]={name:s[c].name,data:[]};this.morphTargets.position=e}var u,h=t.morphNormals,d=h.length;if(0<d){u=[];for(c=0;c<d;c++)u[c]={name:h[c].name,data:[]};this.morphTargets.normal=u}var f=t.skinIndices,p=t.skinWeights,m=f.length===i.length,v=p.length===i.length;0<i.length&&0===n.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");var x;for(c=0;c<n.length;c++){x=n[c],this.vertices.push(i[x.a],i[x.b],i[x.c]);var _=x.vertexNormals;if(3===_.length)this.normals.push(_[0],_[1],_[2]);else{var y=x.normal;this.normals.push(y,y,y)}var b,w=x.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var E=x.color;this.colors.push(E,E,E)}if(!0===a)void 0===(b=r[0][c])?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new g,new g,new g)):this.uvs.push(b[0],b[1],b[2]);if(!0===o)void 0===(b=r[1][c])?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new g,new g,new g)):this.uvs2.push(b[0],b[1],b[2]);for(var M,S=0;S<l;S++)M=s[S].vertices,e[S].data.push(M[x.a],M[x.b],M[x.c]);var T;for(S=0;S<d;S++)T=h[S].vertexNormals[c],u[S].data.push(T.a,T.b,T.c);m&&this.skinIndices.push(f[x.a],f[x.b],f[x.c]),v&&this.skinWeights.push(p[x.a],p[x.b],p[x.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});var br=1;H.prototype=Object.assign(Object.create(s.prototype),{constructor:H,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){this.index=Array.isArray(t)?new(65535<V(t)?O:U)(t,1):t},addAttribute:function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):(this.attributes[t]=e,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(t,new P(arguments[1],arguments[2])))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:void 0===n?0:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var n=this.attributes.normal;void 0!==n&&((new u).getNormalMatrix(t).applyToBufferAttribute(n),n.needsUpdate=!0);var i=this.attributes.tangent;void 0!==i&&((new u).getNormalMatrix(t).applyToBufferAttribute(i),i.needsUpdate=!0);return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var t=new r;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new r;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new r;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new r;return function(e,n,i){return t.makeTranslation(e,n,i),this.applyMatrix(t),this}}(),scale:function(){var t=new r;return function(e,n,i){return t.makeScale(e,n,i),this.applyMatrix(t),this}}(),lookAt:function(){var t=new h;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){var t=new a;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(t).negate(),this.translate(t.x,t.y,t.z),this}}(),setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var n=new z(3*e.vertices.length,3),i=new z(3*e.colors.length,3);if(this.addAttribute("position",n.copyVector3sArray(e.vertices)),this.addAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new z(e.lineDistances.length,1);this.addAttribute("lineDistance",r.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e,n=[],i=0,r=t.length;i<r;i++)e=t[i],n.push(e.x,e.y,e.z||0);return this.addAttribute("position",new z(n,3)),this},updateFromObject:function(t){var e,n=t.geometry;if(t.isMesh){var i=n.__directGeometry;if(!0===n.elementsNeedUpdate&&(i=void 0,n.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(n);i.verticesNeedUpdate=n.verticesNeedUpdate,i.normalsNeedUpdate=n.normalsNeedUpdate,i.colorsNeedUpdate=n.colorsNeedUpdate,i.uvsNeedUpdate=n.uvsNeedUpdate,i.groupsNeedUpdate=n.groupsNeedUpdate,n.verticesNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.groupsNeedUpdate=!1,n=i}return!0===n.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(n.vertices),e.needsUpdate=!0),n.verticesNeedUpdate=!1),!0===n.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(n.normals),e.needsUpdate=!0),n.normalsNeedUpdate=!1),!0===n.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(n.colors),e.needsUpdate=!0),n.colorsNeedUpdate=!1),n.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(n.uvs),e.needsUpdate=!0),n.uvsNeedUpdate=!1),n.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(n.lineDistances),e.needsUpdate=!0),n.lineDistancesNeedUpdate=!1),n.groupsNeedUpdate&&(n.computeGroups(t.geometry),this.groups=n.groups,n.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new B).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new P(e,3).copyVector3sArray(t.vertices)),0<t.normals.length){var n=new Float32Array(3*t.normals.length);this.addAttribute("normal",new P(n,3).copyVector3sArray(t.normals))}if(0<t.colors.length){var i=new Float32Array(3*t.colors.length);this.addAttribute("color",new P(i,3).copyColorsArray(t.colors))}if(0<t.uvs.length){var r=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new P(r,2).copyVector2sArray(t.uvs))}if(0<t.uvs2.length){var a=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new P(a,2).copyVector2sArray(t.uvs2))}for(var o in this.groups=t.groups,t.morphTargets){for(var s=[],l=t.morphTargets[o],c=0,u=l.length;c<u;c++){var h=l[c],d=new z(3*h.data.length,3);d.name=h.name,s.push(d.copyVector3sArray(h.data))}this.morphAttributes[o]=s}if(0<t.skinIndices.length){var f=new z(4*t.skinIndices.length,4);this.addAttribute("skinIndex",f.copyVector4sArray(t.skinIndices))}if(0<t.skinWeights.length){var p=new z(4*t.skinWeights.length,4);this.addAttribute("skinWeight",p.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new _);var t=this.attributes.position;void 0===t?this.boundingBox.makeEmpty():this.boundingBox.setFromBufferAttribute(t),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var t=new _,e=new a;return function(){null===this.boundingSphere&&(this.boundingSphere=new y);var n=this.attributes.position;if(n){var i=this.boundingSphere.center;t.setFromBufferAttribute(n),t.getCenter(i);for(var r=0,a=0,o=n.count;a<o;a++)e.x=n.getX(a),e.y=n.getY(a),e.z=n.getZ(a),r=Ye(r,i.distanceToSquared(e));this.boundingSphere.radius=Ge(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes;if(e.position){var n=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new P(new Float32Array(n.length),3));else for(var i=e.normal.array,r=0,o=i.length;r<o;r++)i[r]=0;var s,l,c,u=e.normal.array,h=new a,d=new a,f=new a,p=new a,m=new a;if(t){var g=t.array;for(r=0,o=t.count;r<o;r+=3)s=3*g[r+0],l=3*g[r+1],c=3*g[r+2],h.fromArray(n,s),d.fromArray(n,l),f.fromArray(n,c),p.subVectors(f,d),m.subVectors(h,d),p.cross(m),u[s]+=p.x,u[s+1]+=p.y,u[s+2]+=p.z,u[l]+=p.x,u[l+1]+=p.y,u[l+2]+=p.z,u[c]+=p.x,u[c+1]+=p.y,u[c+2]+=p.z}else for(r=0,o=n.length;r<o;r+=9)h.fromArray(n,r),d.fromArray(n,r+3),f.fromArray(n,r+6),p.subVectors(f,d),m.subVectors(h,d),p.cross(m),u[r]=p.x,u[r+1]=p.y,u[r+2]=p.z,u[r+3]=p.x,u[r+4]=p.y,u[r+5]=p.z,u[r+6]=p.x,u[r+7]=p.y,u[r+8]=p.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(var i in n)if(void 0!==t.attributes[i])for(var r=n[i].array,a=t.attributes[i],o=a.array,s=0,l=a.itemSize*e;s<o.length;s++,l++)r[l]=o[s];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){var t=new a;return function(){for(var e=this.attributes.normal,n=0,i=e.count;n<i;n++)t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.normalize(),e.setXYZ(n,t.x,t.y,t.z)}}(),toNonIndexed:function(){function t(t,e){for(var n=t.array,i=t.itemSize,r=new n.constructor(e.length*i),a=0,o=0,s=0,l=e.length;s<l;s++){a=e[s]*i;for(var c=0;c<i;c++)r[o++]=n[a++]}return new P(r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new H,n=this.index.array,i=this.attributes;for(var r in i){var a=t(i[r],n);e.addAttribute(r,a)}var o=this.morphAttributes;for(r in o){for(var s=[],l=o[r],c=0,u=l.length;c<u;c++){a=t(l[c],n);s.push(a)}e.morphAttributes[r]=s}for(var h,d=this.groups,f=(c=0,d.length);c<f;c++)h=d[c],e.addGroup(h.start,h.count,h.materialIndex);return e},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),0<Object.keys(this.userData).length&&(t.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(var n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};var i=this.index;null!==i&&(t.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});var r=this.attributes;for(var n in r){var a={itemSize:(d=r[n]).itemSize,type:d.array.constructor.name,array:Array.prototype.slice.call(d.array),normalized:d.normalized};""!==d.name&&(a.name=d.name),t.data.attributes[n]=a}var o={},s=!1;for(var n in this.morphAttributes){for(var l=this.morphAttributes[n],c=[],u=0,h=l.length;u<h;u++){var d;a={itemSize:(d=l[u]).itemSize,type:d.array.constructor.name,array:Array.prototype.slice.call(d.array),normalized:d.normalized};""!==d.name&&(a.name=d.name),c.push(a)}0<c.length&&(o[n]=c,s=!0)}s&&(t.data.morphAttributes=o);var f=this.groups;0<f.length&&(t.data.groups=JSON.parse(JSON.stringify(f)));var p=this.boundingSphere;return null!==p&&(t.data.boundingSphere={center:p.center.toArray(),radius:p.radius}),t},clone:function(){return(new H).copy(this)},copy:function(t){var e,n,i;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var r=t.index;null!==r&&this.setIndex(r.clone());var a=t.attributes;for(e in a){var o=a[e];this.addAttribute(e,o.clone())}var s=t.morphAttributes;for(e in s){var l=[],c=s[e];for(n=0,i=c.length;n<i;n++)l.push(c[n].clone());this.morphAttributes[e]=l}var u=t.groups;for(n=0,i=u.length;n<i;n++){var h=u[n];this.addGroup(h.start,h.count,h.materialIndex)}var d=t.boundingBox;null!==d&&(this.boundingBox=d.clone());var f=t.boundingSphere;return null!==f&&(this.boundingSphere=f.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),k.prototype=Object.create(R.prototype),k.prototype.constructor=k,W.prototype=Object.create(H.prototype),W.prototype.constructor=W,j.prototype=Object.create(R.prototype),j.prototype.constructor=j,X.prototype=Object.create(H.prototype),X.prototype.constructor=X;var wr=0;Y.prototype=Object.assign(Object.create(s.prototype),{constructor:Y,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var n=t[e];if(void 0!==n)if("shading"!=e){var i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){function e(t){var e=[];for(var n in t){var i=t[n];delete i.metadata,e.push(i)}return e}var n=void 0===t||"string"==typeof t;n&&(t={textures:{},images:{}});var i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearCoat&&(i.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(i.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,i.reflectivity=this.reflectivity,void 0!==this.combine&&(i.combine=this.combine),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(i.size=this.size),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==hn&&(i.blending=this.blending),!0===this.flatShading&&(i.flatShading=this.flatShading),this.side!==on&&(i.side=this.side),this.vertexColors!==cn&&(i.vertexColors=this.vertexColors),1>this.opacity&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),0<this.alphaTest&&(i.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),1<this.wireframeLinewidth&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.skinning&&(i.skinning=!0),!1===this.visible&&(i.visible=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),n){var r=e(t.textures),a=e(t.images);0<r.length&&(i.textures=r),0<a.length&&(i.images=a)}return i},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,n=null;if(null!==e){var i=e.length;n=Array(i);for(var r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.shadowSide=t.shadowSide,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var Er="\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",Mr="\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n";q.prototype=Object.create(Y.prototype),q.prototype.constructor=q,q.prototype.isShaderMaterial=!0,q.prototype.copy=function(t){return Y.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=E(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},q.prototype.toJSON=function(t){var e=Y.prototype.toJSON.call(this,t);for(var n in e.uniforms={},this.uniforms){var i=this.uniforms[n].value;e.uniforms[n]=i&&i.isTexture?{type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?{type:"c",value:i.getHex()}:i&&i.isVector2?{type:"v2",value:i.toArray()}:i&&i.isVector3?{type:"v3",value:i.toArray()}:i&&i.isVector4?{type:"v4",value:i.toArray()}:i&&i.isMatrix3?{type:"m3",value:i.toArray()}:i&&i.isMatrix4?{type:"m4",value:i.toArray()}:{value:i}}0<Object.keys(this.defines).length&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;var r={};for(var a in this.extensions)!0===this.extensions[a]&&(r[a]=!0);return 0<Object.keys(r).length&&(e.extensions=r),e},Object.assign(Z.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new a),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new a;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new a),e.subVectors(t,this.origin);var n=e.dot(this.direction);return 0>n?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Ge(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new a;return function(e){var n=t.subVectors(e,this.origin).dot(this.direction);return 0>n?this.origin.distanceToSquared(e):(t.copy(this.direction).multiplyScalar(n).add(this.origin),t.distanceToSquared(e))}}(),distanceSqToSegment:function(){var t=new a,e=new a,n=new a;return function(i,r,a,o){t.copy(i).add(r).multiplyScalar(.5),e.copy(r).sub(i).normalize(),n.copy(this.origin).sub(t);var s,l,c,u,h=.5*i.distanceTo(r),d=-this.direction.dot(e),f=n.dot(this.direction),p=-n.dot(e),m=n.lengthSq(),g=Be(1-d*d);if(0<g)if(l=d*f-p,u=h*g,0<=(s=d*p-f))if(l>=-u)if(l<=u){var v=1/g;c=(s*=v)*(s+d*(l*=v)+2*f)+l*(d*s+l+2*p)+m}else c=-(s=Ye(0,-(d*(l=h)+f)))*s+l*(l+2*p)+m;else c=-(s=Ye(0,-(d*(l=-h)+f)))*s+l*(l+2*p)+m;else l<=-u?c=-(s=Ye(0,-(-d*h+f)))*s+(l=0<s?-h:Je(Ye(-h,-p),h))*(l+2*p)+m:l<=u?(s=0,c=(l=Je(Ye(-h,-p),h))*(l+2*p)+m):c=-(s=Ye(0,-(d*h+f)))*s+(l=0<s?h:Je(Ye(-h,-p),h))*(l+2*p)+m;else c=-(s=Ye(0,-(d*(l=0<d?-h:h)+f)))*s+l*(l+2*p)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(e).multiplyScalar(l).add(t),c}}(),intersectSphere:function(){var t=new a;return function(e,n){t.subVectors(e.center,this.origin);var i=t.dot(this.direction),r=t.dot(t)-i*i,a=e.radius*e.radius;if(r>a)return null;var o=Ge(a-r),s=i-o,l=i+o;return 0>s&&0>l?null:0>s?this.at(l,n):this.at(s,n)}}(),intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(t.normal)+t.constant)/e;return 0<=n?n:null},intersectPlane:function(t,e){var n=this.distanceToPlane(t);return null===n?null:this.at(n,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||!!(0>t.normal.dot(this.direction)*e)},intersectBox:function(t,e){var n,i,r,a,o,s,l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return 0<=l?(n=(t.min.x-h.x)*l,i=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,i=(t.min.x-h.x)*l),0<=c?(r=(t.min.y-h.y)*c,a=(t.max.y-h.y)*c):(r=(t.max.y-h.y)*c,a=(t.min.y-h.y)*c),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),0<=u?(o=(t.min.z-h.z)*u,s=(t.max.z-h.z)*u):(o=(t.max.z-h.z)*u,s=(t.min.z-h.z)*u),n>s||o>i?null:((o>n||n!=n)&&(n=o),(s<i||i!=i)&&(i=s),0>i?null:this.at(0<=n?n:i,e)))},intersectsBox:function(){var t=new a;return function(e){return null!==this.intersectBox(e,t)}}(),intersectTriangle:function(){var t=new a,e=new a,n=new a,i=new a;return function(r,a,o,s,l){e.subVectors(a,r),n.subVectors(o,r),i.crossVectors(e,n);var c,u=this.direction.dot(i);if(0<u){if(s)return null;c=1}else{if(!(0>u))return null;c=-1,u=-u}t.subVectors(this.origin,r);var h=c*this.direction.dot(n.crossVectors(t,n));if(0>h)return null;var d=c*this.direction.dot(e.cross(t));if(0>d)return null;if(h+d>u)return null;var f=-c*t.dot(i);return 0>f?null:this.at(f/u,l)}}(),applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}),Object.assign(J,{getNormal:function(){var t=new a;return function(e,n,i,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new a),r.subVectors(i,n),t.subVectors(e,n),r.cross(t);var o=r.lengthSq();return 0<o?r.multiplyScalar(1/Ge(o)):r.set(0,0,0)}}(),getBarycoord:function(){var t=new a,e=new a,n=new a;return function(i,r,o,s,l){t.subVectors(s,r),e.subVectors(o,r),n.subVectors(i,r);var c=t.dot(t),u=t.dot(e),h=t.dot(n),d=e.dot(e),f=e.dot(n),p=c*d-u*u;if(void 0===l&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),l=new a),0==p)return l.set(-2,-1,-1);var m=1/p,g=(d*h-u*f)*m,v=(c*f-u*h)*m;return l.set(1-g-v,v,g)}}(),containsPoint:function(){var t=new a;return function(e,n,i,r){return J.getBarycoord(e,n,i,r,t),0<=t.x&&0<=t.y&&1>=t.x+t.y}}(),getUV:function(){var t=new a;return function(e,n,i,r,a,o,s,l){return this.getBarycoord(e,n,i,r,t),l.set(0,0),l.addScaledVector(a,t.x),l.addScaledVector(o,t.y),l.addScaledVector(s,t.z),l}}()}),Object.assign(J.prototype,{set:function(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this},setFromPointsAndIndices:function(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){var t=new a,e=new a;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),getMidpoint:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new a),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return J.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new a),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return J.getBarycoord(t,this.a,this.b,this.c,e)},containsPoint:function(t){return J.containsPoint(t,this.a,this.b,this.c)},getUV:function(t,e,n,i,r){return J.getUV(t,this.a,this.b,this.c,e,n,i,r)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(){var t=new a,e=new a,n=new a,i=new a,r=new a,o=new a;return function(s,l){void 0===l&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),l=new a);var c,u,h=this.a,d=this.b,f=this.c;t.subVectors(d,h),e.subVectors(f,h),i.subVectors(s,h);var p=t.dot(i),m=e.dot(i);if(0>=p&&0>=m)return l.copy(h);r.subVectors(s,d);var g=t.dot(r),v=e.dot(r);if(0<=g&&v<=g)return l.copy(d);var x=p*v-g*m;if(0>=x&&0<=p&&0>=g)return c=p/(p-g),l.copy(h).addScaledVector(t,c);o.subVectors(s,f);var _=t.dot(o),y=e.dot(o);if(0<=y&&_<=y)return l.copy(f);var b=_*m-p*y;if(0>=b&&0<=m&&0>=y)return u=m/(m-y),l.copy(h).addScaledVector(e,u);var w=g*y-_*v;if(0>=w&&0<=v-g&&0<=_-y)return n.subVectors(f,d),u=(v-g)/(v-g+(_-y)),l.copy(d).addScaledVector(n,u);var E=1/(w+b+x);return c=b*E,u=x*E,l.copy(h).addScaledVector(t,c).addScaledVector(e,u)}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}),Q.prototype=Object.create(Y.prototype),Q.prototype.constructor=Q,Q.prototype.isMeshBasicMaterial=!0,Q.prototype.copy=function(t){return Y.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},K.prototype=Object.assign(Object.create(h.prototype),{constructor:K,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return h.prototype.copy.call(this,t),this.drawMode=t.drawMode,void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,n,i=this.geometry;if(i.isBufferGeometry){var r=i.morphAttributes,a=Object.keys(r);if(0<a.length){var o=r[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)n=o[t].name||t+"",this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}else{var s=i.morphTargets;void 0!==s&&0<s.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(){function t(t,e,n,i,r,a,o,s){if(null===(e.side===sn?i.intersectTriangle(o,a,r,!0,s):i.intersectTriangle(r,a,o,e.side!==ln,s)))return null;x.copy(s),x.applyMatrix4(t.matrixWorld);var l=n.ray.origin.distanceTo(x);return l<n.near||l>n.far?null:{distance:l,point:x.clone(),object:t}}function e(e,n,i,r,a,o,u,h,d){s.fromBufferAttribute(a,u),l.fromBufferAttribute(a,h),c.fromBufferAttribute(a,d);var x=t(e,n,i,r,s,l,c,v);if(x){o&&(f.fromBufferAttribute(o,u),p.fromBufferAttribute(o,h),m.fromBufferAttribute(o,d),x.uv=J.getUV(v,s,l,c,f,p,m,new g));var _=new A(u,h,d);J.getNormal(s,l,c,_.normal),x.face=_}return x}var n=new r,i=new Z,o=new y,s=new a,l=new a,c=new a,u=new a,h=new a,d=new a,f=new g,p=new g,m=new g,v=new a,x=new a;return function(r,a){var x,_=this.geometry,y=this.material,b=this.matrixWorld;if(void 0!==y&&(null===_.boundingSphere&&_.computeBoundingSphere(),o.copy(_.boundingSphere),o.applyMatrix4(b),!1!==r.ray.intersectsSphere(o))&&(n.getInverse(b),i.copy(r.ray).applyMatrix4(n),null===_.boundingBox||!1!==i.intersectsBox(_.boundingBox)))if(_.isBufferGeometry){var w,E,M,S,T,L,A,R,P,C=_.index,D=_.attributes.position,N=_.attributes.uv,I=_.groups,U=_.drawRange;if(null!==C)if(Array.isArray(y))for(S=0,L=I.length;S<L;S++)for(P=y[(R=I[S]).materialIndex],T=Ye(R.start,U.start),A=Je(R.start+R.count,U.start+U.count);T<A;T+=3)w=C.getX(T),E=C.getX(T+1),M=C.getX(T+2),(x=e(this,P,r,i,D,N,w,E,M))&&(x.faceIndex=qe(T/3),x.face.materialIndex=R.materialIndex,a.push(x));else for(S=Ye(0,U.start),L=Je(C.count,U.start+U.count);S<L;S+=3)w=C.getX(S),E=C.getX(S+1),M=C.getX(S+2),(x=e(this,y,r,i,D,N,w,E,M))&&(x.faceIndex=qe(S/3),a.push(x));else if(void 0!==D)if(Array.isArray(y))for(S=0,L=I.length;S<L;S++)for(P=y[(R=I[S]).materialIndex],T=Ye(R.start,U.start),A=Je(R.start+R.count,U.start+U.count);T<A;T+=3)(x=e(this,P,r,i,D,N,w=T,E=T+1,M=T+2))&&(x.faceIndex=qe(T/3),x.face.materialIndex=R.materialIndex,a.push(x));else for(S=Ye(0,U.start),L=Je(D.count,U.start+U.count);S<L;S+=3)(x=e(this,y,r,i,D,N,w=S,E=S+1,M=S+2))&&(x.faceIndex=qe(S/3),a.push(x))}else if(_.isGeometry){var F,O,z,G,B=Array.isArray(y),V=_.vertices,H=_.faces,k=_.faceVertexUvs[0];0<k.length&&(G=k);for(var W=0,j=H.length;W<j;W++){var X=H[W],Y=B?y[X.materialIndex]:y;if(void 0!==Y){if(F=V[X.a],O=V[X.b],z=V[X.c],!0===Y.morphTargets){var q=_.morphTargets,Z=this.morphTargetInfluences;s.set(0,0,0),l.set(0,0,0),c.set(0,0,0);for(var Q,K=0,$=q.length;K<$;K++)if(0!==(Q=Z[K])){var tt=q[K].vertices;s.addScaledVector(u.subVectors(tt[X.a],F),Q),l.addScaledVector(h.subVectors(tt[X.b],O),Q),c.addScaledVector(d.subVectors(tt[X.c],z),Q)}s.add(F),l.add(O),c.add(z),F=s,O=l,z=c}if(x=t(this,Y,r,i,F,O,z,v)){if(G&&G[W]){var et=G[W];f.copy(et[0]),p.copy(et[1]),m.copy(et[2]),x.uv=J.getUV(v,F,O,z,f,p,m,new g)}x.face=X,x.faceIndex=W,a.push(x)}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),ut.prototype=Object.create(v.prototype),ut.prototype.constructor=ut,ut.prototype.isCubeTexture=!0,Object.defineProperty(ut.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),ht.prototype=Object.create(v.prototype),ht.prototype.constructor=ht,ht.prototype.isDataTexture3D=!0;var Sr=new v,Tr=new ht,Lr=new ut,Ar=[],Rr=[],Pr=new Float32Array(16),Cr=new Float32Array(9),Dr=new Float32Array(4);Ht.prototype.updateCache=function(t){var e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),mt(e,t)},kt.prototype.setValue=function(t,e,n){for(var i,r=this.seq,a=0,o=r.length;a!==o;++a)(i=r[a]).setValue(t,e[i.id],n)};var Nr=/([\w\d_]+)(\])?(\[|\.)?/g;Xt.prototype.setValue=function(t,e,n){var i=this.map[e];void 0!==i&&i.setValue(t,n,this.renderer)},Xt.prototype.setOptional=function(t,e,n){var i=e[n];void 0!==i&&this.setValue(t,n,i)},Xt.upload=function(t,e,n,i){for(var r=0,a=e.length;r!==a;++r){var o=e[r],s=n[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,i)}},Xt.seqWithValue=function(t,e){for(var n,i=[],r=0,a=t.length;r!==a;++r)(n=t[r]).id in e&&i.push(n);return i};var Ir=0,Ur=0;pe.prototype=Object.assign(Object.create(s.prototype),{constructor:pe,isWebGLRenderTarget:!0,setSize:function(t,e){(this.width!==t||this.height!==e)&&(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),me.prototype=Object.create(Y.prototype),me.prototype.constructor=me,me.prototype.isMeshDepthMaterial=!0,me.prototype.copy=function(t){return Y.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},ge.prototype=Object.create(Y.prototype),ge.prototype.constructor=ge,ge.prototype.isMeshDistanceMaterial=!0,ge.prototype.copy=function(t){return Y.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this},be.prototype=Object.assign(Object.create(h.prototype),{constructor:be,isGroup:!0}),we.prototype=Object.assign(Object.create(m.prototype),{constructor:we,isArrayCamera:!0});var Fr=new a,Or=new a,zr=new i(13309495),Gr=2818078,Br=1.5,Vr=40,Hr=.5,kr=1,Wr=.75,jr=1,Xr=.01,Yr=.2,qr=[["   xxxxx   ","  xxxxxxx  "," xxxxxxxxx ","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx","xxxxxxxxxxx"],["x","x"],["x","x","x","x"],["    xxxxxxx    ","    xxxxxxx    ","   xxxxxxxxx   ","   xxxxxxxxx   ","  xxxxxxxxxxx  ","  xxxxxxxxxxx  "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "," xxxxxxxxxxxxx "],[" xxxxxxxxxxx "," xxxxxxxxxxx ","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx","xxxxxxxxxxxxx"],[" xx "," xx "," xx "," xx "," xx "," xx "," xx "," xx "," xx "],[" xx ","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx"],["xxxxxxxxxxxxxxx"," xxxxxxxxxxxxx ","xxxxxxxxxxxxxxx"," xxxxxxxxxxxxx ","xxxxxxxxxxxxxxx"," xxxxxxxxxxxxx ","xxxxxxxxxxxxxxx"," xxxxxxxxxxxxx ","xxxxxxxxxxxxxxx","xxxxxxxxxxxxxxx","xxxxxxxxxxxxxxx","xxxxxxxxxxxxxxx","xxxxxxxxxxxxxxx","xxxxxxxxxxxxxxx","xxxxxxxxxxxxxxx","xxxxxxxxxxxxxxx"],["    ","    "," xx ","xxxx"],["xxxxx","xxxxx"," xx  ","xxxxx","xxxxx"," xx  ","xxxxx","xxxxx"],["xxxxx","xxxxx","xxxxx"," xxx ","xxxxx","xxxxx","xxxxx"],["    ","    ","xxxx","xxxx"],["       ","       ","       ","   x   ","   x   ","  xxx  "],["  xxx  ","  xxx  ","  xxx  ","  xxx  "," xxxxx "," xxxxx "," xxxxx "," xxxxx ","xxxxxxx"],["          ","          ","     x    ","    xxx   "]].map(function(t){var e=t.length,n=Br/t[0].length,i=[],r=!0,a=!1,o=void 0;try{for(var s,l=t[Symbol.iterator]();!(r=(s=l.next()).done);r=!0){var c=s.value.replace(/\s/g,"").length*n;if(0<i.length){var u=i[i.length-1];u.width===c?i[i.length-1]=Ae({},u,{height:u.height+n}):i.push({width:c,height:n})}else i.push({width:c,height:n})}}catch(t){a=!0,o=t}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}var h=e*n;return i=i.map(function(t){var e=Ae({},t,{y:h-t.height/2});return h-=t.height,e})}),Zr=0,Jr=0,Qr=0,Kr=[],$r=new d;$r.background=zr,$r.fog=new f(zr,.1);var ta=new m(75,window.innerWidth/window.innerHeight,.1,1e3),ea=new function(t){function e(){return null===ht?Et:1}function n(){U=new it(I),(F=new et(I,U,t)).isWebGL2||(U.get("WEBGL_depth_texture"),U.get("OES_texture_float"),U.get("OES_texture_half_float"),U.get("OES_texture_half_float_linear"),U.get("OES_standard_derivatives"),U.get("OES_element_index_uint"),U.get("ANGLE_instanced_arrays")),U.get("OES_texture_float_linear"),Q=new ye(I,U,F),(O=new xe(I,U,Q,F)).scissor(xt.copy(St).multiplyScalar(Et)),O.viewport(vt.copy(Mt).multiplyScalar(Et)),z=new ot(I),G=new ae,B=new _e(I,U,O,G,F,Q,z),V=new L(I),H=new rt(I,V,z),k=new ct(H,z),q=new lt(I),W=new re(K,U,F),j=new ce,X=new fe,Y=new $(K,O,k,R),Z=new tt(I,U,z,F),J=new at(I,U,z,F),z.programs=W.programs,K.context=I,K.capabilities=F,K.extensions=U,K.properties=G,K.renderLists=j,K.state=O,K.info=z}function i(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),st=!0}function o(){console.log("THREE.WebGLRenderer: Context Restored."),st=!1,n()}function s(t){var e=t.target;e.removeEventListener("dispose",s),function(t){l(t),G.remove(t)}(e)}function l(t){var e=G.get(t).program;t.program=void 0,void 0!==e&&W.releaseProgram(e)}function c(t,e,n,i){for(var r=0,a=t.length;r<a;r++){var o=t[r],s=o.object,l=o.geometry,c=void 0===i?o.material:i,h=o.group;if(n.isArrayCamera){gt=n;for(var d,f=n.cameras,p=0,m=f.length;p<m;p++)if(d=f[p],s.layers.test(d.layers)){if("viewport"in d)O.viewport(vt.copy(d.viewport));else{var g=d.bounds,v=g.x*bt,x=g.y*wt,_=g.z*bt,y=g.w*wt;O.viewport(vt.set(v,x,_,y).multiplyScalar(Et))}N.setupLights(d),u(s,e,d,l,c,h)}}else gt=null,u(s,e,n,l,c,h)}}function u(t,e,n,i,r,a){if(t.onBeforeRender(K,e,n,i,r,a),N=X.get(e,gt||n),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){O.setMaterial(r);var o=d(n,e.fog,r,t);pt.geometry=null,pt.program=null,pt.wireframe=!1,function(t,e){t.render(function(t){K.renderBufferImmediate(t,e)})}(t,o)}else K.renderBufferDirect(n,e.fog,i,r,t,a);t.onAfterRender(K,e,n,i,r,a),N=X.get(e,gt||n)}function h(t,e,n){var i=G.get(t),r=N.state.lights,a=N.state.shadowsArray,o=i.lightsHash,c=r.state.hash,u=W.getParameters(t,r.state,a,e,At.numPlanes,At.numIntersection,n),h=W.getProgramCode(t,u),d=i.program,f=!0;if(void 0===d)t.addEventListener("dispose",s);else if(d.code!==h)l(t);else if(o.stateID!==c.stateID||o.directionalLength!==c.directionalLength||o.pointLength!==c.pointLength||o.spotLength!==c.spotLength||o.rectAreaLength!==c.rectAreaLength||o.hemiLength!==c.hemiLength||o.shadowsLength!==c.shadowsLength)o.stateID=c.stateID,o.directionalLength=c.directionalLength,o.pointLength=c.pointLength,o.spotLength=c.spotLength,o.rectAreaLength=c.rectAreaLength,o.hemiLength=c.hemiLength,o.shadowsLength=c.shadowsLength,f=!1;else{if(void 0!==u.shaderID)return;f=!1}if(f){if(u.shaderID){var p=_r[u.shaderID];i.shader={name:t.type,uniforms:E(p.uniforms),vertexShader:p.vertexShader,fragmentShader:p.fragmentShader}}else i.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(i.shader,K),h=W.getProgramCode(t,u),d=W.acquireProgram(t,i.shader,u,h),i.program=d,t.program=d}var m=d.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var g=0;g<K.maxMorphTargets;g++)0<=m["morphTarget"+g]&&t.numSupportedMorphTargets++}if(t.morphNormals)for(t.numSupportedMorphNormals=0,g=0;g<K.maxMorphNormals;g++)0<=m["morphNormal"+g]&&t.numSupportedMorphNormals++;var v=i.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(i.numClippingPlanes=At.numPlanes,i.numIntersection=At.numIntersection,v.clippingPlanes=At.uniform),i.fog=e,void 0===o&&(i.lightsHash=o={}),o.stateID=c.stateID,o.directionalLength=c.directionalLength,o.pointLength=c.pointLength,o.spotLength=c.spotLength,o.rectAreaLength=c.rectAreaLength,o.hemiLength=c.hemiLength,o.shadowsLength=c.shadowsLength,t.lights&&(v.ambientLightColor.value=r.state.ambient,v.directionalLights.value=r.state.directional,v.spotLights.value=r.state.spot,v.rectAreaLights.value=r.state.rectArea,v.pointLights.value=r.state.point,v.hemisphereLights.value=r.state.hemi,v.directionalShadowMap.value=r.state.directionalShadowMap,v.directionalShadowMatrix.value=r.state.directionalShadowMatrix,v.spotShadowMap.value=r.state.spotShadowMap,v.spotShadowMatrix.value=r.state.spotShadowMatrix,v.pointShadowMap.value=r.state.pointShadowMap,v.pointShadowMatrix.value=r.state.pointShadowMatrix);var x=i.program.getUniforms(),_=Xt.seqWithValue(x.seq,v);i.uniformsList=_}function d(t,e,n,i){yt=0;var r=G.get(n),a=N.state.lights,o=r.lightsHash,s=a.state.hash;if(Rt&&(Pt||t!==mt)){var l=t===mt&&n.id===ft;At.setState(n.clippingPlanes,n.clipIntersection,n.clipShadows,t,r,l)}!1===n.needsUpdate&&(void 0===r.program?n.needsUpdate=!0:n.fog&&r.fog!==e?n.needsUpdate=!0:!n.lights||o.stateID===s.stateID&&o.directionalLength===s.directionalLength&&o.pointLength===s.pointLength&&o.spotLength===s.spotLength&&o.rectAreaLength===s.rectAreaLength&&o.hemiLength===s.hemiLength&&o.shadowsLength===s.shadowsLength?void 0!==r.numClippingPlanes&&(r.numClippingPlanes!==At.numPlanes||r.numIntersection!==At.numIntersection)&&(n.needsUpdate=!0):n.needsUpdate=!0),n.needsUpdate&&(h(n,e,i),n.needsUpdate=!1);var c=!1,u=!1,d=!1,g=r.program,v=g.getUniforms(),_=r.shader.uniforms;if(O.useProgram(g.program)&&(c=!0,u=!0,d=!0),n.id!==ft&&(ft=n.id,u=!0),c||mt!==t){if(v.setValue(I,"projectionMatrix",t.projectionMatrix),F.logarithmicDepthBuffer&&v.setValue(I,"logDepthBufFC",2/(je(t.far+1)/We)),mt!==t&&(mt=t,u=!0,d=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.envMap){var y=v.map.cameraPosition;void 0!==y&&y.setValue(I,Dt.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.skinning)&&v.setValue(I,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){v.setOptional(I,i,"bindMatrix"),v.setOptional(I,i,"bindMatrixInverse");var b=i.skeleton;if(b){var w=b.bones;if(F.floatVertexTextures){if(void 0===b.boneTexture){var E=Ge(4*w.length);E=Qe.ceilPowerOfTwo(E),E=Ye(E,4);var M=new Float32Array(E*E*4);M.set(b.boneMatrices);var S=new x(M,E,E,Si,vi);S.needsUpdate=!0,b.boneMatrices=M,b.boneTexture=S,b.boneTextureSize=E}v.setValue(I,"boneTexture",b.boneTexture),v.setValue(I,"boneTextureSize",b.boneTextureSize)}else v.setOptional(I,b,"boneMatrices")}}return u&&(v.setValue(I,"toneMappingExposure",K.toneMappingExposure),v.setValue(I,"toneMappingWhitePoint",K.toneMappingWhitePoint),n.lights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLights.needsUpdate=e,t.pointLights.needsUpdate=e,t.spotLights.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(_,d),e&&n.fog&&function(t,e){t.fogColor.value=e.color,e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(_,e),n.isMeshBasicMaterial?f(_,n):n.isMeshLambertMaterial?(f(_,n),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(_,n)):n.isMeshPhongMaterial?(f(_,n),n.isMeshToonMaterial?function(t,e){p(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(_,n):p(_,n)):n.isMeshStandardMaterial?(f(_,n),n.isMeshPhysicalMaterial?function(t,e){m(t,e),t.reflectivity.value=e.reflectivity,t.clearCoat.value=e.clearCoat,t.clearCoatRoughness.value=e.clearCoatRoughness}(_,n):m(_,n)):n.isMeshMatcapMaterial?(f(_,n),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===sn&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===sn&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(_,n)):n.isMeshDepthMaterial?(f(_,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(_,n)):n.isMeshDistanceMaterial?(f(_,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(_,n)):n.isMeshNormalMaterial?(f(_,n),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===sn&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===sn&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(_,n)):n.isLineBasicMaterial?(function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}(_,n),n.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(_,n)):n.isPointsMaterial?function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size*Et,t.scale.value=.5*wt,t.map.value=e.map,null!==e.map&&(!0===e.map.matrixAutoUpdate&&e.map.updateMatrix(),t.uvTransform.value.copy(e.map.matrix))}(_,n):n.isSpriteMaterial?function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity,t.rotation.value=e.rotation,t.map.value=e.map,null!==e.map&&(!0===e.map.matrixAutoUpdate&&e.map.updateMatrix(),t.uvTransform.value.copy(e.map.matrix))}(_,n):n.isShadowMaterial&&(_.color.value=n.color,_.opacity.value=n.opacity),void 0!==_.ltc_1&&(_.ltc_1.value=xr.LTC_1),void 0!==_.ltc_2&&(_.ltc_2.value=xr.LTC_2),Xt.upload(I,r.uniformsList,_,K)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Xt.upload(I,r.uniformsList,_,K),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&v.setValue(I,"center",i.center),v.setValue(I,"modelViewMatrix",i.modelViewMatrix),v.setValue(I,"normalMatrix",i.normalMatrix),v.setValue(I,"modelMatrix",i.matrixWorld),g}function f(t,e){var n;t.opacity.value=e.opacity,e.color&&(t.diffuse.value=e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio,t.maxMipLevel.value=G.get(e.envMap).__maxMipLevel),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map?n=e.map:e.specularMap?n=e.specularMap:e.displacementMap?n=e.displacementMap:e.normalMap?n=e.normalMap:e.bumpMap?n=e.bumpMap:e.roughnessMap?n=e.roughnessMap:e.metalnessMap?n=e.metalnessMap:e.alphaMap?n=e.alphaMap:e.emissiveMap&&(n=e.emissiveMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}function p(t,e){t.specular.value=e.specular,t.shininess.value=Ye(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===sn&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===sn&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function m(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===sn&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===sn&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}console.log("THREE.WebGLRenderer",$e);var v=void 0===(t=t||{}).canvas?document.createElementNS("http://www.w3.org/1999/xhtml","canvas"):t.canvas,_=void 0===t.context?null:t.context,y=void 0!==t.alpha&&t.alpha,b=!(void 0!==t.depth)||t.depth,M=!(void 0!==t.stencil)||t.stencil,A=void 0!==t.antialias&&t.antialias,R=!(void 0!==t.premultipliedAlpha)||t.premultipliedAlpha,P=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,C=void 0===t.powerPreference?"default":t.powerPreference,D=null,N=null;this.domElement=v,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Wn,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var I,U,F,O,z,G,B,V,H,k,W,j,X,Y,q,Z,J,Q,K=this,st=!1,ut=null,ht=null,dt=null,ft=-1,pt={geometry:null,program:null,wireframe:!1},mt=null,gt=null,vt=new S,xt=new S,_t=null,yt=0,bt=v.width,wt=v.height,Et=1,Mt=new S(0,0,bt,wt),St=new S(0,0,bt,wt),Tt=!1,Lt=new w,At=new nt,Rt=!1,Pt=!1,Ct=new r,Dt=new a;try{var Nt={alpha:y,depth:b,stencil:M,antialias:A,premultipliedAlpha:R,preserveDrawingBuffer:P,powerPreference:C};if(v.addEventListener("webglcontextlost",i,!1),v.addEventListener("webglcontextrestored",o,!1),null===(I=_||v.getContext("webgl",Nt)||v.getContext("experimental-webgl",Nt)))throw null!==v.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===I.getShaderPrecisionFormat&&(I.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}n();var It=null;"undefined"!=typeof navigator&&(It="xr"in navigator?new Se(K):new Me(K)),this.vr=It;var Ut=new ve(K,k,F.maxTextureSize);this.shadowMap=Ut,this.getContext=function(){return I},this.getContextAttributes=function(){return I.getContextAttributes()},this.forceContextLoss=function(){var t=U.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=U.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return Et},this.setPixelRatio=function(t){void 0===t||(Et=t,this.setSize(bt,wt,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new g),t.set(bt,wt)},this.setSize=function(t,e,n){return It.isPresenting()?void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(bt=t,wt=e,v.width=t*Et,v.height=e*Et,!1!==n&&(v.style.width=t+"px",v.style.height=e+"px"),void this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new g),t.set(bt*Et,wt*Et)},this.setDrawingBufferSize=function(t,e,n){bt=t,wt=e,Et=n,v.width=t*n,v.height=e*n,this.setViewport(0,0,t,e)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new S),t.copy(vt)},this.getViewport=function(t){return t.copy(Mt)},this.setViewport=function(t,e,n,i){t.isVector4?Mt.set(t.x,t.y,t.z,t.w):Mt.set(t,e,n,i),O.viewport(vt.copy(Mt).multiplyScalar(Et))},this.getScissor=function(t){return t.copy(St)},this.setScissor=function(t,e,n,i){t.isVector4?St.set(t.x,t.y,t.z,t.w):St.set(t,e,n,i),O.scissor(xt.copy(St).multiplyScalar(Et))},this.getScissorTest=function(){return Tt},this.setScissorTest=function(t){O.setScissorTest(Tt=t)},this.getClearColor=function(){return Y.getClearColor()},this.setClearColor=function(){Y.setClearColor.apply(Y,arguments)},this.getClearAlpha=function(){return Y.getClearAlpha()},this.setClearAlpha=function(){Y.setClearAlpha.apply(Y,arguments)},this.clear=function(t,e,n){var i=0;(void 0===t||t)&&(i|=I.COLOR_BUFFER_BIT),(void 0===e||e)&&(i|=I.DEPTH_BUFFER_BIT),(void 0===n||n)&&(i|=I.STENCIL_BUFFER_BIT),I.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){v.removeEventListener("webglcontextlost",i,!1),v.removeEventListener("webglcontextrestored",o,!1),j.dispose(),X.dispose(),G.dispose(),k.dispose(),It.dispose(),Ot.stop()},this.renderBufferImmediate=function(t,e){O.initAttributes();var n=G.get(t);t.hasPositions&&!n.position&&(n.position=I.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=I.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=I.createBuffer()),t.hasColors&&!n.color&&(n.color=I.createBuffer());var i=e.getAttributes();t.hasPositions&&(I.bindBuffer(I.ARRAY_BUFFER,n.position),I.bufferData(I.ARRAY_BUFFER,t.positionArray,I.DYNAMIC_DRAW),O.enableAttribute(i.position),I.vertexAttribPointer(i.position,3,I.FLOAT,!1,0,0)),t.hasNormals&&(I.bindBuffer(I.ARRAY_BUFFER,n.normal),I.bufferData(I.ARRAY_BUFFER,t.normalArray,I.DYNAMIC_DRAW),O.enableAttribute(i.normal),I.vertexAttribPointer(i.normal,3,I.FLOAT,!1,0,0)),t.hasUvs&&(I.bindBuffer(I.ARRAY_BUFFER,n.uv),I.bufferData(I.ARRAY_BUFFER,t.uvArray,I.DYNAMIC_DRAW),O.enableAttribute(i.uv),I.vertexAttribPointer(i.uv,2,I.FLOAT,!1,0,0)),t.hasColors&&(I.bindBuffer(I.ARRAY_BUFFER,n.color),I.bufferData(I.ARRAY_BUFFER,t.colorArray,I.DYNAMIC_DRAW),O.enableAttribute(i.color),I.vertexAttribPointer(i.color,3,I.FLOAT,!1,0,0)),O.disableUnusedAttributes(),I.drawArrays(I.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,n,i,r,a,o){var s=a.isMesh&&0>a.matrixWorld.determinant();O.setMaterial(r,s);var l=d(t,n,r,a),c=!1;(pt.geometry!==i.id||pt.program!==l.id||pt.wireframe!==(!0===r.wireframe))&&(pt.geometry=i.id,pt.program=l.id,pt.wireframe=!0===r.wireframe,c=!0),a.morphTargetInfluences&&(q.update(a,i,r,l),c=!0);var u=i.index,h=i.attributes.position,f=1;!0===r.wireframe&&(u=H.getWireframeAttribute(i),f=2);var p,m=Z;null!==u&&(p=V.get(u),(m=J).setIndex(p)),c&&(function(t,e,n){if(n&&n.isInstancedBufferGeometry&&!F.isWebGL2&&null===U.get("ANGLE_instanced_arrays"))console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");else{O.initAttributes();var i=n.attributes,r=e.getAttributes(),a=t.defaultAttributeValues;for(var o in r){var s=r[o];if(0<=s){var l=i[o];if(void 0!==l){var c=l.normalized,u=l.itemSize,h=V.get(l);if(void 0===h)continue;var d=h.buffer,f=h.type,p=h.bytesPerElement;if(l.isInterleavedBufferAttribute){var m=l.data,g=m.stride,v=l.offset;m&&m.isInstancedInterleavedBuffer?(O.enableAttributeAndDivisor(s,m.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=m.meshPerAttribute*m.count)):O.enableAttribute(s),I.bindBuffer(I.ARRAY_BUFFER,d),I.vertexAttribPointer(s,u,f,c,g*p,v*p)}else l.isInstancedBufferAttribute?(O.enableAttributeAndDivisor(s,l.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=l.meshPerAttribute*l.count)):O.enableAttribute(s),I.bindBuffer(I.ARRAY_BUFFER,d),I.vertexAttribPointer(s,u,f,c,0,0)}else if(void 0!==a){var x=a[o];if(void 0!==x)switch(x.length){case 2:I.vertexAttrib2fv(s,x);break;case 3:I.vertexAttrib3fv(s,x);break;case 4:I.vertexAttrib4fv(s,x);break;default:I.vertexAttrib1fv(s,x)}}}}O.disableUnusedAttributes()}}(r,l,i),null!==u&&I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,p.buffer));var g=1/0;null===u?void 0!==h&&(g=h.count):g=u.count;var v=i.drawRange.start*f,x=i.drawRange.count*f,_=null===o?0:o.start*f,y=null===o?1/0:o.count*f,b=Ye(v,_),w=Je(g,v+x,_+y)-1,E=Ye(0,w-b+1);if(0!==E){if(a.isMesh)if(!0===r.wireframe)O.setLineWidth(r.wireframeLinewidth*e()),m.setMode(I.LINES);else switch(a.drawMode){case tr:m.setMode(I.TRIANGLES);break;case er:m.setMode(I.TRIANGLE_STRIP);break;case nr:m.setMode(I.TRIANGLE_FAN)}else if(a.isLine){var M=r.linewidth;void 0===M&&(M=1),O.setLineWidth(M*e()),a.isLineSegments?m.setMode(I.LINES):a.isLineLoop?m.setMode(I.LINE_LOOP):m.setMode(I.LINE_STRIP)}else a.isPoints?m.setMode(I.POINTS):a.isSprite&&m.setMode(I.TRIANGLES);i&&i.isInstancedBufferGeometry?0<i.maxInstancedCount&&m.renderInstances(i,b,E):m.render(b,E)}},this.compile=function(t,e){(N=X.get(t,e)).init(),t.traverse(function(t){t.isLight&&(N.pushLight(t),t.castShadow&&N.pushShadow(t))}),N.setupLights(e),t.traverse(function(e){if(e.material)if(Array.isArray(e.material))for(var n=0;n<e.material.length;n++)h(e.material[n],t.fog,e);else h(e.material,t.fog,e)})};var Ft=null,Ot=new T;Ot.setAnimationLoop(function(t){It.isPresenting()||Ft&&Ft(t)}),"undefined"!=typeof window&&Ot.setContext(window),this.setAnimationLoop=function(t){Ft=t,It.setAnimationLoop(t),Ot.start()},this.render=function(t,e){var n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),e&&e.isCamera){if(!st){pt.geometry=null,pt.program=null,pt.wireframe=!1,ft=-1,mt=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),It.enabled&&(e=It.getCamera(e)),(N=X.get(t,e)).init(),t.onBeforeRender(K,t,e,n||ht),Ct.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),Lt.setFromMatrix(Ct),Pt=this.localClippingEnabled,Rt=At.init(this.clippingPlanes,Pt,e),(D=j.get(t,e)).init(),function t(e,n,i,r){if(!1!==e.visible){if(e.layers.test(n.layers))if(e.isGroup)i=e.renderOrder;else if(e.isLight)N.pushLight(e),e.castShadow&&N.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||Lt.intersectsSprite(e)){r&&Dt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ct);var a=k.update(e),o=e.material;D.push(e,a,o,i,Dt.z,null)}}else if(e.isImmediateRenderObject)r&&Dt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ct),D.push(e,null,e.material,i,Dt.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.update(),!e.frustumCulled||Lt.intersectsObject(e)))if(r&&Dt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ct),a=k.update(e),o=e.material,Array.isArray(o))for(var s=a.groups,l=0,c=s.length;l<c;l++){var u=s[l],h=o[u.materialIndex];h&&h.visible&&D.push(e,a,h,i,Dt.z,u)}else o.visible&&D.push(e,a,o,i,Dt.z,null);var d=e.children;for(l=0,c=d.length;l<c;l++)t(d[l],n,i,r)}}(t,e,0,K.sortObjects),!0===K.sortObjects&&D.sort(),Rt&&At.beginShadows();var r=N.state.shadowsArray;Ut.render(r,t,e),N.setupLights(e),Rt&&At.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),Y.render(D,t,e,i);var a=D.opaque,o=D.transparent;if(t.overrideMaterial){var s=t.overrideMaterial;a.length&&c(a,t,e,s),o.length&&c(o,t,e,s)}else a.length&&c(a,t,e),o.length&&c(o,t,e);null!==ht&&(B.updateRenderTargetMipmap(ht),B.updateMultisampleRenderTarget(ht)),O.buffers.depth.setTest(!0),O.buffers.depth.setMask(!0),O.buffers.color.setMask(!0),O.setPolygonOffset(!1),t.onAfterRender(K,t,e),It.enabled&&It.submitFrame(),D=null,N=null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.allocTextureUnit=function(){var t=yt;return t>=F.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+t+" texture units while this GPU supports only "+F.maxTextures),yt+=1,t},this.setTexture2D=function(){var t=!1;return function(e,n){e&&e.isWebGLRenderTarget&&(!t&&(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),B.setTexture2D(e,n)}}(),this.setTexture3D=function(t,e){B.setTexture3D(t,e)},this.setTexture=function(){var t=!1;return function(e,n){t||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),t=!0),B.setTexture2D(e,n)}}(),this.setTextureCube=function(){var t=!1;return function(e,n){e&&e.isWebGLRenderTargetCube&&(!t&&(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?B.setTextureCube(e,n):B.setTextureCubeDynamic(e,n)}}(),this.setFramebuffer=function(t){ut=t},this.getRenderTarget=function(){return ht},this.setRenderTarget=function(t,e,n){ht=t,t&&void 0===G.get(t).__webglFramebuffer&&B.setupRenderTarget(t);var i=ut,r=!1;if(t){var a=G.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(i=a[e||0],r=!0):i=t.isWebGLMultisampleRenderTarget?G.get(t).__webglMultisampledFramebuffer:a,vt.copy(t.viewport),xt.copy(t.scissor),_t=t.scissorTest}else vt.copy(Mt).multiplyScalar(Et),xt.copy(St).multiplyScalar(Et),_t=Tt;if(dt!==i&&(I.bindFramebuffer(I.FRAMEBUFFER,i),dt=i),O.viewport(vt),O.scissor(xt),O.setScissorTest(_t),r){var o=G.get(t.texture);I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,I.TEXTURE_CUBE_MAP_POSITIVE_X+e||0,o.__webglTexture,n||0)}},this.readRenderTargetPixels=function(t,e,n,i,r,a){if(t&&t.isWebGLRenderTarget){var o=G.get(t).__webglFramebuffer;if(o){var s=!1;o!==dt&&(I.bindFramebuffer(I.FRAMEBUFFER,o),s=!0);try{var l=t.texture,c=l.format,u=l.type;if(c!==Si&&Q.convert(c)!==I.getParameter(I.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(u===hi||Q.convert(u)===I.getParameter(I.IMPLEMENTATION_COLOR_READ_TYPE)||u===vi&&(F.isWebGL2||U.get("OES_texture_float")||U.get("WEBGL_color_buffer_float"))||u===xi&&(F.isWebGL2?U.get("EXT_color_buffer_float"):U.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");I.checkFramebufferStatus(I.FRAMEBUFFER)===I.FRAMEBUFFER_COMPLETE?0<=e&&e<=t.width-i&&0<=n&&n<=t.height-r&&I.readPixels(e,n,i,r,Q.convert(c),Q.convert(u),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&I.bindFramebuffer(I.FRAMEBUFFER,dt)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(t,e,n){var i=e.image.width,r=e.image.height,a=Q.convert(e.format);this.setTexture2D(e,0),I.copyTexImage2D(I.TEXTURE_2D,n||0,a,t.x,t.y,i,r,0)},this.copyTextureToTexture=function(t,e,n,i){var r=e.image.width,a=e.image.height,o=Q.convert(n.format),s=Q.convert(n.type);this.setTexture2D(n,0),e.isDataTexture?I.texSubImage2D(I.TEXTURE_2D,i||0,t.x,t.y,r,a,o,s,e.image.data):I.texSubImage2D(I.TEXTURE_2D,i||0,t.x,t.y,o,s,e.image)}}({antialias:!0});ea.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(ea.domElement),ta.position.y=8,ta.rotation.z=.15,ta.rotation.y=-20*Xe/180;var na=new K(new j(100,45.89117562233506,1),new Q({color:Gr,side:sn}));na.position.x=0,na.position.z=-12*(Br+kr)*Br/2,na.position.y=12*Wr/2+2,na.rotation.x=1.7673955598498807,$r.add(na),Le(Array(12)).map(function(){Pe()});var ia=0;(function t(){if(requestAnimationFrame(t),(ia+=Xr)>=Br+kr){ia=0,Pe();var e=!0,n=!1,i=void 0;try{for(var r,a=Kr[0][Symbol.iterator]();!(e=(r=a.next()).done);e=!0){var o=r.value,s=!0,l=!1,c=void 0;try{for(var u,h,d=o[Symbol.iterator]();!(s=(u=d.next()).done);s=!0)h=u.value,$r.remove(h)}catch(e){l=!0,c=e}finally{try{s||null==d.return||d.return()}finally{if(l)throw c}}}}catch(e){n=!0,i=e}finally{try{e||null==a.return||a.return()}finally{if(n)throw i}}Kr.shift()}var f=Wr*(Br/(Br+kr))*Xr,p=jr*(Br/(Br+kr))*Xr;ta.position.z-=Xr,ta.position.y+=f,ta.position.x+=p,na.position.z-=Xr,na.position.y+=f,na.position.x+=p,ea.render($r,ta)})(),document.addEventListener("DOMContentLoaded",function(){ea.domElement.classList.add("active")}),window.addEventListener("resize",function(){ta.aspect=window.innerWidth/window.innerHeight,ta.updateProjectionMatrix(),ea.setSize(window.innerWidth,window.innerHeight)},!1)}]);